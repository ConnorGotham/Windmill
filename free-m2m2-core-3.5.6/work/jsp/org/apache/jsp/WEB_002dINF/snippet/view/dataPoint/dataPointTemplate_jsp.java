/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-04-05 20:19:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.snippet.view.dataPoint;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.serotonin.m2m2.vo.template.DataPointPropertiesTemplateDefinition;

public final class dataPointTemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(14);
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("/WEB-INF/tags/help.tag", Long.valueOf(1554492877701L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar", Long.valueOf(1554492895779L));
    _jspx_dependants.put("/WEB-INF/tags/decl.tagf", Long.valueOf(1554492878082L));
    _jspx_dependants.put("/WEB-INF/serotonin.tld", Long.valueOf(1554492876912L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1554492893592L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar!/META-INF/taglib.tld", Long.valueOf(1042475258000L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar", Long.valueOf(1554492896226L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1539603408000L));
    _jspx_dependants.put("/WEB-INF/tags/img.tag", Long.valueOf(1554492878013L));
    _jspx_dependants.put("/WEB-INF/jsp/include/tech.jsp", Long.valueOf(1554492877585L));
    _jspx_dependants.put("/WEB-INF/m2m2.tld", Long.valueOf(1554492876925L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.serotonin.m2m2.vo.template.DataPointPropertiesTemplateDefinition");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write(_jspx_char_array_0);
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_1);
      if (_jspx_meth_tag_005fhelp_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_2);
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_3);
      if (_jspx_meth_fmt_005fmessage_005f2(_jspx_page_context))
        return;
      out.write(_jspx_char_array_4);
      if (_jspx_meth_fmt_005fmessage_005f3(_jspx_page_context))
        return;
      out.write(_jspx_char_array_5);
      if (_jspx_meth_fmt_005fmessage_005f4(_jspx_page_context))
        return;
      out.write(_jspx_char_array_6);
      if (_jspx_meth_fmt_005fmessage_005f5(_jspx_page_context))
        return;
      out.write(_jspx_char_array_7);
      out.write(_jspx_char_array_8);
      if (_jspx_meth_fmt_005fmessage_005f6(_jspx_page_context))
        return;
      out.write(_jspx_char_array_9);
      if (_jspx_meth_fmt_005fmessage_005f7(_jspx_page_context))
        return;
      out.write(_jspx_char_array_10);
      if (_jspx_meth_fmt_005fmessage_005f8(_jspx_page_context))
        return;
      out.write(_jspx_char_array_11);
      if (_jspx_meth_fmt_005fmessage_005f9(_jspx_page_context))
        return;
      out.write(_jspx_char_array_12);
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f10(_jspx_page_context))
        return;
      out.write(_jspx_char_array_14);
      if (_jspx_meth_fmt_005fmessage_005f11(_jspx_page_context))
        return;
      out.write(_jspx_char_array_15);
      out.write(_jspx_char_array_16);
      if (_jspx_meth_fmt_005fmessage_005f12(_jspx_page_context))
        return;
      out.write(_jspx_char_array_17);
      if (_jspx_meth_fmt_005fmessage_005f13(_jspx_page_context))
        return;
      out.write(_jspx_char_array_18);
      if (_jspx_meth_fmt_005fmessage_005f14(_jspx_page_context))
        return;
      out.write(_jspx_char_array_19);
      if (_jspx_meth_fmt_005fmessage_005f15(_jspx_page_context))
        return;
      out.write(_jspx_char_array_20);
      if (_jspx_meth_fmt_005fmessage_005f16(_jspx_page_context))
        return;
      out.write(_jspx_char_array_21);
      if (_jspx_meth_fmt_005fmessage_005f17(_jspx_page_context))
        return;
      out.write(_jspx_char_array_22);
      if (_jspx_meth_fmt_005fmessage_005f18(_jspx_page_context))
        return;
      out.write(_jspx_char_array_23);
      if (_jspx_meth_fmt_005fmessage_005f19(_jspx_page_context))
        return;
      out.write(_jspx_char_array_24);
      if (_jspx_meth_fmt_005fmessage_005f20(_jspx_page_context))
        return;
      out.write(_jspx_char_array_25);
      if (_jspx_meth_fmt_005fmessage_005f21(_jspx_page_context))
        return;
      out.write(_jspx_char_array_26);
      if (_jspx_meth_fmt_005fmessage_005f22(_jspx_page_context))
        return;
      out.write(_jspx_char_array_27);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(28,46) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("pointEdit.template.propertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f0 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f0);
    try {
      _jspx_th_tag_005fhelp_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(29,63) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f0.setId("dataPointTemplate");
      _jspx_th_tag_005fhelp_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(39,27) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("pointEdit.template.usePropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(46,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("pointEdit.template.editPropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(50,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("pointEdit.template.cancelEditPropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(54,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("pointEdit.template.updatePropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(58,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("pointEdit.template.saveNewPropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(67,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("template.saveNew");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(70,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("common.xid");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(76,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("common.save");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(79,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("common.cancel");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(85,9) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("template.update");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(88,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("pointEdit.template.updateWarning");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(100,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("common.xid");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(107,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("common.update");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(110,6) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("common.cancel");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(126,27) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("common.loading");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(127,26) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("common.noData");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(129,23) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("dsEdit.deviceName");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(130,23) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("common.name");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f19_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(131,23) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("common.xid");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      _jspx_th_fmt_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f20_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(155,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("pointEdit.template.templateSaved");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      _jspx_th_fmt_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f21_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(159,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("pointEdit.template.templateNotSaved");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      _jspx_th_fmt_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f22_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/dataPointTemplate.jsp(186,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("pointEdit.template.selectPropertyTemplate");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      _jspx_th_fmt_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f22_reused);
    }
    return false;
  }
  static char[] _jspx_char_array_0 = "\n\n<style>\n  .dgrid-loading{\n      height: 100%;\n      width: 100%;\n      display: block;\n      background: url('/images/throbber.gif') no-repeat 32px 32px;\n      background-position: center;\n  }\n  .dgrid-no-data{\n  	padding-top: 30px;\n  }\n  .baseOverlay{\n    height: 100%;\n    width: 100%;\n    display: block;\n  }\n</style>\n<div id=\"templateEditorTableBaseLoadingOverlay\" class=\"baseOverlay\">\n	<div id=\"templateEditorTableLoadingOverlay\" class=\"baseOverlay\">\n	<table id=\"templateEditorTable\">\n	  <tr>\n	    <td colspan=\"2\"><span class=\"smallTitle\">".toCharArray();
  static char[] _jspx_char_array_1 = "</span> ".toCharArray();
  static char[] _jspx_char_array_2 = "</td>\n	  </tr>\n	  <tr>\n	    <td colspan=\"2\">\n	    <table>\n	      <tbody id=\"pointPropertyTemplateMessages\" />\n	    </table></td>\n	  </tr>\n	  <tr>\n	    <td class=\"formLabel\">".toCharArray();
  static char[] _jspx_char_array_3 = "</td>\n	    <td class=\"formField\"><input\n	      data-dojo-type=\"dijit/form/CheckBox\" id=\"usePointPropertyTemplate\"\n	      name=\"usePointPropertyTemplate\" /> <input\n	      id=\"pointPropertyTemplate\" />\n	      <button type=\"button\" id='editDataPointTemplateButton'\n	        onClick=\"editDataPointTemplate()\">\n	        ".toCharArray();
  static char[] _jspx_char_array_4 = "\n	      </button>\n	      <button type=\"button\" id='cancelEditDataPointTemplateButton' style='display:none'\n	        onClick=\"cancelEditDataPointTemplate()\">\n	        ".toCharArray();
  static char[] _jspx_char_array_5 = "\n	      </button>\n	      <button type=\"button\" id='updateDataPointTemplateButton'\n	        onClick=\"getPointsUpdatedByTemplate();\" style=\"display:none\">\n	        ".toCharArray();
  static char[] _jspx_char_array_6 = "\n	      </button>\n	      <button type=\"button\" id='saveNewDataPointTemplateButton' style='display:none'\n	        onClick=\"showNewTemplateDialog();\">\n	        ".toCharArray();
  static char[] _jspx_char_array_7 = "\n	      </button>\n	    </td>\n	  </tr>\n	</table>\n  </div>\n</div>\n".toCharArray();
  static char[] _jspx_char_array_8 = "\n<div data-dojo-type=\"dijit.Dialog\" id=\"newTemplateDialog\"\n  title=\"".toCharArray();
  static char[] _jspx_char_array_9 = "\" style=\"width: 300px\">\n  <div class=\"dijitDialogPaneContentArea\">\n    <label for='templateXid'>\n      ".toCharArray();
  static char[] _jspx_char_array_10 = "  \n    </label><input id='templateXid'\n      type='text' />\n  </div>\n  <div class=\"dijitDialogPaneActionBar\">\n    <button id='saveNewDataPointTemplateButton' onClick='saveNewDataPointTemplate()'>\n      ".toCharArray();
  static char[] _jspx_char_array_11 = "\n    </button>\n    <button onClick=\"dijit.byId('newTemplateDialog').hide()\">\n      ".toCharArray();
  static char[] _jspx_char_array_12 = "\n    </button>\n  </div>\n</div>\n".toCharArray();
  static char[] _jspx_char_array_13 = "\n<div data-dojo-type=\"dijit.Dialog\" id=\"updateTemplateDialog\"\n  title=\"".toCharArray();
  static char[] _jspx_char_array_14 = "\" style=\"width: 400px\">\n  <div class=\"dijitDialogPaneContentArea\">\n    <span style=\"color:red\">\n      ".toCharArray();
  static char[] _jspx_char_array_15 = "\n    </span>\n    <br>\n    ".toCharArray();
  static char[] _jspx_char_array_16 = "\n    <div id=\"templateChangeAffectsPointsListBaseLoadingOverlay\" class=\"baseOverlay\">\n        <div id=\"templateChangeAffectsPointsListLoadingOverlay\" class=\"baseOverlay\">\n          <div id=\"templateChangeAffectsPointsList\"></div>\n        </div>\n      </div>\n	\n    <div style=\"width: 300px; margin: 5px auto\">\n      <label for='updateTemplateXid'>\n        ".toCharArray();
  static char[] _jspx_char_array_17 = "\n      </label>\n      <input id='updateTemplateXid'type='text' />\n    </div>\n  </div>\n  <div class=\"dijitDialogPaneActionBar\">\n    <button id='confirmUpdateDataPointTemplateButton' onClick='updateDataPointTemplate()'>\n      ".toCharArray();
  static char[] _jspx_char_array_18 = "\n    </button>\n    <button onClick=\"dijit.byId('updateTemplateDialog').hide()\">\n      ".toCharArray();
  static char[] _jspx_char_array_19 = "\n    </button>\n  </div>\n</div>\n<script type=\"text/javascript\">\n	dojo.require(\"dojo.dom\");\n	dojo.require(\"dojo.dom-style\");\n	dojo.require(\"dijit.Dialog\");\n	dojo.require(\"dojo.store.Memory\");\n\n	//Setup the All Points Grid\n  	var updatedTemplatePointsGrid;\n  	require(['dgrid/OnDemandGrid'], function(OnDemandGrid){\n  		updatedTemplatePointsGrid = new OnDemandGrid({\n  		   showHeader: true,\n  	       store: new dojo.store.Memory(),\n  	       loadingMessage: '".toCharArray();
  static char[] _jspx_char_array_20 = "',\n  	       noDataMessage: '".toCharArray();
  static char[] _jspx_char_array_21 = "',\n  	       columns: [\n  	           {label: '".toCharArray();
  static char[] _jspx_char_array_22 = "', field: 'deviceName'},\n  	           {label: '".toCharArray();
  static char[] _jspx_char_array_23 = "', field: 'name'},\n  	           {label: '".toCharArray();
  static char[] _jspx_char_array_24 = "', field: 'xid'}\n  	       ]\n  	   	}, 'templateChangeAffectsPointsList');\n  		//Dirty hack as the headers don't show (bug #1170 on github)\n  		updatedTemplatePointsGrid.on('dgrid-refresh-complete',function(){\n  			updatedTemplatePointsGrid.resize();\n  			});\n  		updatedTemplatePointsGrid.startup();\n  	});	\n	\n	function showNewTemplateDialog() {\n		dijit.byId('newTemplateDialog').show();\n		$set('templateXid',\"\");\n	}\n	function showUpdateTemplateDialog() {\n		var template = dataPointTemplatePicker.item;\n		if(template != null)\n			$set('updateTemplateXid', template.xid);\n		dijit.byId('updateTemplateDialog').show();\n	}\n	//Global variables used on the page\n	var NEW_ID = -1;\n	var dataPointTemplatesList, dataPointTemplatePicker, newTemplateDialog, usePointPropertyTemplate, dataPointTemplateDataTypeId;\n	var savedMessageArray = [ {\n		genericMessage : '".toCharArray();
  static char[] _jspx_char_array_25 = "',\n		level : 'error' //So message is RED like the other save messages\n	} ];\n	var templateNotSavedMessage = {\n		genericMessage : '".toCharArray();
  static char[] _jspx_char_array_26 = "',\n		level : 'error'\n	}\n\n	/**\n	 * Initialize the Template Inputs\n	 */\n	function initDataPointTemplates() {\n\n		//Create the store\n		dataPointTemplatesList = new dojo.store.Memory({\n			idProperty : \"id\",\n			valueProperty : \"xid\",\n			data : []\n		});\n\n		//Create the base unit input\n		dataPointTemplatePicker = new dijit.form.ComboBox(\n				{\n					store : dataPointTemplatesList,\n					autoComplete : false,\n					style : \"width: 250px;\",\n					name: \"xid\",\n					searchAttr: \"xid\",\n					queryExpr : \"*${0}*\",\n					highlightMatch : \"all\",\n					required : false,\n					placeHolder : '".toCharArray();
  static char[] _jspx_char_array_27 = "',\n					onChange : function(templateName) {\n						if (dataPointTemplatePicker.item != null){\n							loadFromDataPointTemplate(dataPointTemplatePicker.item);\n    						//Disable all inputs each time because some of the \n    						// Settings areas re-enable inputs on load of new types\n    						disableDataPointInputs();\n						}\n					}\n				}, \"pointPropertyTemplate\");\n\n		//Setup to watch the checkbox\n		usePointPropertyTemplate = dijit.byId('usePointPropertyTemplate');\n		usePointPropertyTemplate.watch('checked', function(value) {\n			if (usePointPropertyTemplate.checked) {\n				//Using a template\n				enableTemplateControls();\n				if (dataPointTemplatePicker.item != null){\n					loadFromDataPointTemplate(dataPointTemplatePicker.item);\n					//Disable all inputs each time because some of the \n					// Settings areas re-enable inputs on load of new types\n					disableDataPointInputs();\n				} else if(dataPointTemplatePicker.store.data.length > 0) {\n					dataPointTemplatePicker.set(\"item\", dataPointTemplatePicker.store.data[0]);\n					loadFromDataPointTemplate(dataPointTemplatePicker.item);\n					disableDataPointInputs();\n				}\n			} else {\n				//Not Using Template\n				disableTemplateControls();\n				enableDataPointInputs();\n			}\n		});\n	}\n\n	/**\n	 * Callback to know when the data type has changed\n	 */\n	function templateDataTypeChanged(newDataTypeId) {\n		\n		//Reload the template list with only available templates\n		dataPointTemplateDataTypeId = newDataTypeId;\n		TemplateDwr.getDataPointTemplates(newDataTypeId, function(response) {\n			dataPointTemplatesList.setData(response.data.templates);\n		});\n		//If we are changing data types we must disable our use of a template\n		usePointPropertyTemplate.set('checked', false);\n		dataPointTemplatePicker.reset(); \n	}\n	dataTypeChangedCallbacks.push(templateDataTypeChanged);\n\n	/**\n	 * Set the template from the DataPointVO\n	 */\n	function setDataPointTemplate(vo) {\n		//Clear out my messages\n		hideGenericMessages(\"pointPropertyTemplateMessages\");\n		//Save as reference\n		dataPointTemplateDataTypeId = vo.pointLocator.dataTypeId;\n		//Reload the template list with only available templates\n		TemplateDwr.getDataPointTemplates(vo.pointLocator.dataTypeId, function(\n				response) {\n			dataPointTemplatesList.setData(response.data.templates);\n			if (vo.templateId > 0) {\n				enableTemplateControls();\n				var template = dataPointTemplatesList.get(vo.templateId);\n				//This order is important so that the first check doesn't load the template\n				dataPointTemplatePicker.set('_onChangeActive', false);\n				dataPointTemplatePicker.set('item', template);\n				dataPointTemplatePicker.set('_onChangeActive', true);\n				usePointPropertyTemplate.set('checked', true);\n			} else {\n				if(usePointPropertyTemplate.get('checked')){\n					usePointPropertyTemplate.set('checked', false);\n				}else{\n					//Watch won't fire so just disable the template controls and enable inputs\n					//Not Using Template\n					disableTemplateControls();\n					enableDataPointInputs();\n				}\n			}\n		});\n\n	}\n\n	/**\n	 * Add a template to the DataPointVO if necessary\n	 */\n	function getDataPointTemplate(vo) {\n		if (usePointPropertyTemplate.get('checked') == true) {\n			if (dataPointTemplatePicker.item != null)\n				vo.templateId = dataPointTemplatePicker.item.id;\n			else\n				vo.templateId = null; //No template in use\n		} else {\n			vo.templateId = null; //No template in use\n		}\n	}\n\n	/**\n	 * Method to enable template controls\n	 */\n	 function enableTemplateControls(){\n		/* Disable the picker */\n		dataPointTemplatePicker.set('disabled', false);\n		var updateTemplateButton = dojo.byId('updateDataPointTemplateButton');\n		updateTemplateButton.disabled = false;\n		var saveTemplateButton = dojo.byId('saveNewDataPointTemplateButton');\n		saveTemplateButton.disabled = false;\n		show('editDataPointTemplateButton');\n		hide('cancelEditDataPointTemplateButton');\n		hide('updateDataPointTemplateButton');\n		hide('saveNewDataPointTemplateButton');\n	}\n	\n	/**\n	 * Method to enable template controls\n	 */\n	 function disableTemplateControls(){\n		/* Disable the picker */\n		dataPointTemplatePicker.set('disabled', true);\n		var updateTemplateButton = dojo.byId('updateDataPointTemplateButton');\n		updateTemplateButton.disabled = true;\n		var saveTemplateButton = dojo.byId('saveNewDataPointTemplateButton');\n		saveTemplateButton.disabled = true;\n		hide('editDataPointTemplateButton');\n		hide('cancelEditDataPointTemplateButton');\n		hide('updateDataPointTemplateButton');\n		hide('saveNewDataPointTemplateButton');\n		dataPointTemplatePicker.reset(); \n	}\n	\n	/**\n	 * Method to enable all data point inputs\n	 **/\n	function enableDataPointInputs() {\n		/* Enable all inputs here */\n		enablePointProperties(dataPointTemplateDataTypeId);\n		enableLoggingProperties(dataPointTemplateDataTypeId);\n		textRendererEditor.enableInputs(dataPointTemplateDataTypeId);\n		chartRendererEditor.enableInputs(dataPointTemplateDataTypeId);\n	}\n	\n	function disableDataPointInputs(){\n		disablePointProperties(dataPointTemplateDataTypeId);\n		disableLoggingProperties(dataPointTemplateDataTypeId);\n		textRendererEditor.disableInputs(dataPointTemplateDataTypeId);\n		chartRendererEditor.disableInputs(dataPointTemplateDataTypeId);\n	}\n\n	function editDataPointTemplate(){\n		hide('editDataPointTemplateButton');\n		show('cancelEditDataPointTemplateButton');\n		show('updateDataPointTemplateButton');\n		show('saveNewDataPointTemplateButton');\n		enableDataPointInputs();\n	}\n	\n	function cancelEditDataPointTemplate(){\n		show('editDataPointTemplateButton');\n		hide('cancelEditDataPointTemplateButton');\n		hide('updateDataPointTemplateButton');\n		hide('saveNewDataPointTemplateButton');\n		if (dataPointTemplatePicker.item != null)\n			loadFromDataPointTemplate(dataPointTemplatePicker.item);\n		disableDataPointInputs();\n	}\n	\n	/*\n	 * Get a list of points updated by the template if \n	 * they were to save it.\n	 */\n	function getPointsUpdatedByTemplate(){\n		var template = dataPointTemplatePicker.item;\n		if (template != null) {\n			//Check to see that something is selected\n			showUpdateTemplateDialog();\n			showLoading('templateChangeAffectsPointsList');\n			TemplateDwr.findPointsWithTemplate(template, function(response){\n				\n				var allPointsStore = new dojo.store.Memory({\n	       			idProperty: 'id',\n	       			data: response.data.dataPoints\n	       		});\n				updatedTemplatePointsGrid.set('showHeader', true);\n				updatedTemplatePointsGrid.set('store', allPointsStore);		  			\n				hideLoading('templateChangeAffectsPointsList');\n			});\n		}\n	}\n	\n	/**\n	 * Method to save currently loaded template if it exists\n	 **/\n	function updateDataPointTemplate() {\n		hideContextualMessages(\"pointDetails\");\n		//Close Popup\n		dijit.byId('updateTemplateDialog').hide();\n		//Get currently selected template\n		var template = dataPointTemplatePicker.item;\n		//Check to see that something is selected\n		if (template != null) {\n			//Set the name\n			template.xid = $get('updateTemplateXid');\n			//Load template info from inputs\n			loadIntoDataPointTemplate(template);\n			//Save the template\n			//Start the loading gif again\n			showLoading('templateEditorTable');\n			TemplateDwr.saveDataPointTemplate(template, function(response) {\n				if (response.hasMessages) {\n					response.messages.push(templateNotSavedMessage);\n					showTemplateMessages(response.messages,\n							'pointPropertyTemplateMessages');\n				} else {\n					showTemplateMessages(savedMessageArray,\n							'pointPropertyTemplateMessages');\n					//TODO Show messages for each XID updated: xidsUpdated\n					//TODO Show messages for each XID failed: failedXidMap<xid,why>\n					show('editDataPointTemplateButton');\n					hide('cancelEditDataPointTemplateButton');\n					hide('updateDataPointTemplateButton');\n					hide('saveNewDataPointTemplateButton');\n					disableDataPointInputs();\n					dataPointTemplatePicker.set('_onChangeActive', false);\n					dataPointTemplatePicker.set('item', template);\n					dataPointTemplatePicker.set('_onChangeActive', true);\n				}\n				hideLoading('templateEditorTable');\n			});\n		} else {\n			//TODO this can happen when someone enters a name into the dropdown and there is no matching template\n			var messages = [ templateNotSavedMessage ];\n			showTemplateMessages(messages, 'pointPropertyTemplateMessages');\n		}\n\n	}\n\n	/**\n	 * Method to save currently loaded template if it exists\n	 **/\n	function saveNewDataPointTemplate() {\n		hideContextualMessages(\"pointDetails\");\n		//Close Popup\n		dijit.byId('newTemplateDialog').hide();\n\n		//Get currently selected template\n		//Could create a DWR Call to request a new template of this type\n		// then access the module registry and create a new one and return it\n		TemplateDwr.getNewDataPointTemplate(function(response){\n			var template = response.data.vo;\n			template.xid = $get('templateXid');\n			//Load the values into the template from the input\n			loadIntoDataPointTemplate(template);\n\n			//Check to see that something is selected\n			if (template != null) {\n				TemplateDwr.saveDataPointTemplate(template, function(response) {\n					if (response.hasMessages) {\n						response.messages.push(templateNotSavedMessage);\n						showTemplateMessages(response.messages,\n								'pointPropertyTemplateMessages');\n					} else {\n						template.id = response.data.id;\n						dataPointTemplatesList.put(template);\n						//Select the template in the list\n						dataPointTemplatePicker.set('item', template);\n						showTemplateMessages(savedMessageArray,\n								'pointPropertyTemplateMessages');\n						show('editDataPointTemplateButton');\n						hide('cancelEditDataPointTemplateButton');\n						hide('updateDataPointTemplateButton');\n						hide('saveNewDataPointTemplateButton');\n						disableDataPointInputs();\n					}\n				});\n			}\n		});\n\n\n	}\n\n	/**\n	 *  Load the input values from the page into the template\n	 */\n	function loadIntoDataPointTemplate(template) {\n\n		//Set the Data Type ID\n		template.dataTypeId = dataPointTemplateDataTypeId;\n\n		//Not using units anymore getPointProperties(template);\n		template.chartColour = dojo.byId(\"chartColour\").value;\n		template.plotType = dojo.byId(\"plotType\").value;\n		template.simplifyType = dojo.byId(\"simplifyType\").value;\n		template.simplifyTolerance = dojo.byId(\"simplifyTolerance\").value;\n		template.simplifyTarget = dojo.byId(\"simplifyTarget\").value;\n		template.rollup = dojo.byId(\"rollup\").value;\n		template.preventSetExtremeValues = dijit.byId(\"preventSetExtremeValues\").get('checked');\n		template.setExtremeLowLimit = dojo.byId(\"setExtremeLowLimit\").value;\n		template.setExtremeHighLimit = dojo.byId(\"setExtremeHighLimit\").value;\n\n		getLoggingProperties(template);\n\n		getTextRenderer(template);\n		getChartRenderer(template);\n\n		//Delete back off the un-necessary properties\n		delete template.unitString;\n		delete template.renderedUnitString;\n		delete template.integralUnitString;\n		delete template.pointLocator;\n	}\n\n	/**\n	 * Load the values from the template into the inputs on the page\n	 */\n	function loadFromDataPointTemplate(template) {\n\n		//Some massaging because our members are slightly different to DataPointVO\n		template.pointLocator = {\n			dataTypeId : template.dataTypeId\n		};\n		\n		//For the point properties (not using units anymore)\n		dojo.byId(\"chartColour\").value = template.chartColour;\n		dojo.byId(\"plotType\").value = template.plotType;\n		dojo.byId(\"simplifyType\").value = template.simplifyType;\n		dojo.byId(\"simplifyTolerance\").value = template.simplifyTolerance;\n		dojo.byId(\"simplifyTarget\").value = template.simplifyTarget;\n		dojo.byId(\"rollup\").value = template.rollup;\n		\n		setLoggingProperties(template);\n		setTextRenderer(template);\n		setChartRenderer(template);\n	}\n\n	function showTemplateMessages(/*ProcessResult.messages*/messages, /*tbody*/\n			genericMessageNode) {\n		var i, m, field, node, next;\n		var genericMessages = new Array();\n		for (i = 0; i < messages.length; i++) {\n			m = messages[i];\n			if (m.contextKey) {\n				node = $(m.contextKey + \"Ctxmsg\");\n				if (!node) {\n					field = $(m.contextKey);\n					if (field)\n						node = createContextualMessageNode(field, m.contextKey);\n					else {\n						m.genericMessage = m.contextKey + \" - \"\n								+ m.contextualMessage;\n						genericMessages[genericMessages.length] = m;\n					}\n				}\n\n				if (node) {\n					node.innerHTML = m.contextualMessage;\n					show(node);\n				}\n			} else\n				genericMessages[genericMessages.length] = m;\n		}\n\n		if (genericMessages.length > 0) {\n			if (!genericMessageNode) {\n				for (i = 0; i < genericMessages.length; i++)\n					alert(genericMessages[i].genericMessage);\n			} else {\n				genericMessageNode = getNodeIfString(genericMessageNode);\n				if (genericMessageNode.tagName == \"TBODY\") {\n					dwr.util.removeAllRows(genericMessageNode);\n					dwr.util\n							.addRows(\n									genericMessageNode,\n									genericMessages,\n									[ function(data) {\n										return data.genericMessage;\n									} ],\n									{\n										cellCreator : function(options) {\n											var td = document\n													.createElement(\"td\");\n											if (options.rowData.level == 'error')\n												td.className = \"formError\";\n											else if (options.rowData.level == 'warning')\n												td.className = \"formWarning\";\n											else if (options.rowData.level == 'info')\n												td.className = \"formInfo\";\n											return td;\n										}\n									});\n					show(genericMessageNode);\n				} else if (genericMessageNode.tagName == \"DIV\"\n						|| genericMessageNode.tagName == \"SPAN\") {\n					var content = \"\";\n					for (var i = 0; i < genericMessages.length; i++)\n						content += genericMessages[i].genericMessage + \"<br/>\";\n					genericMessageNode.innerHTML = content;\n				}\n			}\n		}\n	}\n	\n  	/**\n  	 * Show Loading Graphic\n  	 */\n  	function showLoading(id){\n  		require([\"dojo/dom\", \"dojo/dom-style\",], function(dom, style){\n  		var loading = dom.byId(id + 'LoadingOverlay');\n  		if(loading !== null){\n  			style.set(loading, {\n	  				'z-index': '1002',\n	  				background: \"url('/images/throbber.gif') no-repeat 32px 32px\",\n	  				'background-position': 'center'\n  			});\n  		}\n  		\n  		loading = dom.byId(id + 'BaseLoadingOverlay');\n  		if(loading !== null){\n  	  		style.set(loading, {\n  	  				'z-index': '1001',\n  	  				opacity: '.5'\n  	  			});\n  	  	}\n  		});\n  	}\n\n  	/**\n  	 * Hide Loading Graphic\n  	 */\n  	function hideLoading(id){\n  		require([\"dojo/dom\", \"dojo/dom-style\",], function(dom, style){\n  		var loading = dom.byId(id + 'LoadingOverlay');\n  		if(loading !== null){\n  			style.set(loading, {\n	  				'z-index': '-1',\n	  				background: ''\n	  			});\n  		}\n  		\n  		loading = dom.byId(id + 'BaseLoadingOverlay');\n  		if(loading !== null){\n  			style.set(loading, {\n	  				'z-index': '-1',\n	  				opacity: ''\n	  			});\n  		}\n  		});\n  	}\n	\n</script>\n\n".toCharArray();
}
