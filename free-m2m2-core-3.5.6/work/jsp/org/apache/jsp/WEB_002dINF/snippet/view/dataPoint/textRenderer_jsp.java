/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-04-05 20:19:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.snippet.view.dataPoint;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.serotonin.m2m2.DataTypes;

public final class textRenderer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(14);
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("/WEB-INF/tags/help.tag", Long.valueOf(1554492877701L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar", Long.valueOf(1554492895779L));
    _jspx_dependants.put("/WEB-INF/tags/decl.tagf", Long.valueOf(1554492878082L));
    _jspx_dependants.put("/WEB-INF/serotonin.tld", Long.valueOf(1554492876912L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1554492893592L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar!/META-INF/taglib.tld", Long.valueOf(1042475258000L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar", Long.valueOf(1554492896226L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1539603408000L));
    _jspx_dependants.put("/WEB-INF/tags/img.tag", Long.valueOf(1554492878013L));
    _jspx_dependants.put("/WEB-INF/jsp/include/tech.jsp", Long.valueOf(1554492877585L));
    _jspx_dependants.put("/WEB-INF/m2m2.tld", Long.valueOf(1554492876925L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.serotonin.m2m2.DataTypes");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write(_jspx_char_array_0);
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_1);
      if (_jspx_meth_tag_005fhelp_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_2);
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_3);
      if (_jspx_meth_fmt_005fmessage_005f2(_jspx_page_context))
        return;
      out.write(_jspx_char_array_4);
      if (_jspx_meth_fmt_005fmessage_005f3(_jspx_page_context))
        return;
      out.write(_jspx_char_array_5);
      if (_jspx_meth_fmt_005fmessage_005f4(_jspx_page_context))
        return;
      out.write(_jspx_char_array_6);
      if (_jspx_meth_tag_005fhelp_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_7);
      if (_jspx_meth_fmt_005fmessage_005f5(_jspx_page_context))
        return;
      out.write(_jspx_char_array_8);
      if (_jspx_meth_fmt_005fmessage_005f6(_jspx_page_context))
        return;
      out.write(_jspx_char_array_9);
      if (_jspx_meth_fmt_005fmessage_005f7(_jspx_page_context))
        return;
      out.write(_jspx_char_array_10);
      if (_jspx_meth_fmt_005fmessage_005f8(_jspx_page_context))
        return;
      out.write(_jspx_char_array_11);
      if (_jspx_meth_fmt_005fmessage_005f9(_jspx_page_context))
        return;
      out.write(_jspx_char_array_12);
      if (_jspx_meth_fmt_005fmessage_005f10(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f11(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f12(_jspx_page_context))
        return;
      out.write(_jspx_char_array_14);
      if (_jspx_meth_fmt_005fmessage_005f13(_jspx_page_context))
        return;
      out.write(_jspx_char_array_15);
      if (_jspx_meth_tag_005fimg_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_16);
      if (_jspx_meth_fmt_005fmessage_005f14(_jspx_page_context))
        return;
      out.write(_jspx_char_array_17);
      if (_jspx_meth_tag_005fhelp_005f2(_jspx_page_context))
        return;
      out.write(_jspx_char_array_18);
      if (_jspx_meth_fmt_005fmessage_005f15(_jspx_page_context))
        return;
      out.write(_jspx_char_array_19);
      if (_jspx_meth_fmt_005fmessage_005f16(_jspx_page_context))
        return;
      out.write(_jspx_char_array_20);
      if (_jspx_meth_fmt_005fmessage_005f17(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f18(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f19(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f20(_jspx_page_context))
        return;
      out.write(_jspx_char_array_21);
      if (_jspx_meth_fmt_005fmessage_005f21(_jspx_page_context))
        return;
      out.write(_jspx_char_array_22);
      if (_jspx_meth_tag_005fimg_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_23);
      if (_jspx_meth_fmt_005fmessage_005f22(_jspx_page_context))
        return;
      out.write(_jspx_char_array_24);
      if (_jspx_meth_tag_005fhelp_005f3(_jspx_page_context))
        return;
      out.write(_jspx_char_array_18);
      if (_jspx_meth_fmt_005fmessage_005f23(_jspx_page_context))
        return;
      out.write(_jspx_char_array_25);
      out.print( DataTypes.ALPHANUMERIC );
      out.write(_jspx_char_array_26);
      out.print( DataTypes.BINARY );
      out.write(_jspx_char_array_26);
      out.print( DataTypes.MULTISTATE );
      out.write(_jspx_char_array_26);
      out.print( DataTypes.NUMERIC );
      out.write(_jspx_char_array_27);
      out.print( DataTypes.IMAGE );
      out.write(_jspx_char_array_28);
      if (_jspx_meth_fmt_005fmessage_005f24(_jspx_page_context))
        return;
      out.write(_jspx_char_array_29);
      if (_jspx_meth_fmt_005fmessage_005f25(_jspx_page_context))
        return;
      out.write(_jspx_char_array_30);
      if (_jspx_meth_fmt_005fmessage_005f26(_jspx_page_context))
        return;
      out.write(_jspx_char_array_31);
      if (_jspx_meth_fmt_005fmessage_005f27(_jspx_page_context))
        return;
      out.write(_jspx_char_array_32);
      if (_jspx_meth_fmt_005fmessage_005f28(_jspx_page_context))
        return;
      out.write(_jspx_char_array_33);
      if (_jspx_meth_fmt_005fmessage_005f29(_jspx_page_context))
        return;
      out.write(_jspx_char_array_34);
      if (_jspx_meth_fmt_005fmessage_005f30(_jspx_page_context))
        return;
      out.write(_jspx_char_array_35);
      if (_jspx_meth_fmt_005fmessage_005f31(_jspx_page_context))
        return;
      out.write(_jspx_char_array_36);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(10,31) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("pointEdit.text.props");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f0 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f0);
    try {
      _jspx_th_tag_005fhelp_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(11,6) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f0.setId("textRenderers");
      _jspx_th_tag_005fhelp_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(15,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("pointEdit.text.type");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(23,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("pointEdit.text.suffix");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(26,41) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("pointEdit.props.useUnitAsSuffix");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(36,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("pointEdit.text.format");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f1 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f1);
    try {
      _jspx_th_tag_005fhelp_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(39,42) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f1.setId("datetimeFormats");
      _jspx_th_tag_005fhelp_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(45,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("pointEdit.text.conversionExponent");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(52,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("pointEdit.text.zero");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(61,107) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("pointEdit.text.default");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(72,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("pointEdit.text.one");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(81,106) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("pointEdit.text.default");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(97,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("pointEdit.text.key");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(98,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("pointEdit.text.text");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(99,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("pointEdit.text.colour");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(108,107) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("pointEdit.text.default");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fimg_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:img
    org.apache.jsp.tag.web.img_tag _jspx_th_tag_005fimg_005f0 = new org.apache.jsp.tag.web.img_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fimg_005f0);
    try {
      _jspx_th_tag_005fimg_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(115,16) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f0.setId("multistateValueAdd");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(115,16) name = png type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f0.setPng("add");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(115,16) name = title type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f0.setTitle("common.add");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(115,16) name = onclick type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f0.setOnclick("return textRendererEditor.addMultistateValue();");
      _jspx_th_tag_005fimg_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fimg_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(129,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("pointEdit.text.format");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f2 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f2);
    try {
      _jspx_th_tag_005fhelp_005f2.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(132,10) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f2.setId("numberFormats");
      _jspx_th_tag_005fhelp_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(136,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("pointEdit.text.suffix");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(146,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("pointEdit.text.suffix");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(155,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("pointEdit.text.from");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(156,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("pointEdit.text.to");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f19_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(157,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("pointEdit.text.text");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      _jspx_th_fmt_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f20_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(158,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("pointEdit.text.colour");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      _jspx_th_fmt_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f21_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(168,102) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("pointEdit.text.default");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      _jspx_th_fmt_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fimg_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:img
    org.apache.jsp.tag.web.img_tag _jspx_th_tag_005fimg_005f1 = new org.apache.jsp.tag.web.img_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fimg_005f1);
    try {
      _jspx_th_tag_005fimg_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(175,16) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f1.setId("addRangeRendererRange");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(175,16) name = png type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f1.setPng("add");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(175,16) name = title type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f1.setTitle("common.add");
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(175,16) name = onclick type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fimg_005f1.setOnclick("return textRendererEditor.addRangeValue();");
      _jspx_th_tag_005fimg_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fimg_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f22_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(185,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("pointEdit.text.format");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      _jspx_th_fmt_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f3 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f3);
    try {
      _jspx_th_tag_005fhelp_005f3.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(188,10) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f3.setId("datetimeFormats");
      _jspx_th_tag_005fhelp_005f3.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f23_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(192,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("pointEdit.text.conversionExponent");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      _jspx_th_fmt_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f24_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(525,21) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("pointEdit.text.errorParsingKey");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      _jspx_th_fmt_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f25_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(530,25) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("pointEdit.text.listContainsKey");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
      _jspx_th_fmt_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f25_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f26_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f26.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(578,37) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f26.setKey("common.delete");
      int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
      _jspx_th_fmt_005fmessage_005f26_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f26, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f26_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f27(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f27 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f27_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f27.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(603,21) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f27.setKey("pointEdit.text.errorParsingFrom");
      int _jspx_eval_fmt_005fmessage_005f27 = _jspx_th_fmt_005fmessage_005f27.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
      _jspx_th_fmt_005fmessage_005f27_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f27, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f27_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f28(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f28 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f28_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f28.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(610,21) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f28.setKey("pointEdit.text.errorParsingTo");
      int _jspx_eval_fmt_005fmessage_005f28 = _jspx_th_fmt_005fmessage_005f28.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
      _jspx_th_fmt_005fmessage_005f28_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f28, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f28_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f29(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f29 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f29_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f29.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(615,21) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f29.setKey("pointEdit.text.toGreaterThanFrom");
      int _jspx_eval_fmt_005fmessage_005f29 = _jspx_th_fmt_005fmessage_005f29.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
      _jspx_th_fmt_005fmessage_005f29_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f29, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f29_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f30(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f30 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f30_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f30.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(621,25) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f30.setKey("pointEdit.text.listContainsRange");
      int _jspx_eval_fmt_005fmessage_005f30 = _jspx_th_fmt_005fmessage_005f30.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
      _jspx_th_fmt_005fmessage_005f30_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f30, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f30_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f31(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f31 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f31_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f31.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f31.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/textRenderer.jsp(675,49) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f31.setKey("common.delete");
      int _jspx_eval_fmt_005fmessage_005f31 = _jspx_th_fmt_005fmessage_005f31.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f31);
      _jspx_th_fmt_005fmessage_005f31_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f31, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f31_reused);
    }
    return false;
  }
  static char[] _jspx_char_array_0 = "\n\n<div>\n  <table>\n    <tr><td colspan=\"3\">\n      <span class=\"smallTitle\">".toCharArray();
  static char[] _jspx_char_array_1 = "</span>\n      ".toCharArray();
  static char[] _jspx_char_array_2 = "\n    </td></tr>\n    \n    <tr>\n      <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_3 = "</td>\n      <td class=\"formField\">\n        <input id=\"textRendererSelect\" />\n      </td>\n    </tr>\n    \n    <tbody id=\"suffixRow\">\n      <tr>\n        <td class=\"formLabel\">".toCharArray();
  static char[] _jspx_char_array_4 = "</td>\n        <td class=\"formField\">\n            <input id=\"useUnitAsSuffix\" data-dojo-type=\"dijit/form/CheckBox\" type=\"checkbox\" />\n            <label for=\"useUnitAsSuffix\">".toCharArray();
  static char[] _jspx_char_array_5 = "</label>\n        </td>\n      </tr>\n      <tr>\n        <td></td>\n        <td class=\"formField\"><input id=\"suffix\" type=\"text\"/></td>\n      </tr>\n    </tbody>\n    <tbody id=\"formatRow\" style=\"display:none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_6 = "</td>\n        <td class=\"formField\">\n          <input id=\"format\" type=\"text\"/>\n          <div id=\"datetimeFormatHelpDiv\">".toCharArray();
  static char[] _jspx_char_array_7 = "</div>\n        </td>\n      </tr>\n     </tbody>\n    <tbody id=\"conversionExponentRow\">\n       <tr>\n        <td class=\"formLabel\">".toCharArray();
  static char[] _jspx_char_array_8 = "</td>\n        <td class=\"formField\"><input id=\"conversionExponent\" type=\"text\"/></td>\n      </tr>\n    </tbody>\n    \n      <tbody id=\"binaryValuesRow\" style=\"display:none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_9 = "</td>\n        <td class=\"formField\">\n          <table cellspacing=\"0\" cellpadding=\"0\">\n            <tr>\n              <td valign=\"top\"><input id=\"zeroLabel\" type=\"text\"/></td>\n              <td width=\"10\"></td>\n              <td valign=\"top\" id=\"zeroColourInputRow\">\n                <div>\n                    <input id=\"zeroColourText\" data-method-name=\"handlerBinaryZeroColour\">\n                    <a href=\"#\" onclick=\"textRendererEditor.handlerBinaryZeroColour(null); return false;\">(".toCharArray();
  static char[] _jspx_char_array_10 = ")</a>\n                </div>\n                <div>\n                    <div dojoType=\"dijit.ColorPalette\" palette=\"7x10\" id=\"zeroColour\"></div>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_11 = "</td>\n        <td class=\"formField\">\n          <table cellspacing=\"0\" cellpadding=\"0\">\n            <tr>\n              <td valign=\"top\"><input id=\"oneLabel\" type=\"text\"/></td>\n              <td width=\"10\"></td>\n              <td valign=\"top\" id=\"oneColourInputRow\">\n                <div>\n                    <input id=\"oneColourText\" data-method-name=\"handlerBinaryOneColour\">\n                    <a href=\"#\" onclick=\"textRendererEditor.handlerBinaryOneColour(null); return false;\">(".toCharArray();
  static char[] _jspx_char_array_12 = ")</a>\n                </div>\n                <div>\n                    <div dojoType=\"dijit.ColorPalette\" palette=\"7x10\" id=\"oneColour\"></div>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </tbody>\n    <tbody id=\"multistateValuesRow\" style=\"display:none;\">\n      <tr>\n        <td colspan=\"2\">\n          <table id=\"multistateRendererTable\">\n            <tr>\n              <th>".toCharArray();
  static char[] _jspx_char_array_13 = "</th>\n              <th>".toCharArray();
  static char[] _jspx_char_array_14 = "</th>\n              <th></th>\n            </tr>\n            <tr>\n              <td valign=\"top\"><input type=\"text\" id=\"textRendererMultistateKey\" value=\"\" class=\"formVeryShort\"/></td>\n              <td valign=\"top\"><input type=\"text\" id=\"textRendererMultistateText\" value=\"\" class=\"formShort\"/></td>\n              <td valign=\"top\">\n                <div>\n                    <input id=\"textRendererMultistateColourText\" data-method-name=\"handlerMultistateColour\">\n                    <a href=\"#\" onclick=\"textRendererEditor.handlerMultistateColour(null); return false;\">(".toCharArray();
  static char[] _jspx_char_array_15 = ")</a>\n                </div>\n                <div>\n                    <div dojoType=\"dijit.ColorPalette\" palette=\"7x10\" id=\"textRendererMultistateColour\"></div>\n                </div>\n              </td>\n              <td valign=\"top\">\n                ".toCharArray();
  static char[] _jspx_char_array_16 = "\n              </td>\n            </tr>\n            <tbody id=\"textRendererMultistateTable\"></tbody>\n          </table>\n        </td>\n      </tr>\n    </tbody>  \n    \n    \n    \n    <!--  I think we can delete this -->\n    <tbody id=\"textRendererAnalog\" style=\"display:none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_17 = "</td>\n        <td class=\"formField\">\n          <input id=\"textRendererAnalogFormat\" type=\"text\"/>\n          ".toCharArray();
  static char[] _jspx_char_array_18 = "\n        </td>\n      </tr>\n      <tr>\n        <td class=\"formLabel\">".toCharArray();
  static char[] _jspx_char_array_19 = "</td>\n        <td class=\"formField\"><input id=\"textRendererAnalogSuffix\" type=\"text\"/></td>\n      </tr>\n    </tbody>\n    \n\n    <tbody id=\"textRendererNone\" style=\"display:none;\">\n    </tbody>\n    <tbody id=\"textRendererPlain\" style=\"display:none;\">\n      <tr>\n        <td class=\"formLabel\">".toCharArray();
  static char[] _jspx_char_array_20 = "</td>\n        <td class=\"formField\"><input id=\"textRendererPlainSuffix\" type=\"text\"/></td>\n      </tr>\n    </tbody>\n    <tbody id=\"rangeValuesRow\" style=\"display:none;\">\n      <tr>\n        <td colspan=\"2\">\n          <table id=\"rangeValues\"> <!-- For contextual field -->\n            <tr>\n              <th>".toCharArray();
  static char[] _jspx_char_array_21 = "</th>\n              <th></th>\n            </tr>\n            <tr>\n              <td valign=\"top\"><input type=\"text\" id=\"textRendererRangeFrom\" value=\"\" class=\"formVeryShort\"/></td>\n              <td valign=\"top\"><input type=\"text\" id=\"textRendererRangeTo\" value=\"\" class=\"formVeryShort\"/></td>\n              <td valign=\"top\"><input type=\"text\" id=\"textRendererRangeText\" value=\"\"/></td>\n              <td valign=\"top\">\n                <div>\n                    <input id=\"textRendererRangeColourText\" data-method-name=\"handlerRangeColour\">\n                    <a href=\"#\" onclick=\"textRendererEditor.handlerRangeColour(null); return false;\">(".toCharArray();
  static char[] _jspx_char_array_22 = ")</a>\n                </div>\n                <div>\n                    <div dojoType=\"dijit.ColorPalette\" palette=\"7x10\" id=\"textRendererRangeColour\"></div>\n                </div>\n              </td>\n              <td valign=\"top\">\n                ".toCharArray();
  static char[] _jspx_char_array_23 = "\n              </td>\n            </tr>\n            <tbody id=\"textRendererRangeTable\"></tbody>\n          </table>\n        </td>\n      </tr>\n    </tbody>\n    <tbody id=\"textRendererTime\" style=\"display:none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_24 = "</td>\n        <td class=\"formField\">\n          <input id=\"textRendererTimeFormat\" type=\"text\"/>\n          ".toCharArray();
  static char[] _jspx_char_array_25 = "</td>\n        <td class=\"formField\"><input id=\"textRendererTimeConversionExponent\" type=\"text\"/></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<script type=\"text/javascript\">\n  dojo.require(\"dijit.ColorPalette\");\n  dojo.require(\"dijit.form.Select\");\n  \n  /**\n   * On Select change re-render view\n   */\n  function textRendererChanged(name,oldValue,value){\n      if (value == \"textRendererAnalog\"){\n    	  hide(\"datetimeFormatHelpDiv\");\n          show(\"suffixRow\");\n          show(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else if (value == \"textRendererBinary\"){\n    	  hide(\"datetimeFormatHelpDiv\");\n    	  show(\"binaryValuesRow\");\n    	  hide(\"suffixRow\");\n          hide(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n      }else if (value == \"textRendererMultistate\"){\n    	  textRendererEditor.refreshMultistateList(); //Refresh the html table\n    	  hide(\"datetimeFormatHelpDiv\");\n          hide(\"suffixRow\");\n          hide(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          show(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else if (value == \"textRendererNone\"){\n    	  hide(\"datetimeFormatHelpDiv\");\n          hide(\"suffixRow\");\n          hide(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else if (value == \"textRendererPlain\"){\n    	  hide(\"datetimeFormatHelpDiv\");\n    	  show(\"suffixRow\");\n          hide(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else if (value == \"textRendererRange\"){\n    	  textRendererEditor.refreshRangeList(); //Refresh the html table\n    	  hide(\"datetimeFormatHelpDiv\");\n    	  show(\"formatRow\");\n    	  hide(\"suffixRow\");\n    	  show(\"rangeValuesRow\");\n          hide(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else if (value == \"textRendererTime\"){\n    	  show(\"datetimeFormatHelpDiv\");\n          hide(\"suffixRow\");\n          show(\"formatRow\");\n          hide(\"rangeValuesRow\");\n          show(\"conversionExponentRow\");\n          hide(\"multistateValuesRow\");\n          hide(\"binaryValuesRow\");\n      }else{\n          alert(\"Unknown text renderer: \" + vo.textRenderer.typeName);\n      }\n  }\n  \n  \n  \n  /*\n   * Set the page values from the current data point VO\n   */\n  function setTextRenderer(vo){\n      \n      DataPointDwr.getTextRendererOptions(vo.pointLocator.dataTypeId,function (response){\n          var options = [];\n          for(var i=0; i<response.data.options.length; i++){\n              options.push({\n                  label: mangoMsg[response.data.options[i].nameKey],\n                  value: response.data.options[i].name,\n              })\n          }\n          textRendererEditor.textRendererSelect.options = [];\n          textRendererEditor.textRendererSelect.addOption(options);\n          textRendererEditor.multistateValues = new Array(); //clear out\n          textRendererEditor.rangeValues = new Array(); //clear out\n    \n        if(vo.textRenderer != null){\n      	  textRendererEditor.textRendererSelect.set('value',vo.textRenderer.typeName);\n      	  \n            if (vo.textRenderer.typeName == \"textRendererAnalog\"){\n          	  	dojo.byId(\"format\").value = vo.textRenderer.format;\n                dojo.byId(\"suffix\").value = vo.textRenderer.suffix;\n                dijit.byId(\"useUnitAsSuffix\").set('checked',vo.textRenderer.useUnitAsSuffix);\n            }else if (vo.textRenderer.typeName == \"textRendererBinary\"){\n          	  dojo.byId(\"zeroLabel\").value = vo.textRenderer.zeroLabel;\n          	  textRendererEditor.handlerBinaryZeroColour( vo.textRenderer.zeroColour);\n          	  dojo.byId(\"oneLabel\").value = vo.textRenderer.oneLabel;\n          	  textRendererEditor.handlerBinaryOneColour(vo.textRenderer.oneColour);\n            }else if (vo.textRenderer.typeName == \"textRendererMultistate\"){\n          	  textRendererEditor.setMultistateValues(vo.textRenderer.multistateValues);\n            }else if (vo.textRenderer.typeName == \"textRendererNone\"){\n          	  //Nothing\n            }else if (vo.textRenderer.typeName == \"textRendererPlain\"){\n          	  dojo.byId(\"suffix\").value = vo.textRenderer.suffix;\n          	  dijit.byId(\"useUnitAsSuffix\").set('checked',vo.textRenderer.useUnitAsSuffix);\n            }else if (vo.textRenderer.typeName == \"textRendererRange\"){\n          	  dojo.byId(\"format\").value = vo.textRenderer.format;\n          	  textRendererEditor.setRangeValues(vo.textRenderer.rangeValues);\n            }else if (vo.textRenderer.typeName == \"textRendererTime\"){\n          	  dojo.byId(\"format\").value = vo.textRenderer.format;\n          	  dojo.byId(\"conversionExponent\").value = vo.textRenderer.conversionExponent;\n            }else{\n                alert(\"Unknown text renderer: \" + vo.textRenderer.typeName);\n            }\n        }//Not null\n        });\n      \n  }\n\n  /*\n   * Get the values from the page and put into current data point VO\n   */\n  function getTextRenderer(vo){\n\n	   var typeName = textRendererEditor.textRendererSelect.get('value');\n	   \n       if (typeName == \"textRendererAnalog\"){\n     	   vo.textRenderer = new AnalogRenderer();\n           vo.textRenderer.format = dojo.byId(\"format\").value;\n           vo.textRenderer.suffix = dojo.byId(\"suffix\").value;\n           vo.textRenderer.useUnitAsSuffix = dojo.byId(\"useUnitAsSuffix\").checked;\n       }else if (typeName == \"textRendererBinary\"){\n     	  vo.textRenderer = new BinaryTextRenderer();\n           vo.textRenderer.zeroLabel = dojo.byId(\"zeroLabel\").value;\n           vo.textRenderer.zeroColour = document.getElementById('zeroColourText').value;\n           vo.textRenderer.oneLabel = dojo.byId(\"oneLabel\").value;\n           vo.textRenderer.oneColour = document.getElementById('oneColourText').value;\n       }else if (typeName == \"textRendererMultistate\"){\n     	  vo.textRenderer = new MultistateRenderer();\n     	  vo.textRenderer.multistateValues = textRendererEditor.multistateValues;\n       }else if (typeName == \"textRendererNone\"){\n           vo.textRenderer = new NoneRenderer();\n       }else if (typeName == \"textRendererPlain\"){\n     	  vo.textRenderer = new PlainRenderer();\n           vo.textRenderer.suffix = dojo.byId(\"suffix\").value;\n           vo.textRenderer.useUnitAsSuffix = dojo.byId(\"useUnitAsSuffix\").checked;\n       }else if (typeName == \"textRendererRange\"){\n     	  vo.textRenderer = new RangeRenderer();\n           vo.textRenderer.format = dojo.byId(\"format\").value;\n           vo.textRenderer.rangeValues = textRendererEditor.rangeValues;\n       }else if (typeName == \"textRendererTime\"){\n     	  vo.textRenderer = new TimeRenderer();\n           vo.textRenderer.format = dojo.byId(\"format\").value;\n           vo.textRenderer.conversionExponent = dojo.byId(\"conversionExponent\").value;\n       }else{\n           alert(\"Unknown text renderer: \" + vo.textRenderer.typeName);\n       }\n       //Set the type name\n       vo.textRenderer.typeName = typeName;\n  }\n  \n  /**\n   * Reset the Text Renderer Input to the default for that data type\n   */\n  function resetTextRendererOptions(dataTypeId){\n          //Change the renderer to the default for this data type\n          var vo = {\n        		 textRenderer: {\n        			 typeName: 'textRendererNone',\n        			 suffix: '',\n            		 useUnitAsSuffix: false\n            		 },\n        		 pointLocator: {dataTypeId: dataTypeId},\n        		 \n        		 \n          };\n          switch(dataTypeId){\n          	case ".toCharArray();
  static char[] _jspx_char_array_26 = ":\n          	case ".toCharArray();
  static char[] _jspx_char_array_27 = ":\n          		vo.textRenderer.typeName = \"textRendererPlain\";\n          	break;\n          	case ".toCharArray();
  static char[] _jspx_char_array_28 = ":\n          		vo.textRenderer.typeName = \"textRendererNone\";\n          	break;\n          }\n          setTextRenderer(vo);\n     // });\n  }\n  //Register for callbacks when the data type is changed\n  dataTypeChangedCallbacks.push(resetTextRendererOptions);\n\n  /**\n   * Main Editing Logic\n   */\n  function TextRendererEditor() {\n	  this.textRendererSelect;\n      var currentTextRenderer;\n      \n      this.multistateValues = new Array();\n      this.rangeValues = new Array();\n      \n      this.init = function() {\n          // Colour handler events\n          dijit.byId(\"textRendererRangeColour\").onChange = this.handlerRangeColour;\n          dijit.byId(\"textRendererMultistateColour\").onChange = this.handlerMultistateColour;\n          dijit.byId(\"zeroColour\").onChange = this.handlerBinaryZeroColour;\n          dijit.byId(\"oneColour\").onChange = this.handlerBinaryOneColour;\n\n          document.getElementById('textRendererRangeColourText').onchange = this.colorTextInputChanged;\n          document.getElementById('textRendererMultistateColourText').onchange = this.colorTextInputChanged;\n          document.getElementById('oneColourText').onchange = this.colorTextInputChanged;\n          document.getElementById('zeroColourText').onchange = this.colorTextInputChanged;\n\n          this.textRendererSelect = new dijit.form.Select({\n              name: 'textRendererSelect',\n          },\"textRendererSelect\");\n          \n          this.textRendererSelect.watch(\"value\",textRendererChanged);\n          \n          var useUnitAsSuffix = dijit.byId(\"useUnitAsSuffix\");\n          var suffix = dojo.byId(\"suffix\");\n          useUnitAsSuffix.watch('checked',function(value){\n        	  if(useUnitAsSuffix.checked)\n        		  hide(\"suffix\");\n        	  else\n        		  show(\"suffix\");\n          });\n      }\n      \n      this.disableInputs = function(){\n    	  dijit.byId('textRendererSelect').set('disabled', true);\n    	  dijit.byId('useUnitAsSuffix').set('disabled', true);\n    	  setDisabled('suffix', true);\n    	  setDisabled('format', true);\n    	  setDisabled('conversionExponent', true);\n    	  setDisabled('zeroLabel', true);\n    	  hide('zeroColourInputRow');\n    	  setDisabled('oneLabel', true);\n    	  hide('oneColourInputRow');\n    	  setDisabled('textRendererMultistateKey', true);\n    	  setDisabled('textRendererMultistateText', true);\n    	  hide('multistateValueAdd');\n    	  setDisabled('textRendererAnalogFormat', true);\n    	  setDisabled('textRendererAnalogSuffix', true);\n    	  setDisabled('textRendererPlainSuffix', true);\n    	  setDisabled('textRendererRangeFrom', true);\n    	  setDisabled('textRendererRangeTo', true);\n    	  setDisabled('textRendererRangeText', true);\n    	  hide('addRangeRendererRange');\n    	  setDisabled('textRendererTimeFormat', true);\n    	  setDisabled('textRendererTimeConversionExponent', true);\n      };\n      \n      this.enableInputs = function(){\n    	  dijit.byId('textRendererSelect').set('disabled', false);\n    	  dijit.byId('useUnitAsSuffix').set('disabled', false);\n    	  setDisabled('suffix', false);\n    	  setDisabled('format', false);\n    	  setDisabled('conversionExponent', false);\n    	  setDisabled('zeroLabel', false);\n    	  show('zeroColourInputRow');\n    	  setDisabled('oneLabel', false);\n    	  show('oneColourInputRow');\n    	  setDisabled('textRendererMultistateKey', false);\n    	  setDisabled('textRendererMultistateText', false);\n    	  show('multistateValueAdd');\n    	  setDisabled('textRendererAnalogFormat', false);\n    	  setDisabled('textRendererAnalogSuffix', false);\n    	  setDisabled('textRendererPlainSuffix', false);\n    	  setDisabled('textRendererRangeFrom', false);\n    	  setDisabled('textRendererRangeTo', false);\n    	  setDisabled('textRendererRangeText', false);\n    	  show('addRangeRendererRange');\n    	  setDisabled('textRendererTimeFormat', false);\n    	  setDisabled('textRendererTimeConversionExponent', false);\n      };\n  \n      this.change = function() {\n          if (currentTextRenderer)\n              hide($(currentTextRenderer));\n          currentTextRenderer = $(\"textRendererSelect\").value\n          show($(currentTextRenderer));\n      };\n      \n      //\n      // List objects\n      this.MultistateValue = function() {\n          this.key;\n          this.text;\n          this.colour;\n      };\n      \n      this.RangeValue = function() {\n          this.from;\n          this.to;\n          this.text;\n          this.colour;\n      };\n      \n      \n      /*\n       * Create a new set of values from an existing vo's list\n       */\n      this.setMultistateValues = function(list){\n    	  //Clear the list\n    	  this.multistateValues = new Array();\n    	  this.refreshMultistateList();\n    	  for(var i=0; i<list.length; i++){\n    		  this.addMultistateValue(list[i].key,list[i].text,list[i].colour);\n    	  }\n      }\n      \n      //\n      // Multistate list manipulation\n      this.addMultistateValue = function(theKey, text, colour) {\n          if (typeof theKey === 'undefined')\n              theKey = $get(\"textRendererMultistateKey\");\n          var theNumericKey = parseInt(theKey);\n          if (isNaN(theNumericKey)) {\n              alert(\"".toCharArray();
  static char[] _jspx_char_array_29 = "\" + theKey);\n              return false;\n          }\n          for (var i=this.multistateValues.length-1; i>=0; i--) {\n              if (this.multistateValues[i].key == theNumericKey) {\n                  alert(\"".toCharArray();
  static char[] _jspx_char_array_30 = " \"+ theNumericKey);\n                  return false;\n              }\n          }\n          \n          var theValue = new this.MultistateValue();\n          theValue.key = theNumericKey;\n          if (text)\n              theValue.text = text;\n          else\n              theValue.text = $get(\"textRendererMultistateText\");\n          if (colour)\n              theValue.colour = colour;\n          else\n              theValue.colour = document.getElementById('textRendererMultistateColourText').value;\n          this.multistateValues[this.multistateValues.length] = theValue;\n          this.sortMultistateValues();\n          this.refreshMultistateList();\n          $set(\"textRendererMultistateKey\", theNumericKey+1);\n          \n          return false;\n      };\n      \n      this.removeMultistateValue = function(theValue) {\n          for (var i=this.multistateValues.length-1; i>=0; i--) {\n              if (this.multistateValues[i].key == theValue)\n                  this.multistateValues.splice(i, 1);\n          }\n          this.refreshMultistateList();\n          return false;\n      };\n      \n      this.sortMultistateValues = function() {\n          this.multistateValues.sort( function(a,b) { return a.key-b.key; } );\n      };\n      \n      this.refreshMultistateList = function() {\n          dwr.util.removeAllRows(\"textRendererMultistateTable\");\n          dwr.util.addRows(\"textRendererMultistateTable\", this.multistateValues, [\n                  function(data) { return data.key; },\n                  function(data) { \n                      if (data.colour)\n                          return \"<span style='color:\"+ data.colour +\"'>\"+ data.text +\"</span>\";\n                      return data.text;\n                  },\n                  function(data) {\n                      return \"<a href='#' onclick='return textRendererEditor.removeMultistateValue(\"+ data.key +\n                             \");'><img src='images/bullet_delete.png' width='16' height='16' \"+\n                             \"title='".toCharArray();
  static char[] _jspx_char_array_31 = "'/><\\/a>\";\n                  }\n                  ], null);\n      };\n      \n      /*\n       * Set the range values from the vo's list\n       */\n      this.setRangeValues = function(list){\n          //Clear the list\n          this.rangeValues = new Array();\n          this.refreshRangeList();\n          for(var i=0; i<list.length; i++){\n              this.addRangeValue(list[i].from,list[i].to,list[i].text,list[i].colour);\n          }\n\n      }\n      \n      \n      //\n      // Range list manipulation\n      this.addRangeValue = function(theFrom, theTo, text, colour) {\n          if (typeof theFrom === 'undefined')\n              theFrom = parseFloat($get(\"textRendererRangeFrom\"));\n          if (isNaN(theFrom)) {\n              alert(\"".toCharArray();
  static char[] _jspx_char_array_32 = "\");\n              return false;\n          }\n          \n          if (typeof theTo === 'undefined')\n              theTo = parseFloat($get(\"textRendererRangeTo\"));\n          if (isNaN(theTo)) {\n              alert(\"".toCharArray();
  static char[] _jspx_char_array_33 = "\");\n              return false;\n          }\n          \n          if (isNaN(theTo >= theFrom)) {\n              alert(\"".toCharArray();
  static char[] _jspx_char_array_34 = "\");\n              return false;\n          }\n          \n          for (var i=0; i<this.rangeValues.length; i++) {\n              if (this.rangeValues[i].from == theFrom && this.rangeValues[i].to == theTo) {\n                  alert(\"".toCharArray();
  static char[] _jspx_char_array_35 = " \"+ theFrom +\" - \"+ theTo);\n                  return false;\n              }\n          }\n          \n          var theValue = new this.RangeValue();\n          theValue.from = theFrom;\n          theValue.to = theTo;\n          if (text)\n              theValue.text = text;\n          else\n              theValue.text = $get(\"textRendererRangeText\");\n          if (colour)\n              theValue.colour = colour;\n          else\n              theValue.colour = document.getElementById('textRendererRangeColourText').value;\n          this.rangeValues[this.rangeValues.length] = theValue;\n          this.sortRangeValues();\n          this.refreshRangeList();\n          $set(\"textRendererRangeFrom\", theTo);\n          $set(\"textRendererRangeTo\", theTo + (theTo - theFrom));\n          return false;\n      };\n      \n      this.removeRangeValue = function(theFrom, theTo) {\n          for (var i=this.rangeValues.length-1; i>=0; i--) {\n              if (this.rangeValues[i].from == theFrom && this.rangeValues[i].to == theTo)\n                  this.rangeValues.splice(i, 1);\n          }\n          this.refreshRangeList();\n          return false;\n      };\n      \n      this.sortRangeValues = function() {\n          this.rangeValues.sort( function(a,b) {\n              if (a.from == b.from)\n                  return a.to-b.to;\n              return a.from-b.from;\n          });\n      };\n      \n      this.refreshRangeList = function() {\n          dwr.util.removeAllRows(\"textRendererRangeTable\");\n          dwr.util.addRows(\"textRendererRangeTable\", this.rangeValues, [\n                  function(data) { return data.from; },\n                  function(data) { return data.to; },\n                  function(data) { \n                      if (data.colour)\n                          return \"<span style='color:\"+ data.colour +\"'>\"+ data.text +\"</span>\";\n                      return data.text;\n                  },\n                  function(data) {\n                      return \"<a href='#' onclick='return textRendererEditor.removeRangeValue(\"+\n                             data.from +\",\"+ data.to +\");'><img src='images/bullet_delete.png' width='16' \"+\n                             \"height='16' title='".toCharArray();
  static char[] _jspx_char_array_36 = "'/><\\/a>\";\n                  }\n                  ], null);\n      };\n      \n      //\n      // Color handling\n      \n      this.colorTextInputChanged = function(event) {\n          var color = event.target.value;\n          var methodName = event.target.dataset.methodName;\n          this[methodName](color);\n      }.bind(this);\n      \n      this.handlerRangeColour = function(colour) {\n          var colorDijit = dijit.byId('textRendererRangeColour');\n          \n          if (colorDijit.lastSetColor !== colour) {\n              colorDijit.lastSetColor = colour;\n              colorDijit.set('value', colour);\n          }\n          \n          document.getElementById('textRendererRangeColourText').value = colour;\n          $(\"textRendererRangeText\").style.color = colour;\n      };\n      \n      this.handlerMultistateColour = function(colour) {\n          var colorDijit = dijit.byId('textRendererMultistateColour');\n          \n          if (colorDijit.lastSetColor !== colour) {\n              colorDijit.lastSetColor = colour;\n              colorDijit.set('value', colour);\n          }\n          \n          document.getElementById('textRendererMultistateColourText').value = colour;\n          $(\"textRendererMultistateText\").style.color = colour;\n      };\n      \n      this.handlerBinaryZeroColour = function(colour) {\n          var colorDijit = dijit.byId('zeroColour');\n          \n          if (colorDijit.lastSetColor !== colour) {\n              colorDijit.lastSetColor = colour;\n              colorDijit.set('value', colour);\n          }\n          \n          document.getElementById('zeroColourText').value = colour;\n          $(\"zeroLabel\").style.color = colour;\n      };\n      \n      this.handlerBinaryOneColour = function(colour) {\n          var colorDijit = dijit.byId('oneColour');\n          \n          if (colorDijit.lastSetColor !== colour) {\n              colorDijit.lastSetColor = colour;\n              colorDijit.set('value', colour);\n          }\n          \n          document.getElementById('oneColourText').value = colour;\n          $(\"oneLabel\").style.color = colour;\n      };\n  }\n  var textRendererEditor = new TextRendererEditor();\n  \n  \n</script>".toCharArray();
}
