/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.12.v20180830
 * Generated at: 2019-04-05 20:19:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.snippet.view.dataPoint;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.serotonin.m2m2.vo.DataPointVO;
import com.serotonin.m2m2.DataTypes;

public final class loggingProperties_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(15);
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("/WEB-INF/tags/help.tag", Long.valueOf(1554492877701L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar", Long.valueOf(1554492895779L));
    _jspx_dependants.put("/WEB-INF/tags/decl.tagf", Long.valueOf(1554492878082L));
    _jspx_dependants.put("/WEB-INF/serotonin.tld", Long.valueOf(1554492876912L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1554492893592L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar!/META-INF/taglib.tld", Long.valueOf(1042475258000L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("file:/C:/free-m2m2-core-3.5.6/lib/log-1.0.jar", Long.valueOf(1554492896226L));
    _jspx_dependants.put("/WEB-INF/tags/timePeriods.tag", Long.valueOf(1554492877731L));
    _jspx_dependants.put("jar:file:/C:/free-m2m2-core-3.5.6/lib/spring-webmvc-5.0.10.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1539603408000L));
    _jspx_dependants.put("/WEB-INF/tags/img.tag", Long.valueOf(1554492878013L));
    _jspx_dependants.put("/WEB-INF/jsp/include/tech.jsp", Long.valueOf(1554492877585L));
    _jspx_dependants.put("/WEB-INF/m2m2.tld", Long.valueOf(1554492876925L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.serotonin.m2m2.DataTypes");
    _jspx_imports_classes.add("com.serotonin.m2m2.vo.DataPointVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsst_005fselect_0026_005fvalue_005fonchange_005fname_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsst_005fselect_0026_005fonchange_005fname_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsst_005fcheckbox_0026_005fselectedValue_005fonclick_005fid_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsst_005fselect_0026_005fvalue_005fonchange_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsst_005fselect_0026_005fonchange_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsst_005fcheckbox_0026_005fselectedValue_005fonclick_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005fsst_005fselect_0026_005fvalue_005fonchange_005fname_005fid.release();
    _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.release();
    _005fjspx_005ftagPool_005fsst_005fselect_0026_005fonchange_005fname_005fid.release();
    _005fjspx_005ftagPool_005fsst_005fcheckbox_0026_005fselectedValue_005fonclick_005fid_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write(_jspx_char_array_0);
      out.print(DataTypes.NUMERIC);
      out.write(_jspx_char_array_1);
      out.print(DataPointVO.IntervalLoggingTypes.INSTANT);
      out.write(_jspx_char_array_2);
      out.print(DataTypes.NUMERIC);
      out.write(_jspx_char_array_3);
      out.print(DataPointVO.IntervalLoggingTypes.INSTANT);
      out.write(_jspx_char_array_4);
      out.print(DataPointVO.IntervalLoggingTypes.INSTANT);
      out.write(_jspx_char_array_5);
      out.print(DataPointVO.LoggingTypes.ON_CHANGE);
      out.write(_jspx_char_array_6);
      out.print(DataPointVO.LoggingTypes.ON_CHANGE_INTERVAL);
      out.write(_jspx_char_array_7);
      out.print(DataPointVO.LoggingTypes.NONE);
      out.write(_jspx_char_array_8);
      out.print(DataPointVO.LoggingTypes.INTERVAL);
      out.write(_jspx_char_array_6);
      out.print( DataPointVO.LoggingTypes.ON_CHANGE_INTERVAL );
      out.write(_jspx_char_array_9);
      out.print( DataPointVO.LoggingTypes.ON_CHANGE_INTERVAL );
      out.write(_jspx_char_array_10);
      out.print(DataPointVO.IntervalLoggingTypes.AVERAGE);
      out.write(_jspx_char_array_11);
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_12);
      if (_jspx_meth_tag_005fhelp_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_13);
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_14);
      //  sst:select
      com.serotonin.web.taglib.SelectTag _jspx_th_sst_005fselect_005f0 = (com.serotonin.web.taglib.SelectTag) _005fjspx_005ftagPool_005fsst_005fselect_0026_005fvalue_005fonchange_005fname_005fid.get(com.serotonin.web.taglib.SelectTag.class);
      boolean _jspx_th_sst_005fselect_005f0_reused = false;
      try {
        _jspx_th_sst_005fselect_005f0.setPageContext(_jspx_page_context);
        _jspx_th_sst_005fselect_005f0.setParent(null);
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(234,28) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f0.setId("loggingType");
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(234,28) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f0.setName("loggingType");
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(234,28) name = onchange type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f0.setOnchange("changeLoggingType();");
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(234,28) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        int _jspx_eval_sst_005fselect_005f0 = _jspx_th_sst_005fselect_005f0.doStartTag();
        if (_jspx_eval_sst_005fselect_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f0 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f0_reused = false;
            try {
              _jspx_th_sst_005foption_005f0.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(237,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f0.setValue(Integer
							.toString(DataPointVO.LoggingTypes.ON_CHANGE));
              int _jspx_eval_sst_005foption_005f0 = _jspx_th_sst_005foption_005f0.doStartTag();
              if (_jspx_eval_sst_005foption_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f0);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_sst_005foption_005f0, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f0);
              _jspx_th_sst_005foption_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f0, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f0_reused);
            }
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f1 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f1_reused = false;
            try {
              _jspx_th_sst_005foption_005f1.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(242,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f1.setValue(Integer.toString(DataPointVO.LoggingTypes.ALL));
              int _jspx_eval_sst_005foption_005f1 = _jspx_th_sst_005foption_005f1.doStartTag();
              if (_jspx_eval_sst_005foption_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f1);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_sst_005foption_005f1, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f1);
              _jspx_th_sst_005foption_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f1, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f1_reused);
            }
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f2 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f2_reused = false;
            try {
              _jspx_th_sst_005foption_005f2.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(246,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f2.setValue(Integer.toString(DataPointVO.LoggingTypes.NONE));
              int _jspx_eval_sst_005foption_005f2 = _jspx_th_sst_005foption_005f2.doStartTag();
              if (_jspx_eval_sst_005foption_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f2);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_sst_005foption_005f2, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f2.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f2);
              _jspx_th_sst_005foption_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f2, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f2_reused);
            }
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f3 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f3_reused = false;
            try {
              _jspx_th_sst_005foption_005f3.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(250,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f3.setValue(Integer
							.toString(DataPointVO.LoggingTypes.INTERVAL));
              int _jspx_eval_sst_005foption_005f3 = _jspx_th_sst_005foption_005f3.doStartTag();
              if (_jspx_eval_sst_005foption_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f3);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_sst_005foption_005f3, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f3.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f3);
              _jspx_th_sst_005foption_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f3, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f3_reused);
            }
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f4 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f4_reused = false;
            try {
              _jspx_th_sst_005foption_005f4.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(255,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f4.setValue(Integer
							.toString(DataPointVO.LoggingTypes.ON_CHANGE_INTERVAL));
              int _jspx_eval_sst_005foption_005f4 = _jspx_th_sst_005foption_005f4.doStartTag();
              if (_jspx_eval_sst_005foption_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f4);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_sst_005foption_005f4, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f4.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f4);
              _jspx_th_sst_005foption_005f4_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f4, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f4_reused);
            }
            out.write(_jspx_char_array_15);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f5 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f5_reused = false;
            try {
              _jspx_th_sst_005foption_005f5.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f0);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(260,10) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f5.setValue(Integer
							.toString(DataPointVO.LoggingTypes.ON_TS_CHANGE));
              int _jspx_eval_sst_005foption_005f5 = _jspx_th_sst_005foption_005f5.doStartTag();
              if (_jspx_eval_sst_005foption_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f5);
                }
                do {
                  out.write(_jspx_char_array_16);
                  if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_sst_005foption_005f5, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_15);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f5.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f5);
              _jspx_th_sst_005foption_005f5_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f5, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f5_reused);
            }
            out.write(_jspx_char_array_17);
            int evalDoAfterBody = _jspx_th_sst_005fselect_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_sst_005fselect_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fsst_005fselect_0026_005fvalue_005fonchange_005fname_005fid.reuse(_jspx_th_sst_005fselect_005f0);
        _jspx_th_sst_005fselect_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005fselect_005f0, _jsp_getInstanceManager(), _jspx_th_sst_005fselect_005f0_reused);
      }
      out.write(_jspx_char_array_18);
      if (_jspx_meth_fmt_005fmessage_005f8(_jspx_page_context))
        return;
      out.write(_jspx_char_array_19);
      if (_jspx_meth_fmt_005fmessage_005f9(_jspx_page_context))
        return;
      out.write(_jspx_char_array_20);
      if (_jspx_meth_tag_005ftimePeriods_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_21);
      if (_jspx_meth_fmt_005fmessage_005f10(_jspx_page_context))
        return;
      out.write(_jspx_char_array_19);
      //  sst:select
      com.serotonin.web.taglib.SelectTag _jspx_th_sst_005fselect_005f1 = (com.serotonin.web.taglib.SelectTag) _005fjspx_005ftagPool_005fsst_005fselect_0026_005fonchange_005fname_005fid.get(com.serotonin.web.taglib.SelectTag.class);
      boolean _jspx_th_sst_005fselect_005f1_reused = false;
      try {
        _jspx_th_sst_005fselect_005f1.setPageContext(_jspx_page_context);
        _jspx_th_sst_005fselect_005f1.setParent(null);
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(284,30) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f1.setId("intervalLoggingType");
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(284,30) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f1.setName("intervalLoggingType");
        // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(284,30) name = onchange type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sst_005fselect_005f1.setOnchange("changeIntervalLoggingType()");
        int _jspx_eval_sst_005fselect_005f1 = _jspx_th_sst_005fselect_005f1.doStartTag();
        if (_jspx_eval_sst_005fselect_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(_jspx_char_array_16);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f6 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f6_reused = false;
            try {
              _jspx_th_sst_005foption_005f6.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f1);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(287,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f6.setValue(Integer
							.toString(DataPointVO.IntervalLoggingTypes.INSTANT));
              int _jspx_eval_sst_005foption_005f6 = _jspx_th_sst_005foption_005f6.doStartTag();
              if (_jspx_eval_sst_005foption_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f6);
                }
                do {
                  out.write(_jspx_char_array_22);
                  if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_sst_005foption_005f6, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_16);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f6.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f6);
              _jspx_th_sst_005foption_005f6_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f6, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f6_reused);
            }
            out.write(_jspx_char_array_16);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f7 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f7_reused = false;
            try {
              _jspx_th_sst_005foption_005f7.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f1);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(292,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f7.setValue(Integer
							.toString(DataPointVO.IntervalLoggingTypes.MAXIMUM));
              int _jspx_eval_sst_005foption_005f7 = _jspx_th_sst_005foption_005f7.doStartTag();
              if (_jspx_eval_sst_005foption_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f7);
                }
                do {
                  out.write(_jspx_char_array_22);
                  if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_sst_005foption_005f7, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_16);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f7.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f7);
              _jspx_th_sst_005foption_005f7_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f7, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f7_reused);
            }
            out.write(_jspx_char_array_16);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f8 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f8_reused = false;
            try {
              _jspx_th_sst_005foption_005f8.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f1);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(297,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f8.setValue(Integer
							.toString(DataPointVO.IntervalLoggingTypes.MINIMUM));
              int _jspx_eval_sst_005foption_005f8 = _jspx_th_sst_005foption_005f8.doStartTag();
              if (_jspx_eval_sst_005foption_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f8);
                }
                do {
                  out.write(_jspx_char_array_22);
                  if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_sst_005foption_005f8, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_16);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f8.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f8);
              _jspx_th_sst_005foption_005f8_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f8, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f8_reused);
            }
            out.write(_jspx_char_array_16);
            //  sst:option
            com.serotonin.web.taglib.OptionTag _jspx_th_sst_005foption_005f9 = (com.serotonin.web.taglib.OptionTag) _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.get(com.serotonin.web.taglib.OptionTag.class);
            boolean _jspx_th_sst_005foption_005f9_reused = false;
            try {
              _jspx_th_sst_005foption_005f9.setPageContext(_jspx_page_context);
              _jspx_th_sst_005foption_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005fselect_005f1);
              // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(302,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_sst_005foption_005f9.setValue(Integer
							.toString(DataPointVO.IntervalLoggingTypes.AVERAGE));
              int _jspx_eval_sst_005foption_005f9 = _jspx_th_sst_005foption_005f9.doStartTag();
              if (_jspx_eval_sst_005foption_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_sst_005foption_005f9 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_sst_005foption_005f9);
                }
                do {
                  out.write(_jspx_char_array_22);
                  if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_sst_005foption_005f9, _jspx_page_context))
                    return;
                  out.write(_jspx_char_array_16);
                  int evalDoAfterBody = _jspx_th_sst_005foption_005f9.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_sst_005foption_005f9 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_sst_005foption_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fsst_005foption_0026_005fvalue.reuse(_jspx_th_sst_005foption_005f9);
              _jspx_th_sst_005foption_005f9_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005foption_005f9, _jsp_getInstanceManager(), _jspx_th_sst_005foption_005f9_reused);
            }
            out.write(_jspx_char_array_15);
            int evalDoAfterBody = _jspx_th_sst_005fselect_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_sst_005fselect_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fsst_005fselect_0026_005fonchange_005fname_005fid.reuse(_jspx_th_sst_005fselect_005f1);
        _jspx_th_sst_005fselect_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005fselect_005f1, _jsp_getInstanceManager(), _jspx_th_sst_005fselect_005f1_reused);
      }
      out.write(_jspx_char_array_23);
      if (_jspx_meth_fmt_005fmessage_005f15(_jspx_page_context))
        return;
      out.write(_jspx_char_array_19);
      if (_jspx_meth_sst_005fcheckbox_005f0(_jspx_page_context))
        return;
      out.write(_jspx_char_array_24);
      if (_jspx_meth_fmt_005fmessage_005f16(_jspx_page_context))
        return;
      out.write(_jspx_char_array_25);
      if (_jspx_meth_fmt_005fmessage_005f17(_jspx_page_context))
        return;
      out.write(_jspx_char_array_26);
      if (_jspx_meth_fmt_005fmessage_005f18(_jspx_page_context))
        return;
      out.write(_jspx_char_array_27);
      if (_jspx_meth_fmt_005fmessage_005f19(_jspx_page_context))
        return;
      out.write(_jspx_char_array_28);
      if (_jspx_meth_fmt_005fmessage_005f20(_jspx_page_context))
        return;
      out.write(_jspx_char_array_29);
      if (_jspx_meth_fmt_005fmessage_005f21(_jspx_page_context))
        return;
      out.write(_jspx_char_array_30);
      if (_jspx_meth_fmt_005fmessage_005f22(_jspx_page_context))
        return;
      out.write(_jspx_char_array_31);
      if (_jspx_meth_fmt_005fmessage_005f23(_jspx_page_context))
        return;
      out.write(_jspx_char_array_32);
      if (_jspx_meth_tag_005ftimePeriods_005f1(_jspx_page_context))
        return;
      out.write(_jspx_char_array_33);
      if (_jspx_meth_fmt_005fmessage_005f24(_jspx_page_context))
        return;
      out.write(_jspx_char_array_34);
      if (_jspx_meth_fmt_005fmessage_005f25(_jspx_page_context))
        return;
      out.write(_jspx_char_array_35);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(226,47) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("pointEdit.logging.props");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005fhelp_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:help
    org.apache.jsp.tag.web.help_tag _jspx_th_tag_005fhelp_005f0 = new org.apache.jsp.tag.web.help_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005fhelp_005f0);
    try {
      _jspx_th_tag_005fhelp_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(227,52) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005fhelp_005f0.setId("pointValueLogging");
      _jspx_th_tag_005fhelp_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005fhelp_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(232,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("pointEdit.logging.type");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f0);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(240,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("pointEdit.logging.type.change");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f1);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(244,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("pointEdit.logging.type.all");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f2);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(248,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("pointEdit.logging.type.never");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f3);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(253,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("pointEdit.logging.type.interval");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f4);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(258,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("pointEdit.logging.type.changeInterval");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f5);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(263,12) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("pointEdit.logging.type.tsChange");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(270,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("pointEdit.logging.period");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(272,30) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("pointEdit.logging.every");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005ftimePeriods_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:timePeriods
    org.apache.jsp.tag.web.timePeriods_tag _jspx_th_tag_005ftimePeriods_005f0 = new org.apache.jsp.tag.web.timePeriods_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005ftimePeriods_005f0);
    try {
      _jspx_th_tag_005ftimePeriods_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setId("intervalLoggingPeriodType");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setName("intervalLoggingPeriodType");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = s type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setS(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = min type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setMin(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = h type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setH(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = d type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setD(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = w type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setW(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = mon type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setMon(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(275,60) name = y type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f0.setY(new java.lang.Boolean(true));
      _jspx_th_tag_005ftimePeriods_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005ftimePeriods_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(282,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("pointEdit.logging.valueType");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f6, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f6);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(290,14) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("pointEdit.logging.valueType.instant");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f7, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f7);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(295,14) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("pointEdit.logging.valueType.maximum");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f8, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f8);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(300,14) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("pointEdit.logging.valueType.minimum");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_sst_005foption_005f9, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sst_005foption_005f9);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(305,14) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("pointEdit.logging.valueType.average");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(310,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("pointEdit.props.overrideIntervalLoggingSamples");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sst_005fcheckbox_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sst:checkbox
    com.serotonin.web.taglib.CheckboxTag _jspx_th_sst_005fcheckbox_005f0 = (com.serotonin.web.taglib.CheckboxTag) _005fjspx_005ftagPool_005fsst_005fcheckbox_0026_005fselectedValue_005fonclick_005fid_005fnobody.get(com.serotonin.web.taglib.CheckboxTag.class);
    boolean _jspx_th_sst_005fcheckbox_005f0_reused = false;
    try {
      _jspx_th_sst_005fcheckbox_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sst_005fcheckbox_005f0.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(312,30) name = selectedValue type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sst_005fcheckbox_005f0.setSelectedValue("true");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(312,30) name = id type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sst_005fcheckbox_005f0.setId("overrideIntervalLoggingSamples");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(312,30) name = onclick type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sst_005fcheckbox_005f0.setOnclick("changeOverrideIntervalLoggingSamples();");
      int _jspx_eval_sst_005fcheckbox_005f0 = _jspx_th_sst_005fcheckbox_005f0.doStartTag();
      if (_jspx_th_sst_005fcheckbox_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsst_005fcheckbox_0026_005fselectedValue_005fonclick_005fid_005fnobody.reuse(_jspx_th_sst_005fcheckbox_005f0);
      _jspx_th_sst_005fcheckbox_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sst_005fcheckbox_005f0, _jsp_getInstanceManager(), _jspx_th_sst_005fcheckbox_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(317,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("pointEdit.props.intervalLoggingSampleWindowSize");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(326,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("pointEdit.logging.tolerance");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(335,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("pointEdit.logging.discard");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f19_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(342,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("pointEdit.logging.discardLow");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      _jspx_th_fmt_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f20_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(348,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("pointEdit.logging.discardHigh");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      _jspx_th_fmt_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f21_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(356,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("pointEdit.logging.purge");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      _jspx_th_fmt_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f22_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(362,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("pointEdit.logging.purgeOverride");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      _jspx_th_fmt_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f23_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(366,10) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("pointEdit.logging.after");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      _jspx_th_fmt_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tag_005ftimePeriods_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tag:timePeriods
    org.apache.jsp.tag.web.timePeriods_tag _jspx_th_tag_005ftimePeriods_005f1 = new org.apache.jsp.tag.web.timePeriods_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tag_005ftimePeriods_005f1);
    try {
      _jspx_th_tag_005ftimePeriods_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = id type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setId("purgeType");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setName("purgeType");
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = d type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setD(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = w type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setW(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = mon type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setMon(new java.lang.Boolean(true));
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(369,10) name = y type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_tag_005ftimePeriods_005f1.setY(new java.lang.Boolean(true));
      _jspx_th_tag_005ftimePeriods_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tag_005ftimePeriods_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f24_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(376,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("pointEdit.logging.defaultCache");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      _jspx_th_fmt_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f25_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent(null);
      // /WEB-INF/snippet/view/dataPoint/loggingProperties.jsp(381,15) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("pointEdit.logging.clearCache");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
      _jspx_th_fmt_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f25_reused);
    }
    return false;
  }
  static char[] _jspx_char_array_0 = "\n\n\n\n<script type=\"text/javascript\">\n	/**\n	 * Set the input values on the page using this vo\n	 */\n	function setLoggingProperties(vo) {\n\n		dojo.byId(\"loggingType\").value = vo.loggingType;\n		dojo.byId(\"intervalLoggingPeriod\").value = vo.intervalLoggingPeriod;\n		dojo.byId(\"intervalLoggingPeriodType\").value = vo.intervalLoggingPeriodType;\n		dojo.byId(\"intervalLoggingType\").value = vo.intervalLoggingType;\n		dojo.byId(\"tolerance\").value = vo.tolerance;\n		dijit.byId(\"discardExtremeValues\").set('checked',\n				vo.discardExtremeValues);\n		dojo.byId(\"discardHighLimit\").value = vo.discardHighLimit;\n		dojo.byId(\"discardLowLimit\").value = vo.discardLowLimit;\n		dijit.byId(\"purgeOverride\").set('checked', vo.purgeOverride);\n		dojo.byId(\"purgeType\").value = vo.purgeType;\n		dojo.byId(\"purgePeriod\").value = vo.purgePeriod;\n		dojo.byId(\"defaultCacheSize\").value = vo.defaultCacheSize;\n		$set(\"overrideIntervalLoggingSamples\",\n				vo.overrideIntervalLoggingSamples);\n		dojo.byId(\"intervalLoggingSampleWindowSize\").value = vo.intervalLoggingSampleWindowSize;\n\n		if (vo.pointLocator.dataTypeId == ".toCharArray();
  static char[] _jspx_char_array_1 = ") {\n			show(\"toleranceSection\");\n			show(\"discardSection\");\n			$(\"intervalLoggingType\").disabled = false;\n		} else {\n			$(\"intervalLoggingType\").disabled = true;\n			$set(\"intervalLoggingType\", ".toCharArray();
  static char[] _jspx_char_array_2 = ");\n		}\n		changeOverrideIntervalLoggingSamples();\n		changeIntervalLoggingType();\n		changeLoggingType();\n		changeDiscard();\n\n	}\n\n	/*\n	 * Get the values and put into the vo\n	 */\n	function getLoggingProperties(vo) {\n\n		vo.loggingType = dojo.byId(\"loggingType\").value;\n		vo.intervalLoggingPeriod = dojo.byId(\"intervalLoggingPeriod\").value;\n		vo.intervalLoggingPeriodType = dojo.byId(\"intervalLoggingPeriodType\").value;\n		vo.intervalLoggingType = dojo.byId(\"intervalLoggingType\").value;\n		vo.tolerance = dojo.byId(\"tolerance\").value;\n		vo.discardExtremeValues = dojo.byId(\"discardExtremeValues\").checked;\n		vo.discardHighLimit = dojo.byId(\"discardHighLimit\").value;\n		vo.discardLowLimit = dojo.byId(\"discardLowLimit\").value;\n		vo.purgeOverride = dojo.byId(\"purgeOverride\").checked;\n		vo.purgeType = dojo.byId(\"purgeType\").value;\n		vo.purgePeriod = dojo.byId(\"purgePeriod\").value;\n		vo.defaultCacheSize = dojo.byId(\"defaultCacheSize\").value;\n		vo.overrideIntervalLoggingSamples = $get(\"overrideIntervalLoggingSamples\");\n		vo.intervalLoggingSampleWindowSize = dojo\n				.byId(\"intervalLoggingSampleWindowSize\").value;\n\n		//Store the logging properties for later save by module\n		DataPointDwr.storeEditLoggingProperties(vo.loggingType,\n				vo.intervalLoggingPeriod, vo.intervalLoggingPeriodType,\n				vo.intervalLoggingType, vo.tolerance, vo.discardExtremeValues,\n				vo.discardHighLimit, vo.discardLowLimit, vo.purgeOverride,\n				vo.purgeType, vo.purgePeriod, vo.defaultCacheSize,\n				vo.overrideIntervalLoggingSamples,\n				vo.intervalLoggingSampleWindowSize);\n\n	}\n\n	/**\n	 * Reset the Point Properties Inputs depending on Data Type\n	 */\n	function resetLoggingProperties(dataTypeId) {\n		if (dataTypeId == ".toCharArray();
  static char[] _jspx_char_array_3 = ") {\n			show(\"toleranceSection\");\n			show(\"discardSection\");\n			$(\"intervalLoggingType\").disabled = false;\n			$set(\"intervalLoggingType\", ".toCharArray();
  static char[] _jspx_char_array_4 = ")\n		} else {\n			hide(\"toleranceSection\");\n			hide(\"discardSection\");\n			$(\"intervalLoggingType\").disabled = true;\n			$set(\"intervalLoggingType\", ".toCharArray();
  static char[] _jspx_char_array_5 = ");\n		}\n		changeOverrideIntervalLoggingSamples();\n		changeIntervalLoggingType();\n		changeLoggingType();\n		changeDiscard();\n	}\n	//Register for callbacks when the data type is changed\n	dataTypeChangedCallbacks.push(resetLoggingProperties);\n	\n	function disableLoggingProperties(dataTypeId){\n		setDisabled('loggingType', true);\n		setDisabled('intervalLoggingPeriod', true);\n		setDisabled('intervalLoggingPeriodType', true);\n		setDisabled('intervalLoggingType', true);\n		setDisabled('overrideIntervalLoggingSamples', true);\n		setDisabled('intervalLoggingSampleWindowSize', true);\n		setDisabled('tolerance', true);\n		dijit.byId('discardExtremeValues').set('disabled', true);\n		setDisabled('discardLowLimit', true);\n		setDisabled('discardHighLimit', true);\n		dijit.byId('purgeOverride').set('disabled', true);\n		setDisabled('purgeType', true);\n		setDisabled('defaultCacheSize', true);\n	}\n	\n	function enableLoggingProperties(dataTypeId){\n		setDisabled('loggingType', false);\n		setDisabled('intervalLoggingPeriod', false);	\n		setDisabled('intervalLoggingPeriodType', false);\n		setDisabled('intervalLoggingType', false);\n		setDisabled('overrideIntervalLoggingSamples', false);\n		setDisabled('intervalLoggingSampleWindowSize', false);\n		setDisabled('tolerance', false);\n		dijit.byId('discardExtremeValues').set('disabled', false);\n		setDisabled('discardLowLimit', false);\n		setDisabled('discardHighLimit', false);\n		dijit.byId('purgeOverride').set('disabled', false);\n		setDisabled('purgeType', false);\n		setDisabled('defaultCacheSize', false);\n		changeOverrideIntervalLoggingSamples();\n		changeIntervalLoggingType();\n		changeLoggingType();\n		changeDiscard();\n	}\n	\n	function changeLoggingType() {\n		var loggingType = $get(\"loggingType\");\n		var tolerance = $(\"tolerance\");\n		var purgeOverride = $(\"purgeOverride\");\n		var purgePeriod = $(\"purgePeriod\");\n		var purgeType = $(\"purgeType\");\n\n		if ($(\"toleranceSection\") && ( loggingType == ".toCharArray();
  static char[] _jspx_char_array_6 = " || \n				loggingType == ".toCharArray();
  static char[] _jspx_char_array_7 = "))\n			// On change logging for a numeric requires a tolerance setting.\n			tolerance.disabled = false;\n		else\n			tolerance.disabled = true;\n\n		if (loggingType == ".toCharArray();
  static char[] _jspx_char_array_8 = ") {\n			purgeOverride.disabled = true;\n			purgePeriod.disabled = true;\n			purgeType.disabled = true;\n		} else {\n			purgeOverride.disabled = false;\n			changePurgeOverride();\n		}\n\n		if (loggingType == ".toCharArray();
  static char[] _jspx_char_array_9 = ")\n			show(\"intervalLoggingSection\");\n		else\n			hide(\"intervalLoggingSection\");\n		\n		if(loggingType == ".toCharArray();
  static char[] _jspx_char_array_10 = ") {\n		    hide(\"intervalLoggingTypeRow\");\n		    hide(\"overrideIntervalLoggingSamplesRow\");\n		} else {\n			show(\"intervalLoggingTypeRow\");\n			changeIntervalLoggingType();\n		}\n	}\n\n	function changeIntervalLoggingType() {\n		var intervalLoggingType = $get(\"intervalLoggingType\");\n		if (intervalLoggingType == ".toCharArray();
  static char[] _jspx_char_array_11 = ")\n			show(\"overrideIntervalLoggingSamplesRow\");\n		else\n			hide(\"overrideIntervalLoggingSamplesRow\");\n	}\n\n	function changeOverrideIntervalLoggingSamples() {\n		if ($get('overrideIntervalLoggingSamples') == true) {\n			show(\"intervalLoggingSamplesRow\");\n		} else {\n			hide(\"intervalLoggingSamplesRow\");\n		}\n	}\n\n	function changePurgeOverride() {\n		var purgePeriod = $(\"purgePeriod\");\n		var purgeType = $(\"purgeType\");\n		if ($get(\"purgeOverride\")) {\n			purgePeriod.disabled = false;\n			purgeType.disabled = false;\n		} else {\n			purgePeriod.disabled = true;\n			purgeType.disabled = true;\n		}\n	}\n\n	function changeDiscard() {\n		var discard = $get(\"discardExtremeValues\");\n		if (discard) {\n			$(\"discardLowLimit\").disabled = false;\n			$(\"discardHighLimit\").disabled = false;\n		} else {\n			$(\"discardLowLimit\").disabled = true;\n			$(\"discardHighLimit\").disabled = true;\n		}\n	}\n\n	function clearPointCache() {\n		setDisabled(\"clearCacheBtn\", true);\n		DataPointEditDwr.clearPointCache(function() {\n			setDisabled(\"clearCacheBtn\", false);\n		});\n	}\n</script>\n\n<div>\n  <table>\n    <tr>\n      <td colspan=\"3\"><span class=\"smallTitle\">".toCharArray();
  static char[] _jspx_char_array_12 = "</span> ".toCharArray();
  static char[] _jspx_char_array_13 = "</td>\n    </tr>\n\n    <tr>\n      <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_14 = "</td>\n      <td class=\"formField\">".toCharArray();
  static char[] _jspx_char_array_15 = "\n          ".toCharArray();
  static char[] _jspx_char_array_16 = "\n            ".toCharArray();
  static char[] _jspx_char_array_17 = "\n        ".toCharArray();
  static char[] _jspx_char_array_18 = "</td>\n    </tr>\n\n    <tbody id=\"intervalLoggingSection\" style=\"display: none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_19 = "</td>\n        <td class=\"formField\">".toCharArray();
  static char[] _jspx_char_array_20 = " <input\n          id=\"intervalLoggingPeriod\" type=\"text\"\n          name=\"intervalLoggingPeriod\" class=\"formShort\" /> ".toCharArray();
  static char[] _jspx_char_array_21 = "</td>\n      </tr>\n\n      <tr id=\"intervalLoggingTypeRow\">\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_22 = "\n              ".toCharArray();
  static char[] _jspx_char_array_23 = "</td>\n      </tr>\n      <tr id=\"overrideIntervalLoggingSamplesRow\">\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_24 = "</td>\n      </tr>\n      <tr id=\"intervalLoggingSamplesRow\" style=\"display: hidden\">\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_25 = "</td>\n        <td class=\"formField\"><input type=\"number\"\n          id=\"intervalLoggingSampleWindowSize\" /></td>\n      </tr>\n    </tbody>\n\n    <tbody id=\"toleranceSection\" style=\"display: none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_26 = "</td>\n        <td class=\"formField\"><input id=\"tolerance\" type=\"text\"\n          name=\"tolerance\" class=\"formShort\" /></td>\n      </tr>\n    </tbody>\n\n    <tbody id=\"discardSection\" style=\"display: none;\">\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_27 = "</td>\n        <td class=\"formField\"><input\n          data-dojo-type=\"dijit/form/CheckBox\" id=\"discardExtremeValues\"\n          name=\"discardExtremeValues\" onchange=\"changeDiscard()\" /></td>\n      </tr>\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_28 = "</td>\n        <td class=\"formField\"><input id=\"discardLowLimit\"\n          type=\"text\" name=\"discardLowLimit\" class=\"formShort\" /></td>\n      </tr>\n      <tr>\n        <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_29 = "</td>\n        <td class=\"formField\"><input id=\"discardHighLimit\"\n          type=\"text\" name=\"discardHighLimit\" class=\"formShort\" /></td>\n      </tr>\n    </tbody>\n\n    <tr>\n      <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_30 = "</td>\n      <td class=\"formField\">\n        <div>\n          <input data-dojo-type=\"dijit/form/CheckBox\" id=\"purgeOverride\"\n            name=\"purgeOverride\" onchange=\"changePurgeOverride()\" /> <label\n            for=\"purgeOverride\">".toCharArray();
  static char[] _jspx_char_array_31 = "</label>\n        </div>\n        <div>\n          ".toCharArray();
  static char[] _jspx_char_array_32 = "\n          <input id=\"purgePeriod\" type=\"text\" name=\"purgePeriod\"\n            class=\"formShort\" />\n          ".toCharArray();
  static char[] _jspx_char_array_33 = "\n        </div>\n      </td>\n    </tr>\n\n    <tr>\n      <td class=\"formLabelRequired\">".toCharArray();
  static char[] _jspx_char_array_34 = "</td>\n      <td class=\"formField\"><input id=\"defaultCacheSize\"\n        type=\"text\" name=\"defaultCacheSize\" class=\"formShort\" /> <input\n        id=\"clearCacheBtn\" type=\"button\"\n        value=\"".toCharArray();
  static char[] _jspx_char_array_35 = "\"\n        onclick=\"clearPointCache();\" /></td>\n    </tr>\n  </table>\n</div>".toCharArray();
}
