<!--
    Copyright (C) 2014 Infinite Automation Systems Inc. All rights reserved.
    @author Matthew Lohbihler
-->
<p><b>Number formats</b> are used to determine how to display and parse numbers values, converting between internal floating point or integer representations and text. For example, the number 1234.5678 could be formatted as shown, but it may be preferred to be viewed as '1,234.6', or '1 234,567', or '1.2345678E3' depending upon the context and the value's semantics. The same patterns can be used to format a value for display as well as parsing text input into numeric values.</p>

<p>Number formatting in Mango is implemented by the DecimalFormat Java class, the details for which can be found <a href="https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html" target="_blank">here</a>. Some common patterns are provided below for convenience.</p>

<ul>
  <li><b>#,##0.00</b> Comma separation at thousands. Always displays the first integer digit and two decimal places (rounded).</li>
  <li><b>0.000</b> Always displays the first integer digit and three decimal places.</li>
  <li><b>0.00;(0.00)</b> Always displays the first integer digit and two decimal places. Displays negative numbers in parentheses.</li>
</ul>

<p>Formatting may be localized depending upon your System Language Mango setting or Java VM defaults if the system setting has not been set.</p>

<p>
  In addition to the standard DecimalFormat options you can prefix your format with '0x' to imply you want hexidecimal values rendered. This format will truncate the
  decimal place and requires that you supply the minimum number of places you want rendered.  So 0x00 will always render at least 2 values:
  
  <ul>
  <li>512 = 0x200</li>
  <li>255 = 0xFF</li>
  <li>16.7 = 0x10</li>
  <li>15 = 0x0F</li>
  </ul>
  
</p>