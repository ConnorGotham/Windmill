<!--
    Copyright (C) 2014 Infinite Automation Systems Inc. All rights reserved.
    @author Matthew Lohbihler
-->
<h1>Overview</h1>
<p>
  An event detector's purpose is to determine if the value of a point satisfies one or more related conditions, and if 
  so, to become "active" and raise an event that can be appropriately handled. A point can have an unlimited number of 
  event detectors. The ways in which events can be detected depend upon the data type of point, and so only the event 
  detectors that apply to the current point's data type are listed in the <b>Type</b> selection.
</p>
<p>
  A point may have as many detectors as necessary, and can have multiple detectors of the same type. (i.e. multiple 
  high limit or low limit detectors.)
</p>
<p>
  To add a new detector select the <b>Type</b> from the list and click the <img src="images/add.png"/> icon. Note 
  that the "Save" button must be clicked to have the detector actually be saved with the point. To delete an existing 
  detector click the <img src="images/delete.png"/> icon associated with the detector.
</p>
<p>
  Each detector type has an <b>Alarm level</b> attribute. This determines whether the detector raises an alarm when 
  active, and if so the severity of the alarm. See the general help page for information on Alarms.
</p>

<h1>High limit</h1>
<p>
  This detector applies only to Numeric points. The <b>High limit</b> is the value that the detector uses as a boundary.
  When the <b>State</b> is set to Greater than the event becomes active when the value is above the limit, when set to Less than or equal to 
  the event becomes active when the value is equal to or less than the limit.  The optional <b>Reset Limit</b> is the value at 
  which the alarm will reset after it has been triggered.  For a <b>State</b> of Greater than the value must become less than 
  or equal to the <b>Reset Limit</b>.  For a <b>State</b> of Less than or equal to the value must become greater than or equal to the <b>Reset Limit</b>.
  If not entered this value will be set to the  limit. The detector may optionally be configured with a <b>Duration</b>; 
  the point's value must stay above the high limit for at least the given duration before the detector becomes active. 
  Events raised by this detector will automatically return to normal when the condition is no longer satisfied.
</p>

<h1>Low limit</h1>
<p>
  This detector applies only to Numeric points. The <b>Low limit</b> is the value that the detector uses as a boundary.  
  When the <b>State</b> is set to Less than the event becomes active when the value is below the limit, when set to Greater than or equal to 
  the event becomes active when the value is equal to or greater than the limit.  The optional <b>Reset Limit</b> is the value at 
  which the alarm will reset after it has been triggered. For a <b>State</b> of Less than the value must become greater than 
  or equal to the <b>Reset Limit</b>.  For a <b>State</b> of Greater than or equal to the value must become less than or equal to the <b>Reset Limit</b>.
  If not entered this value will be set to the  limit. If not entered this value will be set to the 
  limit.  The detector may optionally be configured with a <b>Duration</b>; the point's value must stay below the low 
  limit for at least the given duration before the detector becomes active. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied.
</p>
<h1>Analog change</h1>
<p>
  This detector applies only to Numeric points. The <b>state</b> determines if the detector checks for increases, decreases or
  either change. The <b>limit</b> determines the amount the point can change. The <b>update event</b> stipulates if only logged values
  should be considered. Values within the <b>Duration</b> of now and the value of the point at the beginning of the checked period are used
  to assess if the event is active. If a point has one value 0 one hour ago and one value 1 now, and the change detector had a limit of 1,
  then it would be active regardless of the duration setting since at the point had value 0 when it got value 1.
</p>
<h1>Range</h1>
<p>
  This detector applies only to Numeric points. The <b>Low range limit</b> and <b>High range limit</b>define the range which the detector becomes 
  active. The detector may optionally be configured with a <b>Duration</b>; the point's value must stay within the
  range for at least the given duration before the detector becomes active. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied. The range is inclusive of the limits, 
  meaning that if the value is exactly the low or high range limit the detector will fire an event.
</p>
<h1>Change</h1>
<p>
  This detector applies to all data types. It raises an event whenever the point value changes. Events raised by this 
  detector do not automatically return to normal.
</p>

<h1>No change</h1>
<p>
  This detector applies to all data types. It raises an event whenever the value has not changed within the given 
  <b>Duration</b>. This can be useful  to detect when equipment is malfunctioning. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied.
</p>

<h1>No update</h1>
<p>
  This detector applies to all data types. It raises an event whenever the value has not been updated within the 
  given <b>Duration</b>. (A point value change requires the new point value to be different from the previous point 
  value. A point value update only requires the time of the point value to change; the value itself can remain the 
  same.) This can be useful  to detect when equipment is malfunctioning. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied.
</p>

<h1>State</h1>
<p>
  This detector applies to Binary, Multistate, and Alphanumeric points. It becomes active whenever the point enters the 
  given <b>State</b>. The detector may optionally be configured with a <b>Duration</b>; the point must stay in the 
  given state for at least the given duration before the detector becomes active. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied.
</p>

<h1>State change count</h1>
<p>
  This detector applies only to Binary, Multistate, and Alphanumeric points. It becomes active whenever the point value 
  changes at least <b>Change count</b> times within the given <b>Duration</b>. Events raised by this detector will 
  automatically return to normal when the condition is no longer satisfied.
</p>

<h1>Positive CUSUM</h1>
<p>
  This detector applies only to Numeric points. The <b>Positive limit</b> is the CUSUM above which the detector becomes 
  active, and the <b>Weight</b> is the constant weight value to use for CUSUM calculation. The detector may optionally 
  be configured with a <b>Duration</b>; the CUSUM must stay above the limit for at least the given duration before the 
  detector becomes active. Events raised by this detector will automatically return to normal when the condition is no 
  longer satisfied.
</p>

<h1>Negative CUSUM</h1>
<p>
  This detector applies only to Numeric points. The <b>Negative limit</b> is the CUSUM below which the detector becomes 
  active, and the <b>Weight</b> is the constant weight value to use for CUSUM calculation. The detector may optionally 
  be configured with a <b>Duration</b>; the CUSUM must stay below the limit for at least the given duration before the 
  detector becomes active. Events raised by this detector will automatically return to normal when the condition is no 
  longer satisfied.
</p>

<h1>Smoothness</h1>
<p>
  This detector applies only to Numeric points. It uses an algorithm to calculate a smoothness metric on a stream of 
  values. The metric is specific to the stream of values, and will likely be different for each input source. Because 
  the calculated smoothness value at any point can be highly variable, it is often useful to apply a "boxcar" to a set
  of calculated values from which the average is derived. The <b>Low limit</b> is the value below which the detector 
  becomes active, and the <b>Boxcar size</b> is the length of calculated values over which the average is derived. The 
  detector may optionally be configured with a <b>Duration</b>; the smoothness must stay below the limit for at least 
  the given duration before the detector becomes active. Events raised by this detector will automatically return to 
  normal when the condition is no longer satisfied. NOTE: this detector is best used with points that update on a 
  regular schedule, such as every 5 minutes. Points that update irregularly may not perform well.
</p>