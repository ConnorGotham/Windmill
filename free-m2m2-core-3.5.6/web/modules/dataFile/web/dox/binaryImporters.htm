<p>Arbitrary Binary Files can be imported through a Binary importer. The implementing class only has one function
that needs to get overridden, which is passed an input stream to the file. This method adds point values it reads
to the parsedPoints list. Here is a sample implementation, the SimplyBinaryImporter in the CompilingGrounds:</p>
<pre>
<code>
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import com.infiniteautomation.datafilesource.contexts.AbstractFileStreamDataSource;
import com.infiniteautomation.datafilesource.dataimage.NumericImportPoint;

public class SimpleBinaryImporter extends AbstractFileStreamDataSource {

	@Override
	public void importFile(InputStream in) throws IOException {
		int n;
		int counter = 0;
		Map<String, String> extraParams = new HashMap<String, String>();
		while((n = in.read()) != -1) {
			//This class is just going to import every fifth byte to the same point
			int thisByte = counter % 5;
			this.parsedPoints.add(new NumericImportPoint(Integer.toString(thisByte), n, System.currentTimeMillis()-(counter/5), extraParams));
			counter += 1;
		}
	}

}
</code>
</pre>