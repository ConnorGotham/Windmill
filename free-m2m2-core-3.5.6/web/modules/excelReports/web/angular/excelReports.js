!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular")):"function"==typeof define&&define.amd?define(["angular"],t):"object"==typeof exports?exports.excelReports=t(require("angular")):e.excelReports=t(e.angular)}(window,function(e){return function(e){function t(t){for(var n,i,a=t[0],o=t[1],l=0,m=[];l<a.length;l++)i=a[l],r[i]&&m.push(r[i][0]),r[i]=0;for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);for(s&&s(t);m.length;)m.shift()()}var n={},r={0:0};function i(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise(function(t,i){n=r[e]=[t,i]});t.push(n[2]=a);var o,l=document.getElementsByTagName("head")[0],s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+""+({}[e]||e)+".js?v="+{1:"360f847be5ebc161f1c1"}[e]}(e),o=function(t){s.onerror=s.onload=null,clearTimeout(m);var n=r[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src,o=new Error("Loading chunk "+e+" failed.\n("+i+": "+a+")");o.type=i,o.request=a,n[1](o)}r[e]=void 0}};var m=setTimeout(function(){o({type:"timeout",target:s})},12e4);s.onerror=s.onload=o,l.appendChild(s)}return Promise.all(t)},i.m=e,i.c=n,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/modules/excelReports/web/angular/",i.oe=function(e){throw console.error(e),e};var a=window.webpackJsonpexcelReports=window.webpackJsonpexcelReports||[],o=a.push.bind(a);a.push=t,a=a.slice();for(var l=0;l<a.length;l++)t(a[l]);var s=o;return i(i.s=18)}([function(t,n){t.exports=e},function(e,t){e.exports='<div ng-cloak>\n    <md-content>\n      <md-tabs md-dynamic-height md-border-bottom>\n        <md-tab label="Report Templates">\n          <md-content class="md-padding">\n              <ma-excel-report-templates></ma-excel-report-templates>\n          </md-content>\n        </md-tab>\n        <md-tab label="Finished / In-Progress Reports">\n          <md-content class="md-padding">\n              <ma-finished-in-progress-excel-reports></ma-finished-in-progress-excel-reports>\n          </md-content>\n        </md-tab>\n      </md-tabs>\n    </md-content>\n</div>'},function(e,t){e.exports='<div layout="column" layout-gt-md="row" layout-gt-lg="row" flex="noshrink">\n    <md-card flex-gt-md="25" flex-gt-lg="20" layout="column">\n        <md-card-title flex="nogrow">\n            <md-card-title-text>\n                <span class="md-headline">\n                    <span ma-tr="excelreports.ui.selectTemplate"></span>\n                </span>\n            </md-card-title-text>\n        </md-card-title>\n    \n        <md-card-content flex ng-if="!$ctrl.$mdMedia(\'gt-md\')">\n            <section layout="row">\n                <ma-excel-report-template-select flex layout deleted-item="$ctrl.deletedItem" updated-item="$ctrl.updatedItem" ng-model="$ctrl.selectedTemplate" ng-change="$ctrl.change()"></ma-excel-report-template-select>\n                <md-button class="md-raised md-primary" ng-click="$ctrl.newTemplate()" style="margin-top: 20px; margin-bottom: 20px;">\n                    <md-icon>add</md-icon> <span ma-tr="excelreports.ui.newTemplate"></span>\n                </md-button>\n            </section>\n            <section layout="row" ng-if="$ctrl.selectedTemplate">\n                <md-button class="md-icon-button" aria-label="Copy Template" ng-click="$ctrl.copyTemplate()">\n                    <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.copyTemplate"></md-tooltip>\n                    <md-icon>library_books</md-icon>\n                </md-button>\n                <md-button class="md-icon-button" aria-label="Delete Template" ng-click="$ctrl.deleteTemplate()">\n                    <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.deleteTemplate"></md-tooltip>\n                    <md-icon>delete</md-icon>\n                </md-button>\n                <md-button class="md-icon-button" aria-label="Run Template" ng-click="$ctrl.runTemplate()">\n                    <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.runTemplate"></md-tooltip>\n                    <md-icon>play_arrow</md-icon>\n                </md-button>\n                <md-button class="md-icon-button" aria-label="Configure and Run Template" ng-click="$ctrl.scheduleTemplate($ctrl.selectedTemplate, $event)">\n                    <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.scheduleTemplate"></md-tooltip>\n                    <md-icon>schedule</md-icon>\n                </md-button>\n            </section>\n        </md-card-content>\n\n        <md-card-content flex layout layout-align="start start" ng-if="$ctrl.$mdMedia(\'gt-md\')" style="padding-left: 0; padding-right: 0;">\n            <ma-excel-report-template-list flex layout deleted-item="$ctrl.deletedItem" updated-item="$ctrl.updatedItem" ng-model="$ctrl.selectedTemplate" ng-change="$ctrl.change()"></ma-excel-report-template-list>\n        </md-card-content>\n    \n    </md-card>\n\n    <div flex>\n        <ma-excel-report-setup item-deleted="$ctrl.deletedItem = $item" item-updated="$ctrl.updatedItem = $item" ng-model="$ctrl.selectedTemplate"></ma-excel-report-setup>\n    </div>\n    \n</div>'},function(e,t){e.exports='<section layout="row">\n    <md-button class="md-raised md-warn" ng-click="$ctrl.deleteAllFailed()" style="margin-top: 20px; margin-bottom: 20px;">\n        <span ma-tr="excelreports.deleteAllFailed"></span>\n    </md-button>\n    <md-button class="md-raised md-warn" ng-click="$ctrl.deleteSelected()" ng-disabled="$ctrl.selectedReports.length <= 0" style="margin-top: 20px; margin-bottom: 20px;">\n        <span ma-tr="excelreports.deleteSelected"></span>\n    </md-button>\n</section>\n\n<md-table-container>\n    <table md-table md-row-select multiple ng-model="$ctrl.selectedReports" md-progress="promise">\n        <thead md-head md-order="query.order">\n        <tr md-row>\n            <th md-column ma-tr="excelreports.ui.exportId"></th>\n            <th md-column ma-tr="excelreports.reportName"></th>\n            <th md-column ma-tr="excelreports.reportState"></th>\n            <th md-column ma-tr="excelreports.owner"></th>\n            <th md-column ma-tr="excelreports.runTimeStart"></th>\n            <th md-column ma-tr="excelreports.runDuration"></th>\n            <th md-column ma-tr="excelreports.preventPurge"></th>\n            <th md-column ma-tr="excelreports.reportReadPermission"></th>\n            <th md-column></th>\n        </tr>\n        </thead>\n        <tbody md-body>\n            <tr md-row md-select="excelReport" md-select-id="id" ng-repeat="excelReport in $ctrl.excelReports">\n                \n                <td md-cell>{{ excelReport.xid }}</td>\n                <td md-cell>{{ excelReport.name }}</td>\n                <td md-cell>{{ excelReport.state }}</td>\n                <td md-cell>{{ excelReport.username }}</td>\n                <td md-cell>{{ excelReport.reportRunTimestamp }}</td>\n                <td md-cell>{{ excelReport.reportRunDuration }}</td>\n                <td md-cell>\n                    <md-input-container flex="100" flex-order-gt-md="5" class="ma-input-space-between md-block">\n                        <md-checkbox ng-change="$ctrl.saveReport(excelReport)" ng-model="excelReport.preventPurge"></md-checkbox>\n                    </md-input-container>\n                </td>\n                <td md-cell>\n                    <md-input-container flex="100" flex-order-gt-md="3" class="ma-input-space-between">\n                        <label ma-tr="ui.app.readPermission"></label>\n                        <input name="readPermission" ng-model="excelReport.readPermission" pattern="^\\s*[\\w-]+?\\s*(,\\s*[\\w-]+?\\s*)*$">\n                        <div ng-messages="$ctrl.form.readPermission.$error">\n                           <div ng-message="pattern" ma-tr="ui.app.invalidPermissions"></div>\n                        </div>\n                        <ma-permissions-menu ng-change="$ctrl.saveReport(excelReport)" ng-model="excelReport.readPermission"></ma-permissions-menu>\n                    </md-input-container>\n                </td>\n                <td md-cell>\n                    \n                    <div layout layout-align="center center">\n                        <md-button class="md-icon-button" ng-href="{{ \'/rest/v1/excel-reports/download/\' + excelReport.xid }}" ng-disabled="!$ctrl.form.$valid && $ctrl.form.$dirty">\n                            <md-tooltip md-direction="bottom" ma-tr="common.download"></md-tooltip>\n                            <md-icon>cloud_download</md-icon>\n                        </md-button>\n                        <md-button class="md-icon-button" ng-href="{{ \'/rest/v1/excel-reports/view/\' + excelReport.xid }}" target="_blank" ng-disabled="!$ctrl.schedule.isNew() && $ctrl.form.$dirty">\n                            <md-tooltip md-direction="bottom" ma-tr="common.view"></md-tooltip>\n                            <md-icon>remove_red_eyes</md-icon>\n                        </md-button>\n                        <md-button class="md-icon-button" ng-click="$ctrl.deleteReport(excelReport)" ng-disabled="$ctrl.template.isNew() && $ctrl.form.$dirty">\n                            <md-tooltip md-direction="bottom" ma-tr="common.delete"></md-tooltip>\n                            <md-icon>delete</md-icon>\n                        </md-button>\n                    </div>\n\n                </td>\n                \n            </tr>\n        </tbody>\n    </table>\n</md-table-container>'},function(e,t){e.exports='<md-input-container flex>\n    <label ng-transclude="labelSlot">\n        <span ma-tr="excelreports.ui.selectTemplate"></span>\n    </label>\n    <md-select ng-model="$ctrl.selected" ng-change="$ctrl.selectTemplate()" ng-model-options="{trackBy: \'$value.xid\'}">\n        <md-option ng-repeat="template in $ctrl.templates | orderBy:\'name\' track by template.xid" ng-value="template">\n            <span ng-bind="template.name"></span>\n        </md-option>\n    </md-select>\n</md-input-container>'},function(e,t){e.exports='<md-list flex>\n\n    <md-list-item class="md-2-line" ng-click="$ctrl.newTemplate()" md-colors="{\'background\': $ctrl.new ? \'accent-hue-1\' : \'background-hue-1\'}">\n        <div class="md-list-item-text">\n            <h3 ma-tr="excelreports.ui.newTemplate"></h3>\n            <p ma-tr="excelreports.ui.createNewTemplate"></p>\n        </div>\n        <md-button class="md-secondary md-icon-button" ng-click="$ctrl.newTemplate()">\n            <md-icon>add</md-icon>\n        </md-button>\n    </md-list-item>\n\n    <md-list-item ng-repeat="template in $ctrl.templates" class="md-2-line" ng-click="$ctrl.selectTemplate(template)" md-colors="{\'background\': $ctrl.selectedTemplate.xid === template.xid ? \'accent-hue-1\' : \'background-hue-1\'}">\n        <div class="md-list-item-text">\n            <h3> {{ template.name }} </h3>\n            <p> {{ template.username }} </p>\n        </div>\n        <md-menu class="md-secondary">\n            <md-button aria-label="Open settings menu" class="md-icon-button" ng-click="$ctrl.openMenu($mdMenu, $event)">\n                <md-icon>settings</md-icon>\n            </md-button>\n            <md-menu-content width="4">\n                <md-menu-item>\n                    <md-button ng-click="$ctrl.copyTemplate(template)">\n                        <md-icon aria-label="Copy Template">library_books</md-icon>\n                        <span ma-tr="excelreports.ui.copyTemplate"></span>\n                    </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                    <md-button ng-click="$ctrl.deleteTemplate(template)">\n                        <md-icon aria-label="Delete Template">delete</md-icon>\n                        <span ma-tr="excelreports.ui.deleteTemplate"></span>\n                    </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                    <md-button ng-click="$ctrl.runTemplate(template)">\n                        <md-icon aria-label="Run Template">play_arrow</md-icon>\n                        <span ma-tr="excelreports.ui.runTemplate"></span>\n                    </md-button>\n                </md-menu-item>\n                <md-menu-item>\n                    <md-button ng-click="$ctrl.scheduleTemplate(template, $event)">\n                        <md-icon aria-label="Configure and Run Template">schedule</md-icon>\n                        <span ma-tr="excelreports.ui.scheduleTemplate"></span>\n                    </md-button>\n                </md-menu-item>\n            </md-menu-content>\n        </md-menu>\n    </md-list-item>\n\n</md-list>'},function(e,t){e.exports='<div flex layout="column" ng-form="$ctrl.form">\n    <md-card>\n        <md-card-title>\n            <md-card-title-text>\n                <div flex layout>\n                    <div flex>\n                        <span class="md-headline">\n                            <span ma-tr="excelreports.ui.reportSetup"></span>\n                        </span>\n                    </div>\n        \n                    <div flex layout layout-align="end center" class="ma-margin-bottom">\n                        <md-button class="md-raised md-primary" ng-click="$ctrl.save($event)">\n                            <md-icon>save</md-icon> <span ma-tr="common.save"></span>\n                        </md-button>\n                        <md-button class="md-raised md-warn" ng-click="$ctrl.delete($event)" ng-disabled="!$ctrl.form.$valid && !$ctrl.form.$touched">\n                            <md-icon>delete</md-icon> <span ma-tr="common.delete"></span>\n                        </md-button>\n                    </div>\n                </div>\n            </md-card-title-text>\n        </md-card-title>\n        <md-card-content>\n        \n            <div layout layout-align="space-between top" layout-wrap>\n\n                <md-input-container flex="100" flex-gt-md="45" flex-order-gt-md="1" class="ma-input-space-between">\n                    <label ma-tr="common.name"></label>\n                    <input name="name" ng-model="$ctrl.template.name" required ma-validation-messages="$ctrl.validationMessages">\n                    <div ng-messages="$ctrl.form.name.$error">\n                        <div ng-message="required" ma-tr="ui.app.required"></div>\n                        <div ng-message="validationMessage" ng-bind="$ctrl.form.name.validationMessage"></div>\n                    </div>\n                </md-input-container>\n\n                <div layout layout-align="start top" flex="100" flex-gt-md="45" layout-wrap flex-order-gt-md="2">\n                    <md-input-container flex="50" flex-sm="20" flex-gt-md="30" flex-order-gt-md="2" class="ma-input-space-between md-block">\n                        <md-checkbox ng-model="$ctrl.template.preventPurge"><span ma-tr="excelreports.preventPurge"></span></md-checkbox>\n                    </md-input-container>\n\n                    <div flex="40" flex-sm="20" flex-gt-md="20" flex-order-gt-md="3">\n                        <md-button class="md-icon-button" ng-click="$ctrl.showMore = !$ctrl.showMore" ng-class="{\'md-accent\': $ctrl.showMore}" style="margin-top: 20px;">\n                            <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.showMore"></md-tooltip>\n                            <md-icon>edit</md-icon>\n                        </md-button>\n                    </div>\n                </div>\n        \n                <div layout="column" flex="100" flex-order-gt-md="4">\n                    <h4 ma-tr="excelreports.ui.selectTemplateFile" style="margin-bottom: 0; margin-top: 0;"></h4>\n                    <md-input-container flex="100" class="ma-input-space-between md-block" style="margin-top: 0; margin-bottom: 0;">\n                        <md-button name="filename" class="md-raised md-primary"\n                            ma-choose-file="$ctrl.fileUploaded($url)"\n                            ma-choose-file-selected="$ctrl.template.filename"\n                            ma-choose-file-options="{mimeTypes: \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\', extensions: \'xls, xlsx, xlsm\', store:\'EXCEL_REPORT_TEMPLATES\'}">\n                            <md-icon>attachment</md-icon>\n                            <span ng-if="!$ctrl.template.filename" ma-tr="common.chooseFile"></span>\n                            <span ng-if="$ctrl.template.filename">{{ $ctrl.template.filename }}</span>\n                        </md-button>\n                        <span ng-if="$ctrl.checkError(\'filename\')" md-colors="{color: \'warn-A700\'}">{{ $ctrl.checkError(\'filename\').message }}</span>\n                    </md-input-container>\n                </div>\n        \n                <md-input-container ng-if="$ctrl.showMore" flex="100" flex-gt-md="45" flex-order-gt-md="5" class="ma-input-space-between">\n                    <label ma-tr="ui.app.readPermission"></label>\n                    <input name="readPermission" ng-model="$ctrl.template.reportReadPermission" pattern="^\\s*[\\w-]+?\\s*(,\\s*[\\w-]+?\\s*)*$">\n                    <div ng-messages="$ctrl.form.readPermission.$error">\n                        <div ng-message="pattern" ma-tr="ui.app.invalidPermissions"></div>\n                    </div>\n                    <ma-permissions-menu ng-model="$ctrl.template.reportReadPermission"></ma-permissions-menu>\n                </md-input-container>\n                \n                <md-input-container ng-if="$ctrl.showMore" flex="100" flex-gt-md="45" flex-order-gt-md="6" class="ma-input-space-between">\n                    <label ma-tr="ui.app.editPermission"></label>\n                    <input name="editPermission" ng-model="$ctrl.template.editPermission" pattern="^\\s*[\\w-]+?\\s*(,\\s*[\\w-]+?\\s*)*$">\n                    <div ng-messages="$ctrl.form.editPermission.$error">\n                        <div ng-message="pattern" ma-tr="ui.app.invalidPermissions"></div>\n                    </div>\n                    <ma-permissions-menu ng-model="$ctrl.template.editPermission"></ma-permissions-menu>\n                </md-input-container>\n\n                <md-input-container ng-if="$ctrl.showMore" flex="100" flex-gt-md="45" flex-order-gt-md="7" class="ma-input-space-between">\n                    <label ma-tr="common.xid"></label>\n                    <input name="xid" ng-model="$ctrl.template.xid" ng-required="!$ctrl.schedule.isNew()">\n                    <div ng-messages="$ctrl.form.xid.$error">\n                        <div ng-message="required" ma-tr="ui.app.required"></div>\n                    </div>\n                </md-input-container>\n        \n            </div>\n\n        </md-card-content>\n    </md-card>\n\n\n    <md-card ng-if="$ctrl.template">\n        <md-card-title>\n            <md-card-title-text>\n                <span class="md-headline">\n                    <span ma-tr="excelreports.timePeriods"></span>\n                </span>\n            </md-card-title-text>\n        </md-card-title>\n        <md-card-content>\n\n            <div ng-repeat="timeSerie in $ctrl.template.timeSeries" style="padding-top: 20px; padding-bottom: 20px;">\n                <ma-excel-report-time-period-form ng-model="timeSerie" all-named-ranges="$ctrl.template.allNamedRanges"></ma-excel-report-time-period-form>\n                <span ng-if="$ctrl.checkError(\'time-series-points[\' + ($index + 1) + \']\')" md-colors="{color: \'warn-A700\'}">{{ $ctrl.checkError(\'time-series-points[\' + ($index + 1) + \']\').message }}</span>                \n            </div>\n        \n            <div layout="row" layout-align="start top" ng-if="$ctrl.template">\n                <md-button class="md-raised md-primary" ng-click="$ctrl.addTimeSerie()" style="margin-top: 20px; margin-bottom: 20px;">\n                    <md-icon>add</md-icon> <span ma-tr="excelreports.addTimePeriod"></span>\n                </md-button>\n            </div>\n\n        </md-card-content>\n    </md-card>\n\n    <md-card>\n        <md-card-title>\n            <md-card-title-text>\n                <div flex layout layout-align="space-between top" class="ma-margin-bottom">\n                    <span class="md-headline">\n                        <span ma-tr="excelreports.postProcessingScript"></span>\n                    </span>\n                    <md-checkbox ng-model="$ctrl.showPostProcessingScript">\n                        <span ma-tr="excelreports.ui.showScript"></span>\n                    </md-checkbox>\n                </div> \n            </md-card-title-text>\n        </md-card-title>\n        <md-card-content>\n            <ma-excel-report-scripting-editor ng-if="$ctrl.showPostProcessingScript" disabled="$ctrl.template.id == -1" url="/rest/v2/excel-report-templates/validate-script?templateId={{$ctrl.template.id}}" context="$ctrl.timeSeriesContext" ng-model="$ctrl.template.postProcessingScript"></ma-excel-report-scripting-editor>\n        </md-card-content>\n    </md-card>\n\n    <md-card>\n        <md-card-title>\n            <md-card-title-text>\n                <span class="md-headline">\n                    <span ma-tr="excelreports.schedule"></span>\n                </span>\n            </md-card-title-text>\n        </md-card-title>\n\n        <md-card-content>\n            <div ng-if="$ctrl.template">\n                <md-checkbox ng-model="$ctrl.template.schedule"><span ma-tr="excelreports.scheduleThisTemplate"></span></md-checkbox>\n            </div>\n\n            <div ng-if="$ctrl.template.schedule">\n            \n                <h3 ma-tr="excelreports.ui.selectCronPattern"></h3>\n                \n                <div layout>\n                    <md-input-container flex="100" flex-gt-md="33">\n                        <label ma-tr="common.cronPattern"></label>\n                        <input name="name" ng-model="$ctrl.template.scheduleCron" required>\n                        <div ng-messages="$ctrl.form.name.$error">\n                            <div ng-message="required" ma-tr="ui.app.required"></div>\n                        </div>\n                    </md-input-container>\n                </div>\n\n                <ma-cron-pattern ng-model="$ctrl.template.scheduleCron"></ma-cron-pattern>\n\n            </div>\n\n        </md-card-content>\n\n    </md-card>\n\n    <md-card>\n        <md-card-title>\n            <md-card-title-text>\n                <span class="md-headline">\n                    <span ma-tr="excelreports.email"></span>\n                </span>\n            </md-card-title-text>\n        </md-card-title>\n\n        <md-card-content>\n            <div layout layout-wrap>\n                <div flex="100" flex-gt-md="50">\n                    <div ng-if="$ctrl.template">\n                        <md-checkbox ng-model="$ctrl.template.email"><span ma-tr="excelreports.emailReport"></span></md-checkbox>\n                    </div>\n                    <div ng-if="$ctrl.template && $ctrl.template.email">\n                        <md-checkbox ng-model="$ctrl.template.zipData"><span ma-tr="excelreports.zipData"></span></md-checkbox>\n                    </div>\n                </div>\n                \n                <md-input-container ng-if="$ctrl.template && $ctrl.template.email" flex="100" flex-gt-md="50">\n                    <label ma-tr="excelreports.emailTemplate"></label>\n                    <md-select ng-model="$ctrl.template.emailTemplateFilename" required>\n                        <md-option ng-repeat="emailTemplate in $ctrl.emailTemplates" value="{{emailTemplate.name}}">{{ emailTemplate.name }}</md-option>\n                    </md-select>\n                </md-input-container>\n            </div>\n\n            <div ng-if="$ctrl.template && $ctrl.template.email">\n\n            <span class="md-headline">\n                <span ma-tr="excelreports.emailRecipients"></span>\n            </span>\n            <span ng-if="$ctrl.checkError(\'recipients\')" md-colors="{color: \'warn-A700\'}">{{ $ctrl.checkError(\'recipients\').message }}</span>\n            \n            <span class="md-headline">\n                <span ma-tr="excelreports.emailRecipients"></span>\n            </span>\n            <span ng-if="$ctrl.checkError(\'recipients\')" style="color: rgb(221,44,0);">{{ $ctrl.checkError(\'recipients\').message }}</span>\n            \n            <md-table-container ng-if="$ctrl.template && $ctrl.template.email" flex="100" class="ma-input-space-between">\n                <table md-table>\n                    <thead md-head>\n                        <tr md-row>\n                            <th md-column ma-tr="common.type"></th>\n                            <th md-column ma-tr="excelreports.ui.recipient"></th>\n                            <th md-column></th>\n                        </tr>\n                    </thead>\n                    <tbody md-body>\n                        <tr md-row ng-repeat="recipient in $ctrl.template.recipients">\n                            <td style="padding-top: 0; padding-bottom: 0;" md-cell>\n                                <md-input-container flex="100" class="ma-input-space-between" style="width: 100%;">\n                                    <label ma-tr="common.type"></label>\n                                    <md-select ng-model="recipient.type" required>\n                                        <md-option value="ADDRESS">Address</md-option>\n                                        <md-option value="MAILING_LIST">Mailing List</md-option>\n                                        <md-option value="USER">User</md-option>\n                                    </md-select>\n                                </md-input-container>\n                            </td>\n                            <td style="padding-top: 0; padding-bottom: 0;" md-cell>\n                                <md-input-container ng-if="recipient.type === \'ADDRESS\'" flex class="ma-input-space-between" style="width: 100%;">\n                                    <label ma-tr="excelreports.ui.address"></label>\n                                    <input name="address" ng-model="recipient.address" required ma-validation-messages="$ctrl.validationMessages">\n                                    <div ng-messages="$ctrl.form.address.$error">\n                                        <div ng-message="required" ma-tr="ui.app.required"></div>\n                                        <div ng-message="validationMessage" ng-bind="$ctrl.form.name.validationMessage"></div>\n                                    </div>\n                                </md-input-container>\n                                <md-input-container ng-if="recipient.type === \'MAILING_LIST\'" flex class="ma-input-space-between" style="width: 100%;">\n                                    <label ma-tr="excelreports.ui.mailingList"></label>\n                                    <md-select ng-model="recipient.xid" ng-change="$ctrl.selectMailingList(recipient)" required>\n                                        <md-option ng-repeat="mailingList in $ctrl.mailingLists" value="{{mailingList.xid}}">{{ mailingList.name }}</md-option>\n                                    </md-select>\n                                </md-input-container>\n                                <md-input-container ng-if="recipient.type === \'USER\'" flex class="ma-input-space-between" style="width: 100%;">\n                                    <label ma-tr="common.user"></label>\n                                    <md-select ng-model="recipient.username" required>\n                                        <md-option ng-repeat="user in $ctrl.users" value="{{user.username}}">{{ user.username }}</md-option>\n                                    </md-select>\n                                </md-input-container>\n                            </td>\n                            <td style="padding-top: 0; padding-bottom: 0;" md-cell>\n                                <md-button class="md-icon-button" aria-label="Delete Template" ng-click="$ctrl.deleteRecipient(recipient)">\n                                    <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.deleteTemplate"></md-tooltip>\n                                    <md-icon>delete</md-icon>\n                                </md-button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </md-table-container>\n                \n            </div>\n        \n            <div ng-if="$ctrl.template && $ctrl.template.email" layout="row" layout-align="start top" ng-if="$ctrl.template">\n                <md-button class="md-raised md-primary" ng-click="$ctrl.addRecipient()" style="margin-top: 20px; margin-bottom: 20px;">\n                    <md-icon>add</md-icon><span ma-tr="excelreports.ui.addRecipient"></span>\n                </md-button>\n            </div>\n\n\n                <div flex layout layout-align="space-between top" class="my-10">\n                    <span class="md-headline" ma-tr="excelreports.emailModelScript"></span>\n                    <md-checkbox ng-model="$ctrl.showEmailModelScript">\n                        <span ma-tr="excelreports.ui.showScript"></span>\n                    </md-checkbox>\n                </div>\n                <ma-excel-report-scripting-editor ng-if="$ctrl.showEmailModelScript" disabled="$ctrl.template.id == -1"url="/rest/v2/excel-report-templates/validate-script?templateId={{$ctrl.template.id}}" context="$ctrl.timeSeriesContext" ng-model="$ctrl.template.emailModelScript"></ma-excel-report-scripting-editor>\n            </div>\n\n            <md-divider></md-divider>\n\n            <div flex layout layout-align="end center" class="ma-margin-bottom">\n                <md-button class="md-raised md-primary" ng-click="$ctrl.save($event)">\n                    <md-icon>save</md-icon> <span ma-tr="common.save"></span>\n                </md-button>\n                <md-button class="md-raised md-warn" ng-click="$ctrl.delete($event)" ng-disabled="!$ctrl.form.$valid && !$ctrl.form.$touched">\n                    <md-icon>delete</md-icon> <span ma-tr="common.delete"></span>\n                </md-button>\n            </div>\n\n        </md-card-content>\n\n    </md-card>                \n              \n</div>'},function(e,t){e.exports='<div layout layout-align="space-between center" layout-wrap ng-form="$ctrl.form">\n\n    <div flex="100" layout flex-order-gt-md="1">\n        <div flex="90" layout>\n            <md-input-container flex>\n                <label ma-tr="common.name"></label>\n                <input name="name" ng-model="$ctrl.timeSerie.name" required>\n                <div ng-messages="$ctrl.form.timeSerie.$error">\n                    <div ng-message="required" ma-tr="ui.app.required"></div>\n                </div>\n            </md-input-container>\n        </div>\n        <div flex layout="row" layout-align="end top">\n            <md-button class="md-icon-button" ng-click="$ctrl.delete()">\n                <md-tooltip md-direction="bottom" ma-tr="common.delete"></md-tooltip>\n                <md-icon>delete</md-icon>\n            </md-button>\n        </div>\n    </div>\n\n    <h4 ma-tr="excelreports.timePeriod" flex-order-gt-md="2"></h4>\n    <section layout layout-align="space-between center" layout-wrap flex="100" flex-order-gt-md="3">\n\n        <md-input-container flex="100" flex-gt-sm="40" flex-order-gt-md="1" class="ma-input-space-between">  \n            <md-radio-group name="dateRangeType" ng-model="$ctrl.timeSerie.dateRangeType" layout-gt-xs="row" flex="100" required>\n                <md-radio-button value="NOT_SPECIFIED"><span ma-tr="excelreports.notSpecified"></span></md-radio-button>\n                <md-radio-button value="RELATIVE"><span ma-tr="excelreports.relative"></span></md-radio-button>\n                <md-radio-button value="SPECIFIC"><span ma-tr="excelreports.specific"></span></md-radio-button>\n            </md-radio-group>\n            <div ng-messages="$ctrl.form.dateRangeType.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n\n        <md-input-container ng-if="$ctrl.timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="20" flex-gt-sm="20" flex-order-gt-md="2">\n            <label ma-tr="excelreports.ui.dateType"></label>\n            <md-select name="relativeDateType" ng-model="$ctrl.timeSerie.relativeDateType" required>\n                <md-option value="PAST" ma-tr="common.relativeDateType.past"></md-option>\n                <md-option value="PREVIOUS" ma-tr="common.relativeDateType.previous"></md-option>\n                <md-option value="CURRENT" ma-tr="excelreports.current"></md-option>\n                <md-option value="AGO" ma-tr="excelreports.ago">Ago</md-option>\n            </md-select>\n            <div ng-messages="$ctrl.form.relativeDateType.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n    \n        <md-input-container ng-if="$ctrl.timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="20" flex-gt-sm="20" flex-order-gt-md="3">\n            <label ma-tr="excelreports.ui.periodCount"></label>\n            <input name="name" type="number" min="1" ng-model="$ctrl.timeSerie.periodCount" required>\n            <div ng-messages="$ctrl.form.name.$error">\n               <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n    \n        <md-input-container ng-if="$ctrl.timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="20" flex-gt-sm="20" flex-order-gt-md="4">\n            <label ma-tr="excelreports.ui.periodType"></label>\n            <md-select name="periodType" ng-model="$ctrl.timeSerie.periodType" required>\n                <md-option value="SECONDS" ma-tr="dateAndTime.seconds"></md-option>\n                <md-option value="MINUTES" ma-tr="dateAndTime.minutes"></md-option>\n                <md-option value="HOURS" ma-tr="dateAndTime.hours"></md-option>\n                <md-option value="DAYS" ma-tr="dateAndTime.days"></md-option>\n                <md-option value="WEEKS" ma-tr="dateAndTime.weeks"></md-option>\n                <md-option value="MONTHS" ma-tr="dateAndTime.months"></md-option>\n                <md-option value="YEARS" ma-tr="dateAndTime.years"></md-option>\n            </md-select>\n            <div ng-messages="$ctrl.form.periodType.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n    \n        <md-input-container ng-if="$ctrl.timeSerie.dateRangeType === \'SPECIFIC\'" flex="100" flex-sm="30" flex-gt-sm="30" flex-order-gt-md="2">\n            <label ma-tr="excelreports.ui.from"></label>\n            <ma-date-picker ng-model="$ctrl.timeSerie.startTimestamp" mode="both"></ma-date-picker>\n        </md-input-container>\n        <md-input-container ng-if="$ctrl.timeSerie.dateRangeType === \'SPECIFIC\'" flex="100" flex-sm="30" flex-gt-sm="30" flex-order-gt-md="3">\n            <label ma-tr="excelreports.ui.to"></label>\n            <ma-date-picker ng-model="$ctrl.timeSerie.finishTimestamp" mode="both"></ma-date-picker>\n        </md-input-container>\n    \n    </section>\n    \n    <section layout layout-align="space-between center" layout-wrap flex="100" flex-order-gt-md="4">\n\n        <md-input-container flex="100" flex-sm="40" flex-gt-sm="35" flex-order-gt-md="1">\n            <label ma-tr="excelreports.ui.rollupType"></label>\n            <md-select name="rollup" ng-model="$ctrl.timeSerie.rollup" required>\n                <md-option value="NONE" ma-tr="common.rollup.none"></md-option>\n                <md-option value="AVERAGE" ma-tr="common.rollup.average"></md-option>\n                <md-option value="ACCUMULATOR" ma-tr="common.rollup.accumulator"></md-option>\n                <md-option value="COUNT" ma-tr="common.rollup.count"></md-option>\n                <md-option value="DELTA" ma-tr="common.rollup.delta"></md-option>\n                <md-option value="MINIMUM" ma-tr="common.rollup.minimum"></md-option>\n                <md-option value="MAXIMUM" ma-tr="common.rollup.maximum"></md-option>\n                <md-option value="INTEGRAL" ma-tr="common.rollup.integral"></md-option>\n                <md-option value="SUM" ma-tr="common.rollup.sum"></md-option>\n                <md-option value="START" ma-tr="common.rollup.start"></md-option>\n                <md-option value="FIRST" ma-tr="common.rollup.first"></md-option>\n                <md-option value="LAST" ma-tr="common.rollup.last"></md-option>\n            </md-select>\n            <div ng-messages="$ctrl.form.rollup.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n    \n        <md-input-container flex="100" flex-sm="20" flex-gt-sm="30" flex-order-gt-md="6" ng-if="$ctrl.timeSerie.rollup !== \'NONE\'">\n            <label ma-tr="excelreports.ui.rollupPeriod"></label>\n            <input name="rollupPeriod" type="number" min="1" ng-model="$ctrl.timeSerie.rollupPeriodType.periods" required >\n            <div ng-messages="$ctrl.form.rollupPeriod.$error">\n               <div ng-message="required" ma-tr="ui.app.required"></div>\n               <div ng-message="validationMessage" ng-bind="$ctrl.form.rollupPeriod.validationMessage"></div>\n            </div>\n        </md-input-container>\n    \n        <md-input-container flex="100" flex-sm="40" flex-gt-sm="35" flex-order-gt-md="7" ng-if="$ctrl.timeSerie.rollup !== \'NONE\'">\n            <label ma-tr="excelreports.ui.periodType"></label>\n            <md-select name="periodType" ng-model="$ctrl.timeSerie.rollupPeriodType.type" required>\n                <md-option value="SECONDS" ma-tr="dateAndTime.seconds"></md-option>\n                <md-option value="MINUTES" ma-tr="dateAndTime.minutes"></md-option>\n                <md-option value="HOURS" ma-tr="dateAndTime.hours"></md-option>\n                <md-option value="DAYS" ma-tr="dateAndTime.days"></md-option>\n                <md-option value="WEEKS" ma-tr="dateAndTime.weeks"></md-option>\n                <md-option value="MONTHS" ma-tr="dateAndTime.months"></md-option>\n                <md-option value="YEARS" ma-tr="dateAndTime.years"></md-option>\n            </md-select>\n            <div ng-messages="$ctrl.form.periodType.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n\n    </section>\n\n    <div layout flex="100" flex-order-gt-md="5">\n        <h3 ma-tr="excelreports.ui.configureData"></h3> \n    </div>\n       \n    <h4 ma-tr="excelreports.ui.selectPoints" flex-order-gt-md="6"></h4>    \n    <section layout layout-align="space-between center" layout-wrap flex="100" flex-order-gt-md="7">\n        <md-input-container flex="100" flex-gt-sm="45" flex-order-gt-md="1" class="ma-input-space-between" style="margin: 0;">\n            <ma-filtering-point-list ng-model="$ctrl.point" ng-change="$ctrl.addPoint()" limit="20"></ma-filtering-point-list>\n        </md-input-container>\n\n        <md-input-container flex="100" flex-gt-sm="45" flex-order-gt-md="2" class="ma-input-space-between">\n            <label ma-tr="excelreports.ui.locationForTimeValues"></label>\n            <md-select name="locationForTimeValues" ng-model="$ctrl.timeSerie.namedRange" required>\n                <md-option ng-repeat="namedRange in $ctrl.allNamedRanges" value="{{namedRange}}">{{namedRange}}</md-option>\n            </md-select>\n            <div ng-messages="$ctrl.form.locationForTimeValues.$error">\n                <div ng-message="required" ma-tr="ui.app.required"></div>\n            </div>\n        </md-input-container>\n\n        <md-table-container ng-init="tableOrder=\'dataPointDeviceName\'" flex="100" flex-order-gt-md="3" class="ma-input-space-between">\n            <table md-table>\n                <thead md-head md-order="tableOrder">\n                    <tr md-row>\n                        <th md-column md-order-by="dataPointDeviceName" ma-tr="common.deviceName"></th>\n                        <th md-column md-order-by="dataPointName" ma-tr="common.pointName"></th>\n                        <th md-column md-order-by="dataPointXid" ma-tr="excelreports.ui.exportId"></th>\n                        <th md-column ma-tr="excelreports.namedRange"></th>\n                        <th md-column></th>\n                    </tr>\n                </thead>\n                <tbody md-body>\n                    <tr md-row ng-repeat="point in $ctrl.timeSerie.points | orderBy: tableOrder">\n                        <td style="padding-top: 0; padding-bottom: 0;" md-cell>{{ point.dataPointDeviceName }}</td>\n                        <td style="padding-top: 0; padding-bottom: 0;" md-cell>{{ point.dataPointName }}</td>\n                        <td style="padding-top: 0; padding-bottom: 0;" md-cell>{{ point.dataPointXid }}</td>\n                        <td style="padding-top: 0; padding-bottom: 0;" md-cell>\n                            <ma-filtering-named-range-list ng-model="point.namedRange" all-named-ranges="$ctrl.allNamedRanges"></ma-filtering-named-range-list>\n                        </td>\n                        <td style="padding-top: 0; padding-bottom: 0;" md-cell>\n                            <md-button class="md-icon-button" aria-label="Delete Template" ng-click="$ctrl.deletePoint(point)">\n                                <md-tooltip md-direction="bottom" ma-tr="excelreports.ui.deleteTemplate"></md-tooltip>\n                                <md-icon>delete</md-icon>\n                            </md-button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </md-table-container>\n    </section>\n\n</div>'},function(e,t){e.exports='<div layout layout-wrap>\n  <ma-system-setting-editor flex="100" flex-gt-md="50" label-tr="systemSettings.excelreports.purgeReports" key="excelreports.REPORT_PURGE_PERIODS" type="INTEGER" min="1" step="1">\n  </ma-system-setting-editor>\n  <ma-system-setting-editor flex="100" flex-gt-md="50" label-tr="systemSettings.excelreports.purgeReports" key="excelreports.REPORT_PURGE_PERIOD_TYPE" type="INTEGER" input-type="select">\n    <md-option ng-value="4"><span ma-tr="common.tp.days"></span></md-option>\n    <md-option ng-value="5"><span ma-tr="common.tp.weeks"></span></md-option>\n    <md-option ng-value="6"><span ma-tr="common.tp.months"></span></md-option>\n    <md-option ng-value="7"><span ma-tr="common.tp.years"></span></md-option>\n  </ma-system-setting-editor>\n  <ma-system-setting-editor flex="100" flex-gt-md="50" label-tr="systemSettings.excelreports.workItemPriority" key="excelreports.REPORT_WORK_ITEM_PRIORITY" type="INTEGER" input-type="select">\n    <md-option ng-value="1"><span ma-tr="systemSettings.excelreports.highPriority"></span></md-option>\n    <md-option ng-value="2"><span ma-tr="systemSettings.excelreports.mediumPriority"></span></md-option>\n    <md-option ng-value="3"><span ma-tr="systemSettings.excelreports.lowPriority"></span></md-option>\n  </ma-system-setting-editor>\n</div>\n\n<div layout="row" layout-align="start start">\n  <md-button class="md-raised md-warn md-hue-3" ng-click="$ctrl.purgeExcelReports($event, false)">\n    <md-icon>delete</md-icon>&nbsp;<span ma-tr="systemSettings.purgeNow"></span>\n  </md-button>\n  <md-button class="md-raised md-warn" ng-click="$ctrl.purgeExcelReports($event, true)">\n    <md-icon>delete_forever</md-icon>&nbsp;<span ma-tr="systemSettings.excelreports.purgeAllNow"></span>\n  </md-button>\n</div>'},function(e,t){e.exports='<md-button class="md-raised ma-progress-button" ng-disabled="!$ctrl.template || $ctrl.reportStarting || $ctrl.report.state === \'QUEUED\' || $ctrl.report.state === \'RUNNING\'"\n\t\tng-click="$ctrl.runReport($event)">\n\t<div layout layout-align="start center">\n\t\t<md-icon ng-hide="$ctrl.reportStarting || $ctrl.report.state === \'QUEUED\' || $ctrl.report.state === \'RUNNING\'">file_download</md-icon>\n\t\t<md-progress-circular ng-show="$ctrl.reportStarting || $ctrl.report.state === \'QUEUED\' || $ctrl.report.state === \'RUNNING\'" md-mode="indeterminate" md-diameter="20"></md-progress-circular>\n\t\t<span ng-if="!$ctrl.buttonText" ma-tr="excelreports.runReport" ma-tr-args="[$ctrl.template.name]"></span>\n\t\t<span ng-if="$ctrl.buttonText" ng-bind="$ctrl.buttonText"></span>\n\t</div>\n</md-button>\n\n<a ng-href="/rest/v2/excel-reports/download/{{$ctrl.report.xid}}"\n\tng-attr-download="{{$ctrl.report.filename}}" style="display:none">Download report</a>\n'},function(e,t){e.exports='<md-dialog flex="100" flex-gt-sm="90" flex-gt-md="80" flex-gt-lg="70">\n    <form ng-cloak>\n      \n        <md-toolbar>\n            <div class="md-toolbar-tools">\n                <h2 ma-tr="excelreports.ui.configureAndRun"></h2>\n                <span flex></span>\n                <md-button class="md-icon-button" ng-click="$ctrl.close()">\n                    <md-icon>close</md-icon>\n                </md-button>\n            </div>\n        </md-toolbar>\n\n        <md-dialog-content layout="column" class="md-padding" flex>\n\n            <md-input-container flex="100" flex-gt-md="40" class="ma-input-space-between md-block">\n                <md-checkbox ng-model="$ctrl.reportTemplate.email"><span ma-tr="excelreports.emailReport"></span></md-checkbox>\n            </md-input-container>\n\n            <h3 ma-tr="excelreports.timePeriods"></h3>\n            <div class="md-padding" ng-repeat="timeSerie in $ctrl.reportTemplate.timeSeries">\n                <h4>{{ timeSerie.name }}</h4>\n\n                <section layout layout-align="space-between center" layout-wrap flex="100" flex-order-gt-md="3">\n\n                    <md-input-container flex="100" flex-gt-sm="40" flex-order-gt-md="1" class="ma-input-space-between">  \n                        <md-radio-group ng-model="timeSerie.dateRangeType" layout-gt-xs="row" flex="100">\n                            <md-radio-button value="RELATIVE">Relative</md-radio-button>\n                            <md-radio-button value="SPECIFIC">Specific</md-radio-button>\n                        </md-radio-group>\n                    </md-input-container>\n\n                    <md-input-container ng-if="timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="40" flex-gt-sm="20" flex-order-gt-md="2">\n                        <label ma-tr="excelreports.ui.dateType"></label>\n                        <md-select ng-model="timeSerie.relativeDateType" placeholder="Date Type">\n                            <md-option value="PAST">Past</md-option>\n                            <md-option value="PREVIOUS">Previous</md-option>\n                            <md-option value="CURRENT">Current</md-option>\n                            <md-option value="AGO">Ago</md-option>\n                        </md-select>\n                    </md-input-container>\n                \n                    <md-input-container ng-if="timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="20" flex-gt-sm="20" flex-order-gt-md="3">\n                        <label ma-tr="excelreports.ui.periodCount"></label>\n                        <input name="name" type="number" min="1" ng-model="timeSerie.periodCount" required>\n                        <div ng-messages="$ctrl.form.name.$error">\n                            <div ng-message="required" ma-tr="ui.app.required"></div>\n                        </div>\n                    </md-input-container>\n                \n                    <md-input-container ng-if="timeSerie.dateRangeType === \'RELATIVE\'" flex="100" flex-sm="40" flex-gt-sm="20" flex-order-gt-md="4">\n                        <label ma-tr="excelreports.ui.periodType"></label>\n                        <md-select ng-model="timeSerie.periodType" placeholder="Period Type">\n                            <md-option value="SECONDS">Seconds</md-option>\n                            <md-option value="MINUTES">Minutes</md-option>\n                            <md-option value="HOURS">Hours</md-option>\n                            <md-option value="DAYS">Days</md-option>\n                            <md-option value="WEEKS">Weeks</md-option>\n                            <md-option value="MONTHS">Months</md-option>\n                            <md-option value="YEARS">Years</md-option>\n                        </md-select>\n                    </md-input-container>\n                \n                    <md-input-container ng-if="timeSerie.dateRangeType === \'SPECIFIC\'" flex="100" flex-sm="40" flex-gt-sm="30" flex-order-gt-md="1">\n                        <label ma-tr="excelreports.ui.from"></label>\n                        <ma-date-picker ng-model="timeSerie.startTimestamp" ng-change="$ctrl.save()" mode="both"></ma-date-picker>\n                    </md-input-container>\n                    <md-input-container ng-if="timeSerie.dateRangeType === \'SPECIFIC\'" flex="100" flex-sm="40" flex-gt-sm="30" flex-order-gt-md="2">\n                        <label ma-tr="excelreports.ui.to"></label>\n                        <ma-date-picker ng-model="timeSerie.finishTimestamp" mode="both"></ma-date-picker>\n                    </md-input-container>\n\n                </section>\n\n                <h4 ma-tr="excelreports.ui.rollup" flex-order-gt-md="4"></h4>    \n                <section layout layout-align="space-between center" layout-wrap flex="100" flex-order-gt-md="5">\n\n                    <md-input-container flex="100" flex-sm="40" flex-gt-sm="35" flex-order-gt-md="3">\n                        <label ma-tr="excelreports.ui.rollupType"></label>\n                        <md-select ng-model="timeSerie.rollup" placeholder="Date Type">\n                            <md-option value="NONE">None</md-option>\n                            <md-option value="AVERAGE">Average</md-option>\n                            <md-option value="ACCUMULATOR">Accumulator</md-option>\n                            <md-option value="COUNT">Count</md-option>\n                            <md-option value="DELTA">Delta</md-option>\n                            <md-option value="MINIMUM">Minimum</md-option>\n                            <md-option value="MAXIMUM">Maximum</md-option>\n                            <md-option value="INTEGRAL">Integral</md-option>\n                            <md-option value="SUM">Sum</md-option>\n                            <md-option value="START">Start</md-option>\n                            <md-option value="FIRST">First</md-option>\n                            <md-option value="LAST">Last</md-option>\n                        </md-select>\n                    </md-input-container>\n                </section>\n                \n                <md-divider ng-if="!$last"></md-divider>\n                \n            </div>\n\n        </md-dialog-content>\n\n        <md-dialog-actions layout="row" class="md-padding">\n            <md-button class="md-raised md-warn" ng-click="$ctrl.close()" style="margin-top: 20px; margin-bottom: 20px;">\n                <span ma-tr="common.cancel"></span>\n            </md-button>\n            <md-button class="md-raised md-primary" ng-click="$ctrl.save($ctrl.reportTemplate)" style="margin-top: 20px; margin-bottom: 20px;">\n                <span ma-tr="common.save"></span>\n            </md-button>\n        </md-dialog-actions>\n\n    </form>\n</md-dialog>'},function(e,t){e.exports='<md-autocomplete\n    md-selected-item-change="$ctrl.setViewValue()"\n    md-selected-item="$ctrl.selectedNamedRange"\n    md-search-text="$ctrl.searchText"\n    md-items="namedRange in $ctrl.namedRanges"\n    md-search-text-change="$ctrl.searchTextChange($ctrl.searchText)"\n    md-item-text="namedRange"\n    md-no-cache="true"\n    md-min-length="0"\n    md-floating-label=" "\n    md-delay="500"\n    md-select-on-focus="true"\n    md-escape-options="none"\n    md-clear-button="true">\n\n    <md-item-template>\n        <span md-highlight-text="$ctrl.searchText" md-highlight-flags="gi">{{namedRange}}</span>\n    </md-item-template>\n\n    <md-not-found>\n        <span ma-tr="maintenanceEvents.notFound" ma-tr-args="[$ctrl.searchText]"></span>\n    </md-not-found>\n</md-autocomplete>'},function(e,t){e.exports='<div flex layout="column">\n    <div flex layout="column">\n        <ma-ace-editor flex mode="javascript" options="$ctrl.options" editor-loaded="$ctrl.editor = $editor" show-gutter="true" theme="tomorrow_night_bright" ng-change="$ctrl.setViewValue()" ng-model="$ctrl.scriptData.script"></ma-ace-editor>\n    </div>\n    <div flex layout layout-align="space-between top" layout-wrap>\n        <div flex="100" flex-gt-sm="70" flex-gt-md="80">\n            <div ng-if="$ctrl.scriptOutput" flex class="log-bg p-10 overflow-y-scroll max-height-100">\n                <pre>{{ $ctrl.scriptOutput }}</pre>\n            </div>\n            <ul ng-if="$ctrl.scriptErrors" class="my-10">\n                <li ng-repeat="error in $ctrl.scriptErrors" ng-if="error.property" class="color-error">\n                    <pre>{{ error.message }}</pre> on <b>{{ error.property }}</b>\n                </li>\n                <li ng-repeat="error in $ctrl.scriptErrors" ng-if="!error.property" class="color-error">\n                    <pre>{{ error.message }}</pre>\n                </li>\n            </ul>\n            <ul ng-if="$ctrl.scriptActions" class="my-10">\n                <li ng-repeat="action in $ctrl.scriptActions" ng-class="{\'color-error\': action.level === \'error\', \'color-warn\': action.level === \'warning\'}">\n                    <pre ng-if="action.level === \'error\'" class="color-error">{{ action.message }}</pre>\n                    <pre ng-if="action.level === \'warning\'" class="color-warn">{{ action.message }}</pre>\n                    <pre ng-if="action.level !== \'warning\' && action.level !== \'error\'">{{ action.message }}</pre>\n                </li>\n            </ul>\n        </div>\n        <div flex="100" flex-gt-sm="80" flex-gt-md="20" layout layout-align="end top">\n            <md-input-container>\n                <label ma-tr="common.logging.logLevel"></label>\n                <md-select name="relativeDateType" ng-model="$ctrl.scriptData.logLevel">\n                    <md-option value="NONE" ma-tr="common.none"></md-option>\n                    <md-option value="TRACE" ma-tr="common.logging.trace"></md-option>\n                    <md-option value="DEBUG" ma-tr="common.logging.debug"></md-option>\n                    <md-option value="INFO" ma-tr="common.logging.info"></md-option>\n                    <md-option value="WARN" ma-tr="common.logging.warn"></md-option>\n                    <md-option value="ERROR" ma-tr="common.logging.error"></md-option>\n                    <md-option value="FATAL" ma-tr="common.logging.fatal"></md-option>\n                </md-select>\n            </md-input-container>\n            <div>\n                <md-button class="md-raised md-primary" ng-disabled="$ctrl.disabled" ng-click="$ctrl.validate($event)">\n                    <md-icon>done</md-icon> <span ma-tr="scriptingEditor.ui.validate"></span>\n                </md-button>\n            </div>\n        </div>\n        \n    </div>\n</div>'},function(e,t,n){var r=n(14);"string"==typeof r&&(r=[[e.i,r,""]]);var i={insertAt:{before:'meta[name="user-styles-after-here"]'},hmr:!0,transform:void 0,insertInto:void 0};n(16)(r,i);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(15)(!1)).push([e.i,".my-10 {\n    margin-top: 10px; \n    margin-bottom: 10px;\n}\n\n.color-error {\n    color: #F44336;\n}\n\n.color-warn {\n    color: #FDD835;\n}\n\n.p-10 {\n    padding: 10px;\n}\n\n.overflow-y-scroll {\n    overflow-y: scroll;\n}\n\n.max-height-100 {\n    max-height: 100px;\n}\n\n.log-bg {\n    background-color: #272822;\n}",""])},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},i=0;i<this.length;i++){var a=this[i][0];"number"==typeof a&&(r[a]=!0)}for(i=0;i<e.length;i++){var o=e[i];"number"==typeof o[0]&&r[o[0]]||(n&&!o[2]?o[2]=n:n&&(o[2]="("+o[2]+") and ("+n+")"),t.push(o))}},t}},function(e,t,n){var r={},i=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),a=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),o=null,l=0,s=[],m=n(17);function d(e,t){for(var n=0;n<e.length;n++){var i=e[n],a=r[i.id];if(a){a.refs++;for(var o=0;o<a.parts.length;o++)a.parts[o](i.parts[o]);for(;o<i.parts.length;o++)a.parts.push(f(i.parts[o],t))}else{var l=[];for(o=0;o<i.parts.length;o++)l.push(f(i.parts[o],t));r[i.id]={id:i.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},i=0;i<e.length;i++){var a=e[i],o=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[o]?r[o].parts.push(l):n.push(r[o]={id:o,parts:[l]})}return n}function c(e,t){var n=a(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=a(e.insertAt.before,n);n.insertBefore(t,i)}}function u(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function g(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return h(t,e.attrs),c(e,t),t}function h(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function f(e,t){var n,r,i,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var s=l++;n=o||(o=g(t)),r=v.bind(null,n,s,!1),i=v.bind(null,n,s,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",h(t,e.attrs),c(e,t),t}(t),r=function(e,t,n){var r=n.css,i=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&i;(t.convertToAbsoluteUrls||a)&&(r=m(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var o=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(o),l&&URL.revokeObjectURL(l)}.bind(null,n,t),i=function(){u(n),n.href&&URL.revokeObjectURL(n.href)}):(n=g(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),i=function(){u(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var i=[],a=0;a<n.length;a++){var o=n[a];(l=r[o.id]).refs--,i.push(l)}e&&d(p(e,t),t);for(a=0;a<i.length;a++){var l;if(0===(l=i[a]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete r[l.id]}}}};var x=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function v(e,t,n,r){var i=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var i,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(i=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(1),o={bindings:{},template:n.n(a).a},l=n(2),s=n.n(l);const m=Object.freeze(["$rootScope","$state","$mdMedia","$http","maExcelReportTemplate","maDialogHelper","maExcelReportConfigAndRunDialog"]);var d={bindings:{},controller:class{static get $inject(){return m}static get $$ngIsClass(){return!0}constructor(e,t,n,r,i,a,o){this.$rootScope=e,this.$state=t,this.$mdMedia=n,this.$http=r,this.maExcelReportTemplate=i,this.maDialogHelper=a,this.maExcelReportConfigAndRunDialog=o}$onInit(){this.selectedTemplate=null}newTemplate(){this.selectedTemplate=new this.maExcelReportTemplate}change(){}copyTemplate(){const e=new this.maExcelReportTemplate;e.allNamedRanges=this.selectedTemplate.allNamedRanges,e.editPermission=this.selectedTemplate.editPermission,e.emailTemplateFilename=this.selectedTemplate.emailTemplateFilename,e.filename=this.selectedTemplate.filename,e.level="",e.modelType=this.selectedTemplate.modelType,e.name=this.selectedTemplate.name+" (copy)",e.preventPurge=this.selectedTemplate.preventPurge,e.recipients=this.selectedTemplate.recipients,e.reportReadPermission=this.selectedTemplate.reportReadPermission,e.schedule=this.selectedTemplate.schedule,e.scheduleCron=this.selectedTemplate.scheduleCron,e.timeSeries=this.selectedTemplate.timeSeries,e.username=this.selectedTemplate.username,e.validationMessages=this.selectedTemplate.validationMessages,e.zipData=this.selectedTemplate.zipData,this.selectedTemplate=e}deleteTemplate(){this.maDialogHelper.confirm(event,["excelreports.ui.confirmDeleteTemplate"]).then(()=>{this.selectedTemplate.delete().then(()=>{this.selectedTemplate=new this.maExcelReportTemplate,this.$rootScope.$broadcast("templateUpdated",!0),this.$rootScope.$broadcast("newTemplate",!0),this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateDeleted"]})},e=>{this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateNotDeleted"],classes:"md-warn",hideDelay:1e4})})},i.a.noop)}runTemplate(){this.selectedTemplate.run().then(e=>{this.maDialogHelper.toastOptions({textTr:["excelreports.reportState.running"]})},e=>{const t=e.statusText+" — "+(e.data&&e.data.message);this.maDialogHelper.toastOptions({textTr:["excelreports.errorRunningReport",t],classes:"md-warn",hideDelay:1e4})})}scheduleTemplate(e,t){this.maExcelReportConfigAndRunDialog.showDialog({reportTemplate:e},t)}},template:s.a},p=n(3),c=n.n(p);const u=Object.freeze(["$scope","maExcelReport","maDialogHelper","maExcelReportEventManager"]);var g={bindings:{},controller:class{static get $inject(){return u}static get $$ngIsClass(){return!0}constructor(e,t,n,r){this.$scope=e,this.maExcelReport=t,this.maDialogHelper=n,this.maExcelReportEventManager=r}$onInit(){this.maExcelReportEventManager.smartSubscribe(this.$scope,null,["add","update","delete"],this.websocketHandler.bind(this)),this.selectedReports=[],this.getReports()}getReports(){this.maExcelReport.list().then(e=>{this.excelReports=e.reverse()},e=>{console.log(e)})}saveReport(e){e.save().then(e=>{},e=>{console.log(e)})}deleteAllFailed(){this.maDialogHelper.confirm(event,["excelreports.confirmDeleteFailedReports"]).then(()=>{let e;this.maExcelReport.query("state=FAILED").then(t=>{(e=t).forEach(e=>{e.delete().then(e=>{},e=>{console.log(e)})}),this.selectedReports=[],this.getReports()},e=>{console.log(e)})},i.a.noop)}deleteSelected(){this.maDialogHelper.confirm(event,["excelreports.confirmDeleteSelectedReports"]).then(()=>{this.selectedReports.forEach(e=>{e.delete().then(e=>{},e=>{console.log(e)})}),this.selectedReports=[]},i.a.noop)}deleteReport(e){this.maDialogHelper.confirm(event,["excelreports.confirmDeleteSelectedReports"]).then(()=>{e.delete().then(e=>{this.selectedReports=[]},e=>{console.log(e)})},i.a.noop)}websocketHandler(e,t){if("add"===t.action){let e=new this.maExcelReport(t.object);this.excelReports.splice(0,0,e),"FAILED"===e.state&&this.maDialogHelper&&this.maDialogHelper.toastOptions({text:e.errorMessage,classes:"md-warn",hideDelay:1e4})}else"update"===t.action?this.excelReports.map(e=>{e.xid===t.object.xid&&(i.a.merge(e,t.object),"FAILED"===e.state&&this.maDialogHelper&&this.maDialogHelper.toastOptions({text:e.errorMessage,classes:"md-warn",hideDelay:1e4}),"FINISHED"===e.state&&this.maDialogHelper.toastOptions({textTr:["excelreports.reportState.finished"]}))},t.object):"delete"===t.action&&(this.excelReports=this.excelReports.filter(e=>e.xid!==t.object.xid))}},template:c.a},h=n(4),f=n.n(h);const x=Object.freeze(["$scope","$http","maExcelReportTemplate"]);var v={template:f.a,controller:class{static get $inject(){return x}static get $$ngIsClass(){return!0}constructor(e,t,n){this.$scope=e,this.$http=t,this.maExcelReportTemplate=n}$onInit(){this.ngModelCtrl.$render=(()=>this.render()),this.getTemplates()}$onChanges(e){if(e.updatedItem&&this.updatedItem){const e=this.templates.findIndex(e=>e.name===this.updatedItem.name);e>=0?(this.templates[e]=this.updatedItem,this.selected=this.updatedItem):(this.templates.push(this.updatedItem),this.selected=this.templates[this.templates.length-1])}if(e.deletedItem&&this.deletedItem){const e=this.templates.findIndex(e=>e.xid===this.deletedItem.xid);e>=0&&(this.selected=this.updatedItem,this.templates.splice(e,1))}}setViewValue(e){this.ngModelCtrl.$setViewValue(e)}render(){this.selected=this.ngModelCtrl.$viewValue}getTemplates(){this.maExcelReportTemplate.list().then(e=>{this.templates=e})}selectTemplate(){const e=this.selected.copy();this.setViewValue(e)}},bindings:{updatedItem:"<?",deletedItem:"<?"},require:{ngModelCtrl:"ngModel"},transclude:{labelSlot:"?maLabel"},designerInfo:{translation:"excelreports.ui.selectReport",icon:"date_range"}},b=n(5),T=n.n(b);const $=Object.freeze(["$scope","$http","maExcelReportTemplate","maDialogHelper","maExcelReportConfigAndRunDialog"]);var y={template:T.a,controller:class{static get $inject(){return $}static get $$ngIsClass(){return!0}constructor(e,t,n,r,i){this.$scope=e,this.$http=t,this.maExcelReportTemplate=n,this.maDialogHelper=r,this.maExcelReportConfigAndRunDialog=i}$onInit(){this.ngModelCtrl.$render=(()=>this.render()),this.getTemplates(),this.newTemplate()}$onChanges(e){if(e.updatedItem&&this.updatedItem){const e=this.templates.findIndex(e=>e.name===this.updatedItem.name);e>=0?(this.templates[e]=this.updatedItem,this.selectedTemplate=this.updatedItem):(this.templates.push(this.updatedItem),this.selectedTemplate=this.templates[this.templates.length-1]),this.new=!1}if(e.deletedItem&&this.deletedItem){const e=this.templates.findIndex(e=>e.xid===this.deletedItem.xid);e>=0&&(this.selectedTemplate=this.updatedItem,this.templates.splice(e,1),this.newTemplate())}}setViewValue(){this.ngModelCtrl.$setViewValue(this.selectedTemplate)}render(){this.selectedTemplate=this.ngModelCtrl.$viewValue}newTemplate(){this.new=!0,this.selectedTemplate=new this.maExcelReportTemplate,this.setViewValue()}selectTemplate(e){this.new=!1,e.loadNamedRanges().then(t=>{e.allNamedRanges=t.allNamedRanges,this.selectedTemplate=e.copy(),this.setViewValue()})}openMenu(e,t){e.open(t)}getTemplates(){this.maExcelReportTemplate.list().then(e=>{this.templates=e})}getTemplate(e){return this.maExcelReportTemplate.get(e)}copyTemplate(e){const t=new this.maExcelReportTemplate;this.new=!0,t.allNamedRanges=e.allNamedRanges,t.editPermission=e.editPermission,t.emailTemplateFilename=e.emailTemplateFilename,t.filename=e.filename,t.level="",t.modelType=e.modelType,t.name=e.name+" (copy)",t.preventPurge=e.preventPurge,t.recipients=e.recipients,t.reportReadPermission=e.reportReadPermission,t.schedule=e.schedule,t.scheduleCron=e.scheduleCron,t.timeSeries=e.timeSeries,t.username=e.username,t.validationMessages=e.validationMessages,t.zipData=e.zipData,this.selectedTemplate=t,this.setViewValue()}deleteTemplate(e){this.maDialogHelper.confirm(event,["excelreports.ui.confirmDeleteTemplate"]).then(()=>{e.delete().then(()=>{this.newTemplate(),this.getTemplates(),this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateDeleted"]})},e=>{this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateNotDeleted"],classes:"md-warn",hideDelay:1e4})})},i.a.noop)}runTemplate(e){let t=!1;e.timeSeries.forEach(e=>{if(t=this.isTimePeriodNotSpecified(e))return this.maDialogHelper.toastOptions({textTr:["excelreports.reportState.timePeriodNotSpecified"],classes:"md-warn",hideDelay:1e4});e.startTimestamp=new Date(e.startTimestamp).getTime,e.finishTimestamp=new Date(e.finishTimestamp).getTime}),t||e.run().then(e=>{this.maDialogHelper.toastOptions({textTr:["excelreports.reportState.running"]})},e=>{const t=e.statusText+" — "+e.mangoStatusText;this.maDialogHelper.toastOptions({textTr:["excelreports.errorRunningReport",t],classes:"md-warn",hideDelay:1e4})})}scheduleTemplate(e,t){e.timeSeries.forEach(e=>{e.startTimestamp=new Date(e.startTimestamp),e.finishTimestamp=new Date(e.finishTimestamp)}),this.maExcelReportConfigAndRunDialog.showDialog({reportTemplate:e},t)}isTimePeriodNotSpecified(e){return"NOT_SPECIFIED"===e.dateRangeType}},bindings:{updatedItem:"<?",deletedItem:"<?"},require:{ngModelCtrl:"ngModel"},designerInfo:{translation:"excelreports.ui.reportList",icon:"date_range"}},R=n(6),w=n.n(R);const S=Object.freeze(["$scope","$mdMedia","$http","maExcelReportTemplate","maDialogHelper"]);var E={bindings:{itemUpdated:"&?",itemDeleted:"&?"},require:{ngModelCtrl:"ngModel"},controller:class{static get $inject(){return S}static get $$ngIsClass(){return!0}constructor(e,t,n,r,i){this.$scope=e,this.$mdMedia=t,this.$http=n,this.maExcelReportTemplate=r,this.maDialogHelper=i}$onInit(){this.getEmailTemplates(),this.getUsers(),this.getMailingLists(),this.ngModelCtrl.$render=(()=>this.render()),this.$scope.$on("deleteTimePeriod",(e,t)=>{this.deleteTimeSerie(t)}),this.$scope.$watch("$ctrl.template.timeSeries",(e,t)=>{e&&t&&(this.timeSeriesContext=this.getContext(e))},!0)}getContext(e){let t=[];return e.forEach(e=>{e.points.forEach(e=>{t.push({variableName:e.namedRange,xid:e.dataPointXid})})}),t}$onChanges(e){}render(){this.validationMessages=[],this.template=this.ngModelCtrl.$viewValue,this.initScriptsVisibility(),this.template&&!this.template.emailTemplateFilename&&this.emailTemplates&&(this.template.emailTemplateFilename=this.emailTemplates[0].name),this.form&&(this.form.$setPristine(),this.form.$setUntouched())}setViewValue(){this.ngModelCtrl.$setViewValue(this.template)}initScriptsVisibility(){this.template&&""!==this.template.postProcessingScript?this.showPostProcessingScript=!0:this.showPostProcessingScript=!1,this.template&&""!==this.template.emailModelScript?this.showEmailModelScript=!0:this.showEmailModelScript=!1}save(){this.form.$setSubmitted(),this.validationMessages=[],this.template.save().then(()=>{this.updateItem(),this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateSaved"]})},e=>{this.validationMessages=e.data.result.messages,this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateNotSaved",e.mangoStatusText],classes:"md-warn",hideDelay:1e4})})}checkError(e){return this.validationMessages&&this.validationMessages.length?this.validationMessages.filter(t=>t.property.includes(e),e)[0]:null}delete(e){this.maDialogHelper.confirm(e,["excelreports.ui.confirmDeleteTemplate"]).then(()=>{this.template.delete().then(()=>{this.deleteItem(),this.template=new this.maExcelReportTemplate,this.setViewValue(),this.render(),this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateDeleted"]})},e=>{this.maDialogHelper.toastOptions({textTr:["excelreports.ui.reportTemplateNotDeleted"],classes:"md-warn",hideDelay:1e4})})},i.a.noop)}cancel(e){this.updateItem(),this.template=new this.maExcelReportTemplate,this.setViewValue(),this.render()}fileUploaded(e){let t=e.split("/"),n=t.slice(t.indexOf("EXCEL_REPORT_TEMPLATES")+1);this.template.filename=n.join("/"),this.template.loadNamedRanges().then(e=>{this.template.allNamedRanges=e.allNamedRanges})}deleteTimeSerie(e){const t=this.template.timeSeries.indexOf(e);t>-1&&this.template.timeSeries.splice(t,1)}addTimeSerie(){const e=this.template.timeSeries.length+1,t={dateRangeType:"NOT_SPECIFIED",events:[],startTimestamp:new Date,finishTimestamp:new Date,name:"Time Period "+e,namedRange:"",periodCount:1,periodType:"HOURS",points:[],relativeDateType:"PREVIOUS",rollup:"NONE",rollupPeriod:{periods:1,type:"HOURS"}};this.template.timeSeries.push(t)}getEmailTemplates(){this.$http({url:"/rest/v1/excel-report-templates/email-templates",method:"GET"}).then(e=>{this.emailTemplates=e.data.items})}addMailingListXid(e){this.mailingLists.map(t=>{e.xid===t.xid&&(e.name=t.name)})}getUsers(){this.$http({url:"/rest/v1/users",method:"GET"}).then(e=>{this.users=e.data.items},function(e){console.log(e)})}getMailingLists(){this.$http({url:"/rest/v1/mailing-lists",method:"GET"}).then(e=>{this.mailingLists=e.data},function(e){console.log(e)})}addRecipient(){const e={type:"USER",username:this.users[0].username};this.template.recipients.push(e)}deleteRecipient(e){const t=this.template.recipients.indexOf(e);t>-1&&this.template.recipients.splice(t,1)}updateItem(){if("function"==typeof this.itemUpdated){const e=i.a.copy(this.template);this.itemUpdated({$item:e})}}deleteItem(){if("function"==typeof this.itemDeleted){const e=i.a.copy(this.template);this.itemDeleted({$item:e})}}},template:w.a},D=n(7),I=n.n(D);const P=Object.freeze(["$rootScope"]);var M={bindings:{allNamedRanges:"<"},require:{ngModelCtrl:"ngModel"},controller:class{static get $inject(){return P}static get $$ngIsClass(){return!0}constructor(e){this.$rootScope=e}$onInit(){this.ngModelCtrl.$render=(()=>this.render()),this.point=null}$onChanges(e){}setViewValue(){this.ngModelCtrl.$setViewValue(this.timeSerie)}render(){this.validationMessages=[],this.timeSerie=this.ngModelCtrl.$viewValue,this.timeSerie.startTimestamp=new Date(this.timeSerie.startTimestamp),this.timeSerie.finishTimestamp=new Date(this.timeSerie.finishTimestamp),this.form&&(this.form.$setPristine(),this.form.$setUntouched())}addPoint(){const e={dataPointDeviceName:this.point.deviceName,dataPointName:this.point.name,dataPointXid:this.point.xid,namedRange:""};this.timeSerie.points.push(e),this.point=null}delete(){this.$rootScope.$broadcast("deleteTimePeriod",this.timeSerie)}deletePoint(e){const t=this.timeSerie.points.indexOf(e);t>-1&&this.timeSerie.points.splice(t,1)}showValue(){}},template:I.a},O=n(8);const C={template:n.n(O).a,controller:A};function A(e,t){this.purgeExcelReports=function(t,n){return e.confirmSystemAction({event:t,confirmTr:n?"systemSettings.excelreports.purgeAll":"systemSettings.excelreports.purgeUsingSettings",actionName:n?"excelReportPurgeAll":"excelReportPurgeUsingSettings",descriptionTr:"systemSettings.excelreports.purgeAction",resultsTr:"systemSettings.excelreports.purgeSuccess"})}}A.$inject=["maDialogHelper","maSystemActions"];var N=C,k=n(9);var L={template:n.n(k).a,controller:class{static get $inject(){return["maExcelReportTemplate","maExcelReportEventManager","$scope","$element","$timeout","$injector"]}static get $$ngIsClass(){return!0}constructor(e,t,n,r,i,a){this.maExcelReportTemplate=e,this.maExcelReportEventManager=t,this.$scope=n,this.$element=r,this.$timeout=i,a.has("maUiDateBar")&&(this.maUiDateBar=a.get("maUiDateBar")),a.has("maDialogHelper")&&(this.maDialogHelper=a.get("maDialogHelper"))}$onInit(){this.maExcelReportEventManager.smartSubscribe(this.$scope,null,["add","update","delete"],this.websocketHandler.bind(this)),this.aLink=this.$element[0].querySelector("a")}$onChanges(e){e.xid&&this.xid&&this.maExcelReportTemplate.get(this.xid).then(e=>{this.template=e})}runReport(e){const t={email:!!this.sendEmail},n=this.useDateBar&&this.maUiDateBar;if(this.from||this.to||n){const e=n?n.from:this.from,r=n?n.to:this.to,i={dateRangeType:"SPECIFIC",startTimestamp:e.valueOf(),finishTimestamp:r.valueOf()};n&&(null==this.useDateBarRollup||this.useDateBarRollup)&&("POINT_DEFAULT"!==n.rollupType&&(i.rollup=n.rollupType),i.rollupPeriodType={periods:n.rollupIntervals,type:n.rollupIntervalPeriod}),this.allTimeSeries?t.timeSeries=this.template.timeSeries.map(e=>i):Array.isArray(this.timeSeriesNames)?t.timeSeries=this.template.timeSeries.map(e=>this.timeSeriesNames.includes(e.name)?i:e):t.timeSeries=[i]}this.reportStarting=!0,this.template.runWithOptions(t).then(e=>{this.report=e,delete this.reportStarting},e=>{if(delete this.reportStarting,e.data.xid&&(this.report=e.data),this.maDialogHelper){const t=e.statusText+" — "+(e.data&&e.data.message);this.maDialogHelper.toastOptions({textTr:["excelreports.errorRunningReport",t],classes:"md-warn",hideDelay:1e4})}})}websocketHandler(e,t){t.object&&this.report&&t.object.xid===this.report.xid&&("add"===t.action||"update"===t.action?(i.a.merge(this.report,t.object),"FINISHED"===this.report.state&&this.$timeout(()=>{this.aLink.click()}),"FAILED"===this.report.state&&this.maDialogHelper&&this.maDialogHelper.toastOptions({text:this.report.errorMessage,classes:"md-warn",hideDelay:1e4})):"delete"===t.action&&delete this.report)}},bindings:{xid:"@",buttonText:"@?",useDateBar:"<?",useDateBarRollup:"<?",from:"<?",to:"<?",timeSeriesNames:"<?",allTimeSeries:"<?",sendEmail:"<?"},designerInfo:{translation:"excelreports.runExcelReport",icon:"file_download",attributes:{useDateBar:{type:"boolean"},useDateBarRollup:{type:"boolean"},sendEmail:{type:"boolean"}}}};function U(e,t,n){const r="/rest/v2/excel-report-templates",a="/rest/v2/excel-reports",o="XLST_",l={id:-1,allNamedRanges:null,editPermissions:"",email:!0,emailTemplateFilename:null,filename:null,modelType:"EXCEL_REPORT_TEMPLATE",name:"",preventPurge:!1,recipients:[],reportReadPermission:"",schedule:!1,scheduleCron:"",timeSeries:[{dateRangeType:"NOT_SPECIFIED",events:[],startTimestamp:new Date,finishTimestamp:new Date,name:"Time Period 1",namedRange:"",periodCount:1,periodType:"HOURS",points:[],relativeDateType:"PREVIOUS",rollup:"NONE",rollupPeriod:{periods:1,type:"HOURS"}}],emailModelScript:"",postProcessingScript:"",username:"",validationMessages:[],xid:"",zipData:!1};return class extends e{static get defaultProperties(){return l}static get baseUrl(){return r}static get xidPrefix(){return o}loadNamedRanges(){return t({method:"POST",url:r+"/load-named-ranges",data:this}).then(function(e){return i.a.merge({},this,e.data)})}run(){return t({method:"POST",url:a+"/run/"+encodeURIComponent(this.xid),data:null}).then(function(e){return new n(e.data)})}runWithOptions(e){return t({method:"POST",url:a+"/run",data:i.a.merge({},this,e)}).then(function(e){return new n(e.data)})}initialize(){}}}U.$inject=["maRestResource","$http","maExcelReport"];var H=U;function V(e,t){const n="/rest/v2/excel-reports";return class extends e{static get baseUrl(){return n}initialize(){}}}V.$inject=["maRestResource","$http"];var j=V,q=n(10),F=n.n(q);function _(e,t,n,r,i,a,o,l,s){return new class{showDialog(e,t){return a.show({template:F.a,targetEvent:t,clickOutsideToClose:!1,escapeToClose:!1,fullscreen:o("xs")||o("sm"),controllerAs:"$ctrl",bindToController:!0,locals:e,controller:function(){this.close=(()=>{a.cancel()}),this.save=(e=>{e.timeSeries.forEach(e=>{e.startTimestamp&&(e.startTimestamp=new Date(e.startTimestamp).getTime()),e.finishTimestamp&&(e.finishTimestamp=new Date(e.finishTimestamp).getTime())}),e.runWithOptions({}).then(e=>{s.toastOptions({textTr:["excelreports.reportState.running"]}),a.cancel()},e=>{const t=e.statusText+" — "+e.mangoStatusText;s.toastOptions({textTr:["excelreports.errorRunningReport",t],classes:"md-warn",hideDelay:1e4})})})}})}}}_.$inject=["$injector","maTranslate","maSystemActions","$q","maUtil","$mdDialog","$mdMedia","$http","maDialogHelper"];var B=_;function G(e){return new e({url:"/rest/v2/websocket/excel-reports"})}G.$inject=["maEventManager"];var z=G,X=n(11),W=n.n(X);const Y=Object.freeze(["$scope"]);var J={template:W.a,controller:class{static get $inject(){return Y}static get $$ngIsClass(){return!0}constructor(e){this.$scope=e}$onInit(){this.ngModelCtrl.$render=(()=>this.render()),this.namedRanges=this.allNamedRanges}setViewValue(){this.ngModelCtrl.$setViewValue(this.selectedNamedRange)}render(){this.selectedNamedRange=this.ngModelCtrl.$viewValue}searchTextChange(e){this.namedRanges=this.allNamedRanges.filter(t=>t.includes(e))}displayText(e){return e.name}},bindings:{allNamedRanges:"<"},require:{ngModelCtrl:"ngModel"},designerInfo:{translation:"NamedRange.searchForEventsByName",icon:"search"}},K=n(12),Q=n.n(K);const Z=Object.freeze(["$scope","maExcelReportScriptingEditor","maDialogHelper"]);var ee={bindings:{context:"<",resultDataType:"<?",wrapInFunction:"<?",permissions:"<?",url:"@",disabled:"<?",options:"<?"},require:{ngModelCtrl:"ngModel"},controller:class{static get $inject(){return Z}static get $$ngIsClass(){return!0}constructor(e,t,n){this.$scope=e,this.maExcelReportScriptingEditor=t,this.maDialogHelper=n}$onInit(){this.ngModelCtrl.$render=(()=>this.render()),this.highlightLines=[],this.initOptions()}$onChanges(e){}initOptions(){this.options||(this.options={enableLiveAutocompletion:!0})}setHighlightLines(){}getHighlightLines(){}clearHighLightLines(){}setAnnotations(){}clearAnnotations(){}setViewValue(){this.ngModelCtrl.$setViewValue(this.scriptData.script)}render(){this.scriptData=new this.maExcelReportScriptingEditor,this.scriptData.script=this.ngModelCtrl.$viewValue}validate(){this.scriptData.context=this.context,this.resultDataType&&(this.scriptData.resultDataType=this.resultDataType),this.wrapInFunction&&(this.scriptData.wrapInFunction=this.wrapInFunction),this.permissions&&(this.scriptData.permissions=this.permissions),this.scriptErrors=null,this.scriptActions=null,this.scriptOutput=null,this.clearHighLightLines(),this.clearAnnotations(),this.scriptData.validate(this.url).then(e=>{this.scriptErrors=e.errors,this.scriptActions=e.actions,this.scriptOutput=e.scriptOutput,this.getHighlightLines(),this.setHighlightLines(),this.setAnnotations(),this.maDialogHelper.toastOptions({textTr:["scriptingEditor.ui.scriptValidated"],hideDelay:5e3})},e=>{this.scriptErrors=e.data.result.messages,this.maDialogHelper.toastOptions({textTr:["scriptingEditor.ui.scriptError"],hideDelay:5e3})})}},template:Q.a};function te(e){const t="/rest/v2/script/validate",n={wrapInFunction:!1,context:[],logLevel:"ERROR",permissions:[],script:"",resultDataType:null};return class{constructor(e){Object.assign(this,i.a.copy(n),e)}validate(n=t,r={}){return e({method:"POST",url:n,data:this},r).then(e=>e.data)}}}te.$inject=["$http"];var ne=te;n(13),t.default=i.a.module("maExcelReports",["maUiApp"]).component("maExcelReports",o).component("maExcelReportTemplates",d).component("maFinishedInProgressExcelReports",g).component("maExcelReportTemplateSelect",v).component("maExcelReportTemplateList",y).component("maExcelReportSetup",E).component("maExcelReportTimePeriodForm",M).component("maExcelReportsSettings",N).component("maExcelReportRun",L).component("maFilteringNamedRangeList",J).component("maExcelReportScriptingEditor",ee).factory("maExcelReportScriptingEditor",ne).factory("maExcelReportTemplate",H).factory("maExcelReport",j).factory("maExcelReportConfigAndRunDialog",B).factory("maExcelReportEventManager",z).config(["maSystemSettingsProvider","maUiMenuProvider",function(e,t){t.registerMenuItems([{name:"ui.settings.system.excelReports",url:"/excel-reports-settings",template:"<ma-excel-reports-settings></ma-excel-reports-settings>",menuTr:"header.excelreports",menuIcon:"grid_on",menuHidden:!0},{name:"ui.settings.excelReports",url:"/excel-reports",template:"<ma-excel-reports></ma-excel-reports>",menuTr:"header.excelreports",menuIcon:"art_track",params:{noPadding:!0,helpPage:"ui.help.excelReports"},permission:"superadmin"},{name:"ui.help.excelReports",url:"/excel-reports/help",resolve:{viewTemplate:function(){return n.e(1).then(n.t.bind(null,19,7))}},menuTr:"excelreports.help"}]),e.addAuditAlarmLevelSettings([{key:"auditEventAlarmLevel.EXCEL_REPORT",translation:"event.audit.excelreport"},{key:"auditEventAlarmLevel.EXCEL_REPORT_TEMPLATE",translation:"event.audit.excelreporttemplate"}])}])}]).default});