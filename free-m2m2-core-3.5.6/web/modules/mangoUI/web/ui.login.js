(window.webpack_jsonp_mangoUI=window.webpack_jsonp_mangoUI||[]).push([[10],{3342:function(e,t){e.exports='<md-card>\n\t<form name="loginForm" novalidate>\n\t<md-card-title>\n\t  <md-card-title-text>\n\t    <span class="md-headline" ma-tr="login.pleaseSignIn"></span>\n\t  </md-card-title-text>\n\t</md-card-title>\n\t<md-card-content layout="column">\n        <div class="already-logged-in" ng-if="!loggingIn && User.current">\n            <span ma-tr="login.aleadyLoggedIn" ma-tr-args="[User.current.username]"></span>\n            <a ui-sref="ui.dataPointDetails" ma-tr="login.ui.goToUI"></a>\n        </div>\n\n\t\t<md-input-container class="md-icon-float md-block">\n\t      <label for="username" ma-tr="login.userId"></label>\n          <md-icon>person</md-icon>\n\t      <input id="username" name="username" ng-model="username" type="text" autofocus ma-autofocus tabindex="1" required md-no-asterisk aria-label="{{\'login.userId\'|maTr}}">\n\t      <div ng-messages="loginForm.username.$error">\n\t        <div ng-message="required" ma-tr="login.validation.noUsername"></div>\n\t      </div>\n\t    </md-input-container>\n\t    <md-input-container class="md-icon-float md-block">\n          <label for="password" ma-tr="login.password"></label>\n          <md-icon>vpn_key</md-icon>\n\t      <input id="password" name="password" ng-model="password" type="password" tabindex="2" required md-no-asterisk aria-label="{{\'login.password\'|maTr}}">\n\t      <div ng-messages="loginForm.password.$error">\n\t        <div ng-message="required" ma-tr="login.validation.noPassword"></div>\n\t      </div>\n\t    </md-input-container>\n        <div ng-messages="errors" md-colors="{color: \'warn\'}">\n          <div ng-message="invalidLogin" ma-tr="login.ui.loginFailed" ma-tr-args="[invalidLoginMessage]"></div>\n          <div ng-message="otherError" ma-tr="login.error" ma-tr-args="[errors.otherError]"></div>\n        </div>\n\t</md-card-content>\n\t<md-card-actions layout="row" layout-align="start center">\n      <a ui-sref="forgotPassword({username: username})" tabindex="4" ma-tr="login.forgotYourPassword"></a>\n      <div flex></div>\n      <md-button type="submit" ng-click="doLogin()" tabindex="3" ma-tr="login.loginButton" class="md-accent md-raised" aria-label="{{\'login.loginButton\'|maTr}}"></md-button>\n    </md-card-actions>\n    </form>\n</md-card>\n'},3343:function(e,t){e.exports='<md-card>\n\t<form name="$ctrl.resetForm" novalidate>\n    \t<md-card-title>\n    \t  <md-card-title-text>\n    \t    <span class="md-headline" ma-tr="login.passwordReset"></span>\n    \t  </md-card-title-text>\n    \t</md-card-title>\n    \t<md-card-content layout="column">\n\n            <div ng-show="$ctrl.showTokenInput || $ctrl.resetForm.resetToken.$invalid">\n                <md-input-container class="md-icon-float md-block">\n                  <label for="resetToken" ma-tr="login.resetToken"></label>\n                  <md-icon>code</md-icon>\n                  <input id="resetToken" name="resetToken" ng-model="$ctrl.resetToken" autofocus ma-autofocus tabindex="1"\n                        required md-no-asterisk aria-label="{{\'login.resetToken\'|maTr}}" ng-change="$ctrl.parseToken()" ma-jwt-input="{typ: \'pwreset\'}">\n                  <div ng-messages="$ctrl.resetForm.resetToken.$error">\n                    <div ng-message="required" ma-tr="login.validation.noResetToken"></div>\n                    <div ng-message="jwtClaims" ma-tr="login.validation.invalidResetToken"></div>\n                    <div ng-message="jwtExpired" ma-tr="login.validation.resetTokenExpired"></div>\n                    <div ng-message="serverValid" ma-tr="login.validation.invalidResetToken"></div>\n                  </div>\n                </md-input-container>\n            </div>\n            \n    \t    <md-input-container class="md-icon-float md-block">\n              <label for="password" ma-tr="login.newPassword"></label>\n              <md-icon>vpn_key</md-icon>\n    \t      <input id="password" name="password" ng-model="$ctrl.newPassword" type="password" minlength="8" tabindex="2"\n                    required md-no-asterisk aria-label="{{\'login.password\'|maTr}}">\n    \t      <div ng-messages="$ctrl.resetForm.password.$error">\n    \t        <div ng-message="required" ma-tr="login.validation.noPassword"></div>\n                <div ng-message="minlength" ma-tr="login.validation.minLength" ma-tr-args="[8, $ctrl.resetForm.password.$viewValue.length]"></div>\n    \t      </div>\n    \t    </md-input-container>\n            \n            <div ng-show="$ctrl.newPassword">\n                <md-input-container class="md-icon-float md-block">\n                  <label for="confirmPassword" ma-tr="login.confirmPassword"></label>\n                  <md-icon>vpn_key</md-icon>\n                  <input id="confirmPassword" name="confirmPassword" ng-model="$ctrl.confirmPassword" type="password" tabindex="3"\n                        md-no-asterisk aria-label="{{\'login.confirmPassword\'|maTr}}"\n                        ng-pattern="$ctrl.regExpEscape($ctrl.newPassword)" ng-required="!!$ctrl.newPassword">\n                  <div ng-messages="$ctrl.resetForm.confirmPassword.$error">\n                    <div ng-message="required" ma-tr="login.validation.noConfirmPassword"></div>\n                    <div ng-message="pattern" ma-tr="login.validation.wrongConfirmPassword"></div>\n                  </div>\n                </md-input-container>\n            </div>\n            \n            <ma-now output="timeNow" update-interval="1 SECONDS"></ma-now>\n            <p ng-if="$ctrl.claims" style="margin-bottom: 10px;" ma-tr="login.resetMessage"\n                ma-tr-args="[$ctrl.username, ($ctrl.claims.exp * 1000 | maMoment:\'format\':\'LT z\'), ($ctrl.claims.exp * 1000 - timeNow.valueOf() | maDuration:\'humanize\':true)]"></p>\n\n    \t</md-card-content>\n    \t<md-card-actions layout="row" layout-align="start center">\n          <a ui-sref="login" ma-tr="login.loginPage" tabindex="5"></a>\n          <div flex></div>\n          <md-button type="submit" ng-click="$ctrl.doReset()" tabindex="4"\n                ma-tr="login.reset" class="md-accent md-raised"\n                aria-label="{{\'login.reset\'|maTr}}" ng-disabled="$ctrl.disableButton">\n          </md-button>\n        </md-card-actions>\n    </form>\n</md-card>\n'},3344:function(e,t){e.exports='<md-card>\n\t<form name="$ctrl.forgotForm" novalidate>\n    \t<md-card-title>\n    \t  <md-card-title-text>\n    \t    <span class="md-headline" ma-tr="login.forgotPassword"></span>\n    \t  </md-card-title-text>\n    \t</md-card-title>\n    \t<md-card-content layout="column">\n    \t\t<md-input-container class="md-icon-float md-block">\n    \t        <label for="username" ma-tr="login.userId"></label>\n                <md-icon>person</md-icon>\n    \t        <input id="username" name="username" ng-model="$ctrl.username" type="text" autofocus ma-autofocus tabindex="1"\n                    required md-no-asterisk aria-label="{{\'login.userId\'|maTr}}" ng-change="$ctrl.resetServerErrors()">\n                <div ng-messages="$ctrl.forgotForm.username.$error">\n                    <div ng-message="required" ma-tr="login.validation.noUsername"></div>\n                    <div ng-message="userExists" ma-tr="login.validation.noSuchUser"></div>\n                </div>\n    \t    </md-input-container>\n            <md-input-container class="md-icon-float md-block">\n                <md-icon>email</md-icon>\n                <label ma-tr="login.email"></label>\n                <input type="email" name="email" ng-model="$ctrl.email" type="text" tabindex="2"\n                    required md-no-asterisk aria-label="{{\'login.email\'|maTr}}" ng-change="$ctrl.resetServerErrors()">\n                <div ng-messages="$ctrl.forgotForm.email.$error">\n                    <div ng-message="required" ma-tr="login.validation.noEmail"></div>\n                    <div ng-message="emailMatches" ma-tr="login.validation.wrongEmail"></div>\n                    <div ng-message="email" ma-tr="login.validation.invalidEmail"></div>\n                </div>\n            </md-input-container>\n    \t</md-card-content>\n    \t<md-card-actions layout="row" layout-align="start center">\n          <a ui-sref="resetPassword" ma-tr="login.alreadyHaveToken" tabindex="4"></a>\n          <div flex></div>\n          <md-button type="submit" ng-click="$ctrl.sendEmail()" tabindex="3"\n                ma-tr="login.sendEmail" class="md-accent md-raised"\n                aria-label="{{\'login.sendEmail\'|maTr}}" ng-disabled="$ctrl.disableButton">\n          </md-button>\n        </md-card-actions>\n    </form>\n</md-card>\n'},3345:function(e,t){e.exports='<md-card>\n\t<form name="$ctrl.form" novalidate>\n    \t<md-card-title>\n    \t  <md-card-title-text>\n    \t    <span class="md-headline" ma-tr="header.changePasword"></span>\n    \t  </md-card-title-text>\n    \t</md-card-title>\n    \t<md-card-content layout="column">\n            <p ng-if="$ctrl.credentialsExpired" ma-tr="login.credentialsExpired"></p>\n            <md-input-container ng-if="!$ctrl.credentialsExpired" class="md-icon-float md-block">\n              <label for="username" ma-tr="login.userId"></label>\n              <md-icon>person</md-icon>\n              <input id="username" name="username" ng-model="$ctrl.username" type="text" tabindex="1" required ma-autofocus="!$ctrl.credentialsExpired" md-no-asterisk\n                    aria-label="{{\'login.userId\'|maTr}}" ng-change="$ctrl.resetServerErrors()">\n              <div ng-messages="$ctrl.form.username.$error">\n                <div ng-message="required" ma-tr="login.validation.noUsername"></div>\n                <div ng-message="badCredentials" ng-bind="$ctrl.serverError.data.localizedMessage"></div>\n              </div>\n            </md-input-container>\n            <md-input-container ng-if="!$ctrl.credentialsExpired" class="md-icon-float md-block">\n              <label for="password" ma-tr="login.password"></label>\n              <md-icon>vpn_key</md-icon>\n              <input id="password" name="password" ng-model="$ctrl.password" type="password" tabindex="2" required md-no-asterisk\n                    aria-label="{{\'login.password\'|maTr}}" ng-change="$ctrl.resetServerErrors()">\n              <div ng-messages="$ctrl.form.password.$error">\n                <div ng-message="required" ma-tr="login.validation.noPassword"></div>\n                <div ng-message="badCredentials" ng-bind="$ctrl.serverError.data.localizedMessage"></div>\n              </div>\n            </md-input-container>\n    \t\t<md-input-container class="md-icon-float md-block">\n                <md-icon>vpn_key</md-icon>\n    \t        <label for="newPassword" ma-tr="login.newPassword"></label>\n    \t        <input id="newPassword" name="newPassword" ng-model="$ctrl.newPassword" type="password" ma-autofocus="$ctrl.credentialsExpired" tabindex="3"\n                    required md-no-asterisk aria-label="{{\'login.newPassword\'|maTr}}" ng-change="$ctrl.resetServerErrors()">\n                <div ng-messages="$ctrl.form.newPassword.$error">\n                    <div ng-message="required" ma-tr="login.validation.required"></div>\n                    <div ng-message="passwordChangeError" ng-bind="$ctrl.serverError.data.localizedMessage"></div>\n                </div>\n    \t    </md-input-container>\n            <md-input-container class="md-icon-float md-block">\n                <md-icon>vpn_key</md-icon>\n                <label for="confirmNewPassword" ma-tr="login.confirmNewPassword"></label>\n                <input id="confirmNewPassword" name="confirmNewPassword" ng-model="$ctrl.confirmNewPassword" type="password" tabindex="4"\n                    required md-no-asterisk aria-label="{{\'login.confirmNewPassword\'|maTr}}" ng-change="$ctrl.resetServerErrors()" ng-pattern="$ctrl.maUtil.regExpEscape($ctrl.newPassword)">\n                <div ng-messages="$ctrl.form.confirmNewPassword.$error">\n                    <div ng-message="required" ma-tr="login.validation.required"></div>\n                    <div ng-message=pattern ma-tr="login.validation.passwordsDoNotMatch"></div>\n                </div>\n            </md-input-container>\n    \t</md-card-content>\n    \t<md-card-actions layout="row" layout-align="start center">\n          <a ui-sref="login" ma-tr="login.loginPage" tabindex="6"></a>\n          <div flex></div>\n          <md-button type="submit" ng-click="$ctrl.changePassword()" tabindex="5"\n                ma-tr="login.changePassword" class="md-accent md-raised"\n                aria-label="{{\'login.changePassword\'|maTr}}" ng-disabled="$ctrl.disableButton">\n          </md-button>\n        </md-card-actions>\n    </form>\n</md-card>\n'},3518:function(e,t){e.exports='<div flex>\n  <div layout layout-align="center center">\n    <img ng-src="{{uiSettings.logoSrc}}" class="login-logo" ma-tr="header.ui.app.heading">\n  </div>\n  <div layout layout-align="center center">\n    <ma-ui-login flex="100" flex-gt-xs="65" flex-gt-sm="50" flex-gt-md="30" flex-gt-lg="25"></ma-ui-login>\n  </div>\n</div>'},3519:function(e,t,n){"use strict";n.r(t);var a=n(3342),r=n.n(a);function s(e,t,n,a,s,i){return{template:r.a,scope:{},link:function(r,o,d){r.User=e,r.errors={},r.$watchGroup(["username","password"],()=>{delete r.errors.invalidLogin}),r.doLogin=function(){this.loggingIn=!0,n.get(a.defaults.xsrfCookieName)||n.put(a.defaults.xsrfCookieName,t.uuid(),{path:"/"});const r={username:this.username,password:this.password};e.login(r).$promise.then(e=>s.redirect(e),e=>{this.loggingIn=!1,this.errors.invalidLogin=!1,401===e.status?e.data&&"CREDENTIALS_EXPIRED"===e.data.mangoStatusName?i.go("changePassword",Object.assign({credentialsExpired:!0},r)):(this.errors.invalidLogin=!0,this.errors.otherError=!1,this.invalidLoginMessage=e.mangoStatusText):(this.errors.otherError=e.mangoStatusText,delete this.invalidLoginMessage)})}}}}s.$inject=["maUser","maUtil","$cookies","$http","maUiLoginRedirector","$state"],t.default=s},3520:function(e,t){e.exports='<div flex>\n  <div layout layout-align="center center">\n    <img ng-src="{{uiSettings.logoSrc}}" class="login-logo" ma-tr="header.ui.app.heading">\n  </div>\n  <div layout layout-align="center center">\n    <ma-ui-reset-password flex="100" flex-gt-xs="65" flex-gt-sm="50" flex-gt-md="30" flex-gt-lg="25"></ma-ui-reset-password>\n  </div>\n</div>\n'},3521:function(e,t,n){"use strict";n.r(t);var a=n(3343),r=n.n(a);t.default={controller:class{static get $$ngIsClass(){return!0}static get $inject(){return["maUser","maUiLoginRedirector","$stateParams","$timeout","maDialogHelper"]}constructor(e,t,n,a,r){this.maUser=e,this.maUiLoginRedirector=t,this.$stateParams=n,this.$timeout=a,this.maDialogHelper=r}$onInit(){this.$stateParams.resetToken?(this.resetToken=this.$stateParams.resetToken,this.parseToken(),this.$timeout(()=>{this.resetForm.resetToken.$setTouched(!0)},500)):this.showTokenInput=!0}parseToken(){this.resetForm&&this.resetForm.resetToken&&this.resetForm.resetToken.$setValidity("serverValid",!0),this.claims=null,this.username=null;try{const e=this.resetToken.split(".")[1],t=atob(e);this.claims=JSON.parse(t),this.username=this.claims.sub}catch(e){}}doLogin(){return this.maUser.login({username:this.username,password:this.newPassword}).$promise.then(e=>this.maUiLoginRedirector.redirect(e),e=>{this.disableButton=!1,this.showTokenInput=!0,this.maDialogHelper.toastOptions({textTr:["login.validation.invalidLogin"],hideDelay:1e4,classes:"md-warn"})})}doReset(){if(this.parseToken(),this.resetForm.resetToken.$validate(),this.resetForm.$setSubmitted(),!this.resetForm.$invalid)return this.disableButton=!0,this.maUser.passwordReset(this.resetToken,this.newPassword).then(e=>{this.doLogin()},e=>{this.disableButton=!1,this.showTokenInput=!0,400===e.status&&e.data&&4005===e.data.mangoStatusCode?this.resetForm.resetToken.$setValidity("serverValid",!1):this.maDialogHelper.toastOptions({textTr:["login.errorResettingPassword",e.mangoStatusText],hideDelay:1e4,classes:"md-warn"})})}regExpEscape(e){return String(e).replace(/[\\^$*+?.()|[\]{}]/g,"\\$&")}},template:r.a}},3522:function(e,t){e.exports='<div flex>\n  <div layout layout-align="center center">\n    <img ng-src="{{uiSettings.logoSrc}}" class="login-logo" ma-tr="header.ui.app.heading">\n  </div>\n  <div layout layout-align="center center">\n    <ma-ui-forgot-password flex="100" flex-gt-xs="65" flex-gt-sm="50" flex-gt-md="30" flex-gt-lg="25"></ma-ui-forgot-password>\n  </div>\n</div>\n'},3523:function(e,t,n){"use strict";n.r(t);var a=n(3344),r=n.n(a);t.default={controller:class{static get $$ngIsClass(){return!0}static get $inject(){return["maUser","$stateParams","maDialogHelper","$state"]}constructor(e,t,n,a){this.maUser=e,this.$stateParams=t,this.maDialogHelper=n,this.$state=a}$onInit(){this.$stateParams.username&&(this.username=this.$stateParams.username)}resetServerErrors(){this.forgotForm.username.$setValidity("userExists",!0),this.forgotForm.email.$setValidity("emailMatches",!0)}sendEmail(){if(this.forgotForm.$setSubmitted(),!this.forgotForm.$invalid)return this.disableButton=!0,this.maUser.sendPasswordResetEmail(this.username,this.email).then(e=>{this.maDialogHelper.toastOptions({textTr:["login.emailSent",this.email],hideDelay:1e4}),this.$state.go("resetPassword")},e=>{this.disableButton=!1,404===e.status?this.forgotForm.username.$setValidity("userExists",!1):400===e.status&&e.data&&4005===e.data.mangoStatusCode?this.forgotForm.email.$setValidity("emailMatches",!1):this.maDialogHelper.toastOptions({textTr:["login.errorSendingEmail",e.mangoStatusText],hideDelay:1e4,classes:"md-warn"})})}},template:r.a}},3524:function(e,t){e.exports='<div flex>\n  <div layout layout-align="center center">\n    <img ng-src="{{uiSettings.logoSrc}}" class="login-logo" ma-tr="header.ui.app.heading">\n  </div>\n  <div layout layout-align="center center">\n    <ma-ui-change-password flex="100" flex-gt-xs="65" flex-gt-sm="50" flex-gt-md="30" flex-gt-lg="25"></ma-ui-change-password>\n  </div>\n</div>\n'},3525:function(e,t,n){"use strict";n.r(t);var a=n(3345),r=n.n(a);t.default={controller:class{static get $$ngIsClass(){return!0}static get $inject(){return["maUser","$stateParams","maDialogHelper","$state","maUtil","maUiLoginRedirector"]}constructor(e,t,n,a,r,s){this.maUser=e,this.$stateParams=t,this.maDialogHelper=n,this.$state=a,this.maUtil=r,this.maUiLoginRedirector=s}$onInit(){this.$stateParams.credentialsExpired&&(this.credentialsExpired=!0),this.$stateParams.username&&(this.username=this.$stateParams.username),this.$stateParams.password&&(this.password=this.$stateParams.password)}resetServerErrors(){delete this.serverError,this.form.newPassword.$setValidity("passwordChangeError",!0),this.form.username&&this.form.username.$setValidity("badCredentials",!0),this.form.password&&this.form.password.$setValidity("badCredentials",!0)}changePassword(){if(this.form.$setSubmitted(),!this.form.$invalid)return this.disableButton=!0,this.maUser.login({username:this.username,password:this.password,newPassword:this.newPassword}).$promise.then(e=>(this.maDialogHelper.toastOptions({textTr:["login.passwordChanged",this.username],hideDelay:1e4}),this.maUiLoginRedirector.redirect(e)),e=>{this.disableButton=!1,this.serverError=e,401===e.status&&e.data&&"PASSWORD_CHANGE_FAILED"===e.data.mangoStatusName?this.form.newPassword.$setValidity("passwordChangeError",!1):401===e.status&&e.data&&"BAD_CREDENTIALS"===e.data.mangoStatusName?(this.form.username&&this.form.username.$setValidity("badCredentials",!1),this.form.password&&this.form.password.$setValidity("badCredentials",!1)):this.maDialogHelper.toastOptions({textTr:["login.errorChangingPassword",e.mangoStatusText],hideDelay:1e4,classes:"md-warn"})})}},template:r.a}}}]);