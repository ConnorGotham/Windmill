<h3>Overview</h3>
<p>This document describes the method of annotating a valid Mango JSON text and converting it into the form 
used by the module via python script.</p>
<h2>Annotating the JSON</h2>
<p>After acquiring a JSON file you'd like to make a template of, proceed to the various lines you would like to make 
dynamically modified by the template wizard. <b>NOTE: Spaces in your annotations will appear as underscores.</b> Our annotation is very simple:</p> 
<ul><li><p><b>Four dollar signs with or without text separating the sets of two</b> denotes that line of the JSON needs to be accessed by the template. 
Template fields are identified by 1) what attribute 
they modify, 2) what is their spatial relationship with the static field value, and 3) what is the message between the dollar 
signs? These <b>messages</b> will help identify the UI elements during the templating wizard. So, to annotate the line, ' "xid":"someXid", ' 
from an exported JSON, we could modify it to ' "xid":"$$NewXIDPrefix$$someXid", ' or just ' "xid":"$$$$someXid", '.</p>
<p>Note that in both cases the dollar signs occur inside the quotation marks. Were it a numeric value we were trying to grab, we could simply 
not have the quotation marks all together. The first annotation will produce "xid - NewXIDPrefix" with a text box hint of "Prefix" and the second 
will produce "xid" with a hint of "Prefix" again.</p></li>
<li><p><b>Four percent signs <u>with and only with</u> text separating the sets of two</b> denotes a global field. These fields do not evaluate their context, 
so you can reuse them anywhere in the file and, as long as the identifier between the sets is the same, only one field will appear in the template wizard.</p></li></ul>
<h2>Using the python script</h2>
<p>Presuming you have python, you can run the script h2ftl in the "templateConfig/web/scripts" directory one of two ways. Either run 
it from the command line, as "python h2ftl ./input.txt ./output.ftl", or modify the script's default file paths to your input and output 
files. Now move the output ftl file into the templateConfig/web/ftl directory.</p>